
Actividad 1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000009e  00800100  00000a82  00000b16  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000a82  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000023  0080019e  0080019e  00000bb4  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000bb4  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000be4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000140  00000000  00000000  00000c24  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002a71  00000000  00000000  00000d64  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000aeb  00000000  00000000  000037d5  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000d3e  00000000  00000000  000042c0  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000003bc  00000000  00000000  00005000  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000ba6  00000000  00000000  000053bc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001e22  00000000  00000000  00005f62  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000120  00000000  00000000  00007d84  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 5d 00 	jmp	0xba	; 0xba <__ctors_end>
   4:	0c 94 85 00 	jmp	0x10a	; 0x10a <__bad_interrupt>
   8:	0c 94 85 00 	jmp	0x10a	; 0x10a <__bad_interrupt>
   c:	0c 94 85 00 	jmp	0x10a	; 0x10a <__bad_interrupt>
  10:	0c 94 85 00 	jmp	0x10a	; 0x10a <__bad_interrupt>
  14:	0c 94 85 00 	jmp	0x10a	; 0x10a <__bad_interrupt>
  18:	0c 94 85 00 	jmp	0x10a	; 0x10a <__bad_interrupt>
  1c:	0c 94 85 00 	jmp	0x10a	; 0x10a <__bad_interrupt>
  20:	0c 94 85 00 	jmp	0x10a	; 0x10a <__bad_interrupt>
  24:	0c 94 85 00 	jmp	0x10a	; 0x10a <__bad_interrupt>
  28:	0c 94 85 00 	jmp	0x10a	; 0x10a <__bad_interrupt>
  2c:	0c 94 85 00 	jmp	0x10a	; 0x10a <__bad_interrupt>
  30:	0c 94 85 00 	jmp	0x10a	; 0x10a <__bad_interrupt>
  34:	0c 94 85 00 	jmp	0x10a	; 0x10a <__bad_interrupt>
  38:	0c 94 85 00 	jmp	0x10a	; 0x10a <__bad_interrupt>
  3c:	0c 94 85 00 	jmp	0x10a	; 0x10a <__bad_interrupt>
  40:	0c 94 f0 01 	jmp	0x3e0	; 0x3e0 <__vector_16>
  44:	0c 94 85 00 	jmp	0x10a	; 0x10a <__bad_interrupt>
  48:	0c 94 85 00 	jmp	0x10a	; 0x10a <__bad_interrupt>
  4c:	0c 94 85 00 	jmp	0x10a	; 0x10a <__bad_interrupt>
  50:	0c 94 85 00 	jmp	0x10a	; 0x10a <__bad_interrupt>
  54:	0c 94 85 00 	jmp	0x10a	; 0x10a <__bad_interrupt>
  58:	0c 94 85 00 	jmp	0x10a	; 0x10a <__bad_interrupt>
  5c:	0c 94 85 00 	jmp	0x10a	; 0x10a <__bad_interrupt>
  60:	0c 94 85 00 	jmp	0x10a	; 0x10a <__bad_interrupt>
  64:	0c 94 85 00 	jmp	0x10a	; 0x10a <__bad_interrupt>

00000068 <__trampolines_end>:
  68:	00 00       	nop
  6a:	00 00       	nop
  6c:	24 00       	.word	0x0024	; ????
  6e:	27 00       	.word	0x0027	; ????
  70:	2a 00       	.word	0x002a	; ????

00000072 <port_to_output_PGM>:
  72:	00 00 00 00 25 00 28 00 2b 00                       ....%.(.+.

0000007c <digital_pin_to_port_PGM>:
  7c:	04 04 04 04 04 04 04 04 02 02 02 02 02 02 03 03     ................
  8c:	03 03 03 03                                         ....

00000090 <digital_pin_to_bit_mask_PGM>:
  90:	01 02 04 08 10 20 40 80 01 02 04 08 10 20 01 02     ..... @...... ..
  a0:	04 08 10 20                                         ... 

000000a4 <digital_pin_to_timer_PGM>:
  a4:	00 00 00 08 00 02 01 00 00 03 04 07 00 00 00 00     ................
  b4:	00 00 00 00                                         ....

000000b8 <__ctors_start>:
  b8:	d4 04       	cpc	r13, r4

000000ba <__ctors_end>:
  ba:	11 24       	eor	r1, r1
  bc:	1f be       	out	0x3f, r1	; 63
  be:	cf ef       	ldi	r28, 0xFF	; 255
  c0:	d8 e0       	ldi	r29, 0x08	; 8
  c2:	de bf       	out	0x3e, r29	; 62
  c4:	cd bf       	out	0x3d, r28	; 61

000000c6 <__do_copy_data>:
  c6:	11 e0       	ldi	r17, 0x01	; 1
  c8:	a0 e0       	ldi	r26, 0x00	; 0
  ca:	b1 e0       	ldi	r27, 0x01	; 1
  cc:	e2 e8       	ldi	r30, 0x82	; 130
  ce:	fa e0       	ldi	r31, 0x0A	; 10
  d0:	02 c0       	rjmp	.+4      	; 0xd6 <__do_copy_data+0x10>
  d2:	05 90       	lpm	r0, Z+
  d4:	0d 92       	st	X+, r0
  d6:	ae 39       	cpi	r26, 0x9E	; 158
  d8:	b1 07       	cpc	r27, r17
  da:	d9 f7       	brne	.-10     	; 0xd2 <__do_copy_data+0xc>

000000dc <__do_clear_bss>:
  dc:	21 e0       	ldi	r18, 0x01	; 1
  de:	ae e9       	ldi	r26, 0x9E	; 158
  e0:	b1 e0       	ldi	r27, 0x01	; 1
  e2:	01 c0       	rjmp	.+2      	; 0xe6 <.do_clear_bss_start>

000000e4 <.do_clear_bss_loop>:
  e4:	1d 92       	st	X+, r1

000000e6 <.do_clear_bss_start>:
  e6:	a1 3c       	cpi	r26, 0xC1	; 193
  e8:	b2 07       	cpc	r27, r18
  ea:	e1 f7       	brne	.-8      	; 0xe4 <.do_clear_bss_loop>

000000ec <__do_global_ctors>:
  ec:	10 e0       	ldi	r17, 0x00	; 0
  ee:	cd e5       	ldi	r28, 0x5D	; 93
  f0:	d0 e0       	ldi	r29, 0x00	; 0
  f2:	04 c0       	rjmp	.+8      	; 0xfc <__do_global_ctors+0x10>
  f4:	21 97       	sbiw	r28, 0x01	; 1
  f6:	fe 01       	movw	r30, r28
  f8:	0e 94 39 05 	call	0xa72	; 0xa72 <__tablejump2__>
  fc:	cc 35       	cpi	r28, 0x5C	; 92
  fe:	d1 07       	cpc	r29, r17
 100:	c9 f7       	brne	.-14     	; 0xf4 <__do_global_ctors+0x8>
 102:	0e 94 eb 04 	call	0x9d6	; 0x9d6 <main>
 106:	0c 94 3f 05 	jmp	0xa7e	; 0xa7e <_exit>

0000010a <__bad_interrupt>:
 10a:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000010e <micros>:
 10e:	3f b7       	in	r19, 0x3f	; 63
 110:	f8 94       	cli
 112:	80 91 a3 01 	lds	r24, 0x01A3	; 0x8001a3 <timer0_overflow_count>
 116:	90 91 a4 01 	lds	r25, 0x01A4	; 0x8001a4 <timer0_overflow_count+0x1>
 11a:	a0 91 a5 01 	lds	r26, 0x01A5	; 0x8001a5 <timer0_overflow_count+0x2>
 11e:	b0 91 a6 01 	lds	r27, 0x01A6	; 0x8001a6 <timer0_overflow_count+0x3>
 122:	26 b5       	in	r18, 0x26	; 38
 124:	a8 9b       	sbis	0x15, 0	; 21
 126:	05 c0       	rjmp	.+10     	; 0x132 <micros+0x24>
 128:	2f 3f       	cpi	r18, 0xFF	; 255
 12a:	19 f0       	breq	.+6      	; 0x132 <micros+0x24>
 12c:	01 96       	adiw	r24, 0x01	; 1
 12e:	a1 1d       	adc	r26, r1
 130:	b1 1d       	adc	r27, r1
 132:	3f bf       	out	0x3f, r19	; 63
 134:	ba 2f       	mov	r27, r26
 136:	a9 2f       	mov	r26, r25
 138:	98 2f       	mov	r25, r24
 13a:	88 27       	eor	r24, r24
 13c:	82 0f       	add	r24, r18
 13e:	91 1d       	adc	r25, r1
 140:	a1 1d       	adc	r26, r1
 142:	b1 1d       	adc	r27, r1
 144:	bc 01       	movw	r22, r24
 146:	cd 01       	movw	r24, r26
 148:	42 e0       	ldi	r20, 0x02	; 2
 14a:	66 0f       	add	r22, r22
 14c:	77 1f       	adc	r23, r23
 14e:	88 1f       	adc	r24, r24
 150:	99 1f       	adc	r25, r25
 152:	4a 95       	dec	r20
 154:	d1 f7       	brne	.-12     	; 0x14a <micros+0x3c>
 156:	08 95       	ret

00000158 <digitalWrite>:
 158:	90 e0       	ldi	r25, 0x00	; 0
 15a:	fc 01       	movw	r30, r24
 15c:	ec 55       	subi	r30, 0x5C	; 92
 15e:	ff 4f       	sbci	r31, 0xFF	; 255
 160:	24 91       	lpm	r18, Z
 162:	fc 01       	movw	r30, r24
 164:	e0 57       	subi	r30, 0x70	; 112
 166:	ff 4f       	sbci	r31, 0xFF	; 255
 168:	34 91       	lpm	r19, Z
 16a:	fc 01       	movw	r30, r24
 16c:	e4 58       	subi	r30, 0x84	; 132
 16e:	ff 4f       	sbci	r31, 0xFF	; 255
 170:	e4 91       	lpm	r30, Z
 172:	ee 23       	and	r30, r30
 174:	09 f4       	brne	.+2      	; 0x178 <digitalWrite+0x20>
 176:	3c c0       	rjmp	.+120    	; 0x1f0 <digitalWrite+0x98>
 178:	22 23       	and	r18, r18
 17a:	39 f1       	breq	.+78     	; 0x1ca <digitalWrite+0x72>
 17c:	23 30       	cpi	r18, 0x03	; 3
 17e:	91 f0       	breq	.+36     	; 0x1a4 <digitalWrite+0x4c>
 180:	38 f4       	brcc	.+14     	; 0x190 <digitalWrite+0x38>
 182:	21 30       	cpi	r18, 0x01	; 1
 184:	a9 f0       	breq	.+42     	; 0x1b0 <digitalWrite+0x58>
 186:	22 30       	cpi	r18, 0x02	; 2
 188:	01 f5       	brne	.+64     	; 0x1ca <digitalWrite+0x72>
 18a:	84 b5       	in	r24, 0x24	; 36
 18c:	8f 7d       	andi	r24, 0xDF	; 223
 18e:	12 c0       	rjmp	.+36     	; 0x1b4 <digitalWrite+0x5c>
 190:	27 30       	cpi	r18, 0x07	; 7
 192:	91 f0       	breq	.+36     	; 0x1b8 <digitalWrite+0x60>
 194:	28 30       	cpi	r18, 0x08	; 8
 196:	a1 f0       	breq	.+40     	; 0x1c0 <digitalWrite+0x68>
 198:	24 30       	cpi	r18, 0x04	; 4
 19a:	b9 f4       	brne	.+46     	; 0x1ca <digitalWrite+0x72>
 19c:	80 91 80 00 	lds	r24, 0x0080	; 0x800080 <__TEXT_REGION_LENGTH__+0x7e0080>
 1a0:	8f 7d       	andi	r24, 0xDF	; 223
 1a2:	03 c0       	rjmp	.+6      	; 0x1aa <digitalWrite+0x52>
 1a4:	80 91 80 00 	lds	r24, 0x0080	; 0x800080 <__TEXT_REGION_LENGTH__+0x7e0080>
 1a8:	8f 77       	andi	r24, 0x7F	; 127
 1aa:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__TEXT_REGION_LENGTH__+0x7e0080>
 1ae:	0d c0       	rjmp	.+26     	; 0x1ca <digitalWrite+0x72>
 1b0:	84 b5       	in	r24, 0x24	; 36
 1b2:	8f 77       	andi	r24, 0x7F	; 127
 1b4:	84 bd       	out	0x24, r24	; 36
 1b6:	09 c0       	rjmp	.+18     	; 0x1ca <digitalWrite+0x72>
 1b8:	80 91 b0 00 	lds	r24, 0x00B0	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7e00b0>
 1bc:	8f 77       	andi	r24, 0x7F	; 127
 1be:	03 c0       	rjmp	.+6      	; 0x1c6 <digitalWrite+0x6e>
 1c0:	80 91 b0 00 	lds	r24, 0x00B0	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7e00b0>
 1c4:	8f 7d       	andi	r24, 0xDF	; 223
 1c6:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7e00b0>
 1ca:	f0 e0       	ldi	r31, 0x00	; 0
 1cc:	ee 0f       	add	r30, r30
 1ce:	ff 1f       	adc	r31, r31
 1d0:	ee 58       	subi	r30, 0x8E	; 142
 1d2:	ff 4f       	sbci	r31, 0xFF	; 255
 1d4:	a5 91       	lpm	r26, Z+
 1d6:	b4 91       	lpm	r27, Z
 1d8:	9f b7       	in	r25, 0x3f	; 63
 1da:	f8 94       	cli
 1dc:	61 11       	cpse	r22, r1
 1de:	04 c0       	rjmp	.+8      	; 0x1e8 <digitalWrite+0x90>
 1e0:	8c 91       	ld	r24, X
 1e2:	30 95       	com	r19
 1e4:	38 23       	and	r19, r24
 1e6:	02 c0       	rjmp	.+4      	; 0x1ec <digitalWrite+0x94>
 1e8:	ec 91       	ld	r30, X
 1ea:	3e 2b       	or	r19, r30
 1ec:	3c 93       	st	X, r19
 1ee:	9f bf       	out	0x3f, r25	; 63
 1f0:	08 95       	ret

000001f2 <pinMode>:
 1f2:	cf 93       	push	r28
 1f4:	df 93       	push	r29
 1f6:	90 e0       	ldi	r25, 0x00	; 0
 1f8:	fc 01       	movw	r30, r24
 1fa:	e0 57       	subi	r30, 0x70	; 112
 1fc:	ff 4f       	sbci	r31, 0xFF	; 255
 1fe:	24 91       	lpm	r18, Z
 200:	fc 01       	movw	r30, r24
 202:	e4 58       	subi	r30, 0x84	; 132
 204:	ff 4f       	sbci	r31, 0xFF	; 255
 206:	84 91       	lpm	r24, Z
 208:	88 23       	and	r24, r24
 20a:	61 f1       	breq	.+88     	; 0x264 <pinMode+0x72>
 20c:	90 e0       	ldi	r25, 0x00	; 0
 20e:	88 0f       	add	r24, r24
 210:	99 1f       	adc	r25, r25
 212:	fc 01       	movw	r30, r24
 214:	e8 59       	subi	r30, 0x98	; 152
 216:	ff 4f       	sbci	r31, 0xFF	; 255
 218:	c5 91       	lpm	r28, Z+
 21a:	d4 91       	lpm	r29, Z
 21c:	fc 01       	movw	r30, r24
 21e:	ee 58       	subi	r30, 0x8E	; 142
 220:	ff 4f       	sbci	r31, 0xFF	; 255
 222:	a5 91       	lpm	r26, Z+
 224:	b4 91       	lpm	r27, Z
 226:	61 11       	cpse	r22, r1
 228:	09 c0       	rjmp	.+18     	; 0x23c <pinMode+0x4a>
 22a:	9f b7       	in	r25, 0x3f	; 63
 22c:	f8 94       	cli
 22e:	88 81       	ld	r24, Y
 230:	20 95       	com	r18
 232:	82 23       	and	r24, r18
 234:	88 83       	st	Y, r24
 236:	ec 91       	ld	r30, X
 238:	2e 23       	and	r18, r30
 23a:	0b c0       	rjmp	.+22     	; 0x252 <pinMode+0x60>
 23c:	62 30       	cpi	r22, 0x02	; 2
 23e:	61 f4       	brne	.+24     	; 0x258 <pinMode+0x66>
 240:	9f b7       	in	r25, 0x3f	; 63
 242:	f8 94       	cli
 244:	88 81       	ld	r24, Y
 246:	32 2f       	mov	r19, r18
 248:	30 95       	com	r19
 24a:	83 23       	and	r24, r19
 24c:	88 83       	st	Y, r24
 24e:	ec 91       	ld	r30, X
 250:	2e 2b       	or	r18, r30
 252:	2c 93       	st	X, r18
 254:	9f bf       	out	0x3f, r25	; 63
 256:	06 c0       	rjmp	.+12     	; 0x264 <pinMode+0x72>
 258:	8f b7       	in	r24, 0x3f	; 63
 25a:	f8 94       	cli
 25c:	e8 81       	ld	r30, Y
 25e:	2e 2b       	or	r18, r30
 260:	28 83       	st	Y, r18
 262:	8f bf       	out	0x3f, r24	; 63
 264:	df 91       	pop	r29
 266:	cf 91       	pop	r28
 268:	08 95       	ret

0000026a <analogWrite>:
 26a:	1f 93       	push	r17
 26c:	cf 93       	push	r28
 26e:	df 93       	push	r29
 270:	18 2f       	mov	r17, r24
 272:	eb 01       	movw	r28, r22
 274:	61 e0       	ldi	r22, 0x01	; 1
 276:	0e 94 f9 00 	call	0x1f2	; 0x1f2 <pinMode>
 27a:	20 97       	sbiw	r28, 0x00	; 0
 27c:	11 f4       	brne	.+4      	; 0x282 <analogWrite+0x18>
 27e:	60 e0       	ldi	r22, 0x00	; 0
 280:	04 c0       	rjmp	.+8      	; 0x28a <analogWrite+0x20>
 282:	cf 3f       	cpi	r28, 0xFF	; 255
 284:	d1 05       	cpc	r29, r1
 286:	39 f4       	brne	.+14     	; 0x296 <analogWrite+0x2c>
 288:	61 e0       	ldi	r22, 0x01	; 1
 28a:	81 2f       	mov	r24, r17
 28c:	df 91       	pop	r29
 28e:	cf 91       	pop	r28
 290:	1f 91       	pop	r17
 292:	0c 94 ac 00 	jmp	0x158	; 0x158 <digitalWrite>
 296:	e1 2f       	mov	r30, r17
 298:	f0 e0       	ldi	r31, 0x00	; 0
 29a:	ec 55       	subi	r30, 0x5C	; 92
 29c:	ff 4f       	sbci	r31, 0xFF	; 255
 29e:	e4 91       	lpm	r30, Z
 2a0:	e3 30       	cpi	r30, 0x03	; 3
 2a2:	f9 f0       	breq	.+62     	; 0x2e2 <analogWrite+0x78>
 2a4:	48 f4       	brcc	.+18     	; 0x2b8 <analogWrite+0x4e>
 2a6:	e1 30       	cpi	r30, 0x01	; 1
 2a8:	b9 f0       	breq	.+46     	; 0x2d8 <analogWrite+0x6e>
 2aa:	e2 30       	cpi	r30, 0x02	; 2
 2ac:	a1 f5       	brne	.+104    	; 0x316 <analogWrite+0xac>
 2ae:	84 b5       	in	r24, 0x24	; 36
 2b0:	80 62       	ori	r24, 0x20	; 32
 2b2:	84 bd       	out	0x24, r24	; 36
 2b4:	c8 bd       	out	0x28, r28	; 40
 2b6:	34 c0       	rjmp	.+104    	; 0x320 <analogWrite+0xb6>
 2b8:	e7 30       	cpi	r30, 0x07	; 7
 2ba:	e9 f0       	breq	.+58     	; 0x2f6 <analogWrite+0x8c>
 2bc:	e8 30       	cpi	r30, 0x08	; 8
 2be:	19 f1       	breq	.+70     	; 0x306 <analogWrite+0x9c>
 2c0:	e4 30       	cpi	r30, 0x04	; 4
 2c2:	49 f5       	brne	.+82     	; 0x316 <analogWrite+0xac>
 2c4:	80 91 80 00 	lds	r24, 0x0080	; 0x800080 <__TEXT_REGION_LENGTH__+0x7e0080>
 2c8:	80 62       	ori	r24, 0x20	; 32
 2ca:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__TEXT_REGION_LENGTH__+0x7e0080>
 2ce:	d0 93 8b 00 	sts	0x008B, r29	; 0x80008b <__TEXT_REGION_LENGTH__+0x7e008b>
 2d2:	c0 93 8a 00 	sts	0x008A, r28	; 0x80008a <__TEXT_REGION_LENGTH__+0x7e008a>
 2d6:	24 c0       	rjmp	.+72     	; 0x320 <analogWrite+0xb6>
 2d8:	84 b5       	in	r24, 0x24	; 36
 2da:	80 68       	ori	r24, 0x80	; 128
 2dc:	84 bd       	out	0x24, r24	; 36
 2de:	c7 bd       	out	0x27, r28	; 39
 2e0:	1f c0       	rjmp	.+62     	; 0x320 <analogWrite+0xb6>
 2e2:	80 91 80 00 	lds	r24, 0x0080	; 0x800080 <__TEXT_REGION_LENGTH__+0x7e0080>
 2e6:	80 68       	ori	r24, 0x80	; 128
 2e8:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__TEXT_REGION_LENGTH__+0x7e0080>
 2ec:	d0 93 89 00 	sts	0x0089, r29	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
 2f0:	c0 93 88 00 	sts	0x0088, r28	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
 2f4:	15 c0       	rjmp	.+42     	; 0x320 <analogWrite+0xb6>
 2f6:	80 91 b0 00 	lds	r24, 0x00B0	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7e00b0>
 2fa:	80 68       	ori	r24, 0x80	; 128
 2fc:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7e00b0>
 300:	c0 93 b3 00 	sts	0x00B3, r28	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7e00b3>
 304:	0d c0       	rjmp	.+26     	; 0x320 <analogWrite+0xb6>
 306:	80 91 b0 00 	lds	r24, 0x00B0	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7e00b0>
 30a:	80 62       	ori	r24, 0x20	; 32
 30c:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7e00b0>
 310:	c0 93 b4 00 	sts	0x00B4, r28	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7e00b4>
 314:	05 c0       	rjmp	.+10     	; 0x320 <analogWrite+0xb6>
 316:	c0 38       	cpi	r28, 0x80	; 128
 318:	d1 05       	cpc	r29, r1
 31a:	0c f0       	brlt	.+2      	; 0x31e <analogWrite+0xb4>
 31c:	b5 cf       	rjmp	.-150    	; 0x288 <analogWrite+0x1e>
 31e:	af cf       	rjmp	.-162    	; 0x27e <analogWrite+0x14>
 320:	df 91       	pop	r29
 322:	cf 91       	pop	r28
 324:	1f 91       	pop	r17
 326:	08 95       	ret

00000328 <analogRead>:
 328:	8e 30       	cpi	r24, 0x0E	; 14
 32a:	08 f0       	brcs	.+2      	; 0x32e <analogRead+0x6>
 32c:	8e 50       	subi	r24, 0x0E	; 14
 32e:	87 70       	andi	r24, 0x07	; 7
 330:	80 64       	ori	r24, 0x40	; 64
 332:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
 336:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
 33a:	80 64       	ori	r24, 0x40	; 64
 33c:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
 340:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
 344:	86 fd       	sbrc	r24, 6
 346:	fc cf       	rjmp	.-8      	; 0x340 <analogRead+0x18>
 348:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
 34c:	20 91 79 00 	lds	r18, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
 350:	90 e0       	ldi	r25, 0x00	; 0
 352:	92 2b       	or	r25, r18
 354:	08 95       	ret

00000356 <delayMicroseconds>:
 356:	82 30       	cpi	r24, 0x02	; 2
 358:	91 05       	cpc	r25, r1
 35a:	38 f0       	brcs	.+14     	; 0x36a <delayMicroseconds+0x14>
 35c:	88 0f       	add	r24, r24
 35e:	99 1f       	adc	r25, r25
 360:	88 0f       	add	r24, r24
 362:	99 1f       	adc	r25, r25
 364:	05 97       	sbiw	r24, 0x05	; 5
 366:	01 97       	sbiw	r24, 0x01	; 1
 368:	f1 f7       	brne	.-4      	; 0x366 <delayMicroseconds+0x10>
 36a:	08 95       	ret

0000036c <delay>:
 36c:	8f 92       	push	r8
 36e:	9f 92       	push	r9
 370:	af 92       	push	r10
 372:	bf 92       	push	r11
 374:	cf 92       	push	r12
 376:	df 92       	push	r13
 378:	ef 92       	push	r14
 37a:	ff 92       	push	r15
 37c:	6b 01       	movw	r12, r22
 37e:	7c 01       	movw	r14, r24
 380:	0e 94 87 00 	call	0x10e	; 0x10e <micros>
 384:	4b 01       	movw	r8, r22
 386:	5c 01       	movw	r10, r24
 388:	c1 14       	cp	r12, r1
 38a:	d1 04       	cpc	r13, r1
 38c:	e1 04       	cpc	r14, r1
 38e:	f1 04       	cpc	r15, r1
 390:	f1 f0       	breq	.+60     	; 0x3ce <delay+0x62>
 392:	0e 94 87 00 	call	0x10e	; 0x10e <micros>
 396:	dc 01       	movw	r26, r24
 398:	cb 01       	movw	r24, r22
 39a:	88 19       	sub	r24, r8
 39c:	99 09       	sbc	r25, r9
 39e:	aa 09       	sbc	r26, r10
 3a0:	bb 09       	sbc	r27, r11
 3a2:	88 3e       	cpi	r24, 0xE8	; 232
 3a4:	93 40       	sbci	r25, 0x03	; 3
 3a6:	a1 05       	cpc	r26, r1
 3a8:	b1 05       	cpc	r27, r1
 3aa:	70 f3       	brcs	.-36     	; 0x388 <delay+0x1c>
 3ac:	21 e0       	ldi	r18, 0x01	; 1
 3ae:	c2 1a       	sub	r12, r18
 3b0:	d1 08       	sbc	r13, r1
 3b2:	e1 08       	sbc	r14, r1
 3b4:	f1 08       	sbc	r15, r1
 3b6:	88 ee       	ldi	r24, 0xE8	; 232
 3b8:	88 0e       	add	r8, r24
 3ba:	83 e0       	ldi	r24, 0x03	; 3
 3bc:	98 1e       	adc	r9, r24
 3be:	a1 1c       	adc	r10, r1
 3c0:	b1 1c       	adc	r11, r1
 3c2:	c1 14       	cp	r12, r1
 3c4:	d1 04       	cpc	r13, r1
 3c6:	e1 04       	cpc	r14, r1
 3c8:	f1 04       	cpc	r15, r1
 3ca:	19 f7       	brne	.-58     	; 0x392 <delay+0x26>
 3cc:	dd cf       	rjmp	.-70     	; 0x388 <delay+0x1c>
 3ce:	ff 90       	pop	r15
 3d0:	ef 90       	pop	r14
 3d2:	df 90       	pop	r13
 3d4:	cf 90       	pop	r12
 3d6:	bf 90       	pop	r11
 3d8:	af 90       	pop	r10
 3da:	9f 90       	pop	r9
 3dc:	8f 90       	pop	r8
 3de:	08 95       	ret

000003e0 <__vector_16>:
 3e0:	1f 92       	push	r1
 3e2:	0f 92       	push	r0
 3e4:	0f b6       	in	r0, 0x3f	; 63
 3e6:	0f 92       	push	r0
 3e8:	11 24       	eor	r1, r1
 3ea:	2f 93       	push	r18
 3ec:	3f 93       	push	r19
 3ee:	8f 93       	push	r24
 3f0:	9f 93       	push	r25
 3f2:	af 93       	push	r26
 3f4:	bf 93       	push	r27
 3f6:	80 91 9f 01 	lds	r24, 0x019F	; 0x80019f <timer0_millis>
 3fa:	90 91 a0 01 	lds	r25, 0x01A0	; 0x8001a0 <timer0_millis+0x1>
 3fe:	a0 91 a1 01 	lds	r26, 0x01A1	; 0x8001a1 <timer0_millis+0x2>
 402:	b0 91 a2 01 	lds	r27, 0x01A2	; 0x8001a2 <timer0_millis+0x3>
 406:	30 91 9e 01 	lds	r19, 0x019E	; 0x80019e <__data_end>
 40a:	23 e0       	ldi	r18, 0x03	; 3
 40c:	23 0f       	add	r18, r19
 40e:	2d 37       	cpi	r18, 0x7D	; 125
 410:	20 f4       	brcc	.+8      	; 0x41a <__LOCK_REGION_LENGTH__+0x1a>
 412:	01 96       	adiw	r24, 0x01	; 1
 414:	a1 1d       	adc	r26, r1
 416:	b1 1d       	adc	r27, r1
 418:	05 c0       	rjmp	.+10     	; 0x424 <__LOCK_REGION_LENGTH__+0x24>
 41a:	26 e8       	ldi	r18, 0x86	; 134
 41c:	23 0f       	add	r18, r19
 41e:	02 96       	adiw	r24, 0x02	; 2
 420:	a1 1d       	adc	r26, r1
 422:	b1 1d       	adc	r27, r1
 424:	20 93 9e 01 	sts	0x019E, r18	; 0x80019e <__data_end>
 428:	80 93 9f 01 	sts	0x019F, r24	; 0x80019f <timer0_millis>
 42c:	90 93 a0 01 	sts	0x01A0, r25	; 0x8001a0 <timer0_millis+0x1>
 430:	a0 93 a1 01 	sts	0x01A1, r26	; 0x8001a1 <timer0_millis+0x2>
 434:	b0 93 a2 01 	sts	0x01A2, r27	; 0x8001a2 <timer0_millis+0x3>
 438:	80 91 a3 01 	lds	r24, 0x01A3	; 0x8001a3 <timer0_overflow_count>
 43c:	90 91 a4 01 	lds	r25, 0x01A4	; 0x8001a4 <timer0_overflow_count+0x1>
 440:	a0 91 a5 01 	lds	r26, 0x01A5	; 0x8001a5 <timer0_overflow_count+0x2>
 444:	b0 91 a6 01 	lds	r27, 0x01A6	; 0x8001a6 <timer0_overflow_count+0x3>
 448:	01 96       	adiw	r24, 0x01	; 1
 44a:	a1 1d       	adc	r26, r1
 44c:	b1 1d       	adc	r27, r1
 44e:	80 93 a3 01 	sts	0x01A3, r24	; 0x8001a3 <timer0_overflow_count>
 452:	90 93 a4 01 	sts	0x01A4, r25	; 0x8001a4 <timer0_overflow_count+0x1>
 456:	a0 93 a5 01 	sts	0x01A5, r26	; 0x8001a5 <timer0_overflow_count+0x2>
 45a:	b0 93 a6 01 	sts	0x01A6, r27	; 0x8001a6 <timer0_overflow_count+0x3>
 45e:	bf 91       	pop	r27
 460:	af 91       	pop	r26
 462:	9f 91       	pop	r25
 464:	8f 91       	pop	r24
 466:	3f 91       	pop	r19
 468:	2f 91       	pop	r18
 46a:	0f 90       	pop	r0
 46c:	0f be       	out	0x3f, r0	; 63
 46e:	0f 90       	pop	r0
 470:	1f 90       	pop	r1
 472:	18 95       	reti

00000474 <_ZN5Print5printEPKc>:
 474:	61 15       	cp	r22, r1
 476:	71 05       	cpc	r23, r1
 478:	79 f0       	breq	.+30     	; 0x498 <_ZN5Print5printEPKc+0x24>
 47a:	fb 01       	movw	r30, r22
 47c:	01 90       	ld	r0, Z+
 47e:	00 20       	and	r0, r0
 480:	e9 f7       	brne	.-6      	; 0x47c <_ZN5Print5printEPKc+0x8>
 482:	31 97       	sbiw	r30, 0x01	; 1
 484:	af 01       	movw	r20, r30
 486:	46 1b       	sub	r20, r22
 488:	57 0b       	sbc	r21, r23
 48a:	dc 01       	movw	r26, r24
 48c:	ed 91       	ld	r30, X+
 48e:	fc 91       	ld	r31, X
 490:	02 80       	ldd	r0, Z+2	; 0x02
 492:	f3 81       	ldd	r31, Z+3	; 0x03
 494:	e0 2d       	mov	r30, r0
 496:	09 94       	ijmp
 498:	80 e0       	ldi	r24, 0x00	; 0
 49a:	90 e0       	ldi	r25, 0x00	; 0
 49c:	08 95       	ret

0000049e <_ZN5Print5writeEPKhj>:
 49e:	cf 92       	push	r12
 4a0:	df 92       	push	r13
 4a2:	ef 92       	push	r14
 4a4:	ff 92       	push	r15
 4a6:	0f 93       	push	r16
 4a8:	1f 93       	push	r17
 4aa:	cf 93       	push	r28
 4ac:	df 93       	push	r29
 4ae:	6c 01       	movw	r12, r24
 4b0:	7a 01       	movw	r14, r20
 4b2:	8b 01       	movw	r16, r22
 4b4:	c0 e0       	ldi	r28, 0x00	; 0
 4b6:	d0 e0       	ldi	r29, 0x00	; 0
 4b8:	ce 15       	cp	r28, r14
 4ba:	df 05       	cpc	r29, r15
 4bc:	81 f0       	breq	.+32     	; 0x4de <_ZN5Print5writeEPKhj+0x40>
 4be:	d8 01       	movw	r26, r16
 4c0:	6d 91       	ld	r22, X+
 4c2:	8d 01       	movw	r16, r26
 4c4:	d6 01       	movw	r26, r12
 4c6:	ed 91       	ld	r30, X+
 4c8:	fc 91       	ld	r31, X
 4ca:	01 90       	ld	r0, Z+
 4cc:	f0 81       	ld	r31, Z
 4ce:	e0 2d       	mov	r30, r0
 4d0:	c6 01       	movw	r24, r12
 4d2:	09 95       	icall
 4d4:	89 2b       	or	r24, r25
 4d6:	11 f0       	breq	.+4      	; 0x4dc <_ZN5Print5writeEPKhj+0x3e>
 4d8:	21 96       	adiw	r28, 0x01	; 1
 4da:	ee cf       	rjmp	.-36     	; 0x4b8 <_ZN5Print5writeEPKhj+0x1a>
 4dc:	7e 01       	movw	r14, r28
 4de:	c7 01       	movw	r24, r14
 4e0:	df 91       	pop	r29
 4e2:	cf 91       	pop	r28
 4e4:	1f 91       	pop	r17
 4e6:	0f 91       	pop	r16
 4e8:	ff 90       	pop	r15
 4ea:	ef 90       	pop	r14
 4ec:	df 90       	pop	r13
 4ee:	cf 90       	pop	r12
 4f0:	08 95       	ret

000004f2 <_ZN5Print17availableForWriteEv>:
  location &= 0x7; // we only have 8 locations 0-7
  command(LCD_SETCGRAMADDR | (location << 3));
  for (int i=0; i<8; i++) {
    write(charmap[i]);
  }
}
 4f2:	80 e0       	ldi	r24, 0x00	; 0
 4f4:	90 e0       	ldi	r25, 0x00	; 0
 4f6:	08 95       	ret

000004f8 <_ZN5Print5flushEv>:
 4f8:	08 95       	ret

000004fa <_ZN13LiquidCrystal11pulseEnableEv>:
 4fa:	cf 93       	push	r28
 4fc:	df 93       	push	r29
 4fe:	ec 01       	movw	r28, r24
 500:	60 e0       	ldi	r22, 0x00	; 0
 502:	8e 81       	ldd	r24, Y+6	; 0x06
 504:	0e 94 ac 00 	call	0x158	; 0x158 <digitalWrite>
 508:	81 e0       	ldi	r24, 0x01	; 1
 50a:	90 e0       	ldi	r25, 0x00	; 0
 50c:	0e 94 ab 01 	call	0x356	; 0x356 <delayMicroseconds>
 510:	61 e0       	ldi	r22, 0x01	; 1
 512:	8e 81       	ldd	r24, Y+6	; 0x06
 514:	0e 94 ac 00 	call	0x158	; 0x158 <digitalWrite>
 518:	81 e0       	ldi	r24, 0x01	; 1
 51a:	90 e0       	ldi	r25, 0x00	; 0
 51c:	0e 94 ab 01 	call	0x356	; 0x356 <delayMicroseconds>
 520:	60 e0       	ldi	r22, 0x00	; 0
 522:	8e 81       	ldd	r24, Y+6	; 0x06
 524:	0e 94 ac 00 	call	0x158	; 0x158 <digitalWrite>
 528:	84 e6       	ldi	r24, 0x64	; 100
 52a:	90 e0       	ldi	r25, 0x00	; 0
 52c:	0e 94 ab 01 	call	0x356	; 0x356 <delayMicroseconds>
 530:	df 91       	pop	r29
 532:	cf 91       	pop	r28
 534:	08 95       	ret

00000536 <_ZN13LiquidCrystal10write4bitsEh>:
 536:	cf 92       	push	r12
 538:	df 92       	push	r13
 53a:	ef 92       	push	r14
 53c:	ff 92       	push	r15
 53e:	0f 93       	push	r16
 540:	1f 93       	push	r17
 542:	cf 93       	push	r28
 544:	df 93       	push	r29
 546:	6c 01       	movw	r12, r24
 548:	8c 01       	movw	r16, r24
 54a:	09 5f       	subi	r16, 0xF9	; 249
 54c:	1f 4f       	sbci	r17, 0xFF	; 255
 54e:	c0 e0       	ldi	r28, 0x00	; 0
 550:	d0 e0       	ldi	r29, 0x00	; 0
 552:	e6 2e       	mov	r14, r22
 554:	f1 2c       	mov	r15, r1
 556:	b7 01       	movw	r22, r14
 558:	0c 2e       	mov	r0, r28
 55a:	02 c0       	rjmp	.+4      	; 0x560 <_ZN13LiquidCrystal10write4bitsEh+0x2a>
 55c:	75 95       	asr	r23
 55e:	67 95       	ror	r22
 560:	0a 94       	dec	r0
 562:	e2 f7       	brpl	.-8      	; 0x55c <_ZN13LiquidCrystal10write4bitsEh+0x26>
 564:	61 70       	andi	r22, 0x01	; 1
 566:	f8 01       	movw	r30, r16
 568:	81 91       	ld	r24, Z+
 56a:	8f 01       	movw	r16, r30
 56c:	0e 94 ac 00 	call	0x158	; 0x158 <digitalWrite>
 570:	21 96       	adiw	r28, 0x01	; 1
 572:	c4 30       	cpi	r28, 0x04	; 4
 574:	d1 05       	cpc	r29, r1
 576:	79 f7       	brne	.-34     	; 0x556 <_ZN13LiquidCrystal10write4bitsEh+0x20>
 578:	c6 01       	movw	r24, r12
 57a:	0e 94 7d 02 	call	0x4fa	; 0x4fa <_ZN13LiquidCrystal11pulseEnableEv>
 57e:	df 91       	pop	r29
 580:	cf 91       	pop	r28
 582:	1f 91       	pop	r17
 584:	0f 91       	pop	r16
 586:	ff 90       	pop	r15
 588:	ef 90       	pop	r14
 58a:	df 90       	pop	r13
 58c:	cf 90       	pop	r12
 58e:	08 95       	ret

00000590 <_ZN13LiquidCrystal10write8bitsEh>:
 590:	cf 92       	push	r12
 592:	df 92       	push	r13
 594:	ef 92       	push	r14
 596:	ff 92       	push	r15
 598:	0f 93       	push	r16
 59a:	1f 93       	push	r17
 59c:	cf 93       	push	r28
 59e:	df 93       	push	r29
 5a0:	6c 01       	movw	r12, r24
 5a2:	8c 01       	movw	r16, r24
 5a4:	09 5f       	subi	r16, 0xF9	; 249
 5a6:	1f 4f       	sbci	r17, 0xFF	; 255
 5a8:	c0 e0       	ldi	r28, 0x00	; 0
 5aa:	d0 e0       	ldi	r29, 0x00	; 0
 5ac:	e6 2e       	mov	r14, r22
 5ae:	f1 2c       	mov	r15, r1
 5b0:	b7 01       	movw	r22, r14
 5b2:	0c 2e       	mov	r0, r28
 5b4:	02 c0       	rjmp	.+4      	; 0x5ba <_ZN13LiquidCrystal10write8bitsEh+0x2a>
 5b6:	75 95       	asr	r23
 5b8:	67 95       	ror	r22
 5ba:	0a 94       	dec	r0
 5bc:	e2 f7       	brpl	.-8      	; 0x5b6 <_ZN13LiquidCrystal10write8bitsEh+0x26>
 5be:	61 70       	andi	r22, 0x01	; 1
 5c0:	f8 01       	movw	r30, r16
 5c2:	81 91       	ld	r24, Z+
 5c4:	8f 01       	movw	r16, r30
 5c6:	0e 94 ac 00 	call	0x158	; 0x158 <digitalWrite>
 5ca:	21 96       	adiw	r28, 0x01	; 1
 5cc:	c8 30       	cpi	r28, 0x08	; 8
 5ce:	d1 05       	cpc	r29, r1
 5d0:	79 f7       	brne	.-34     	; 0x5b0 <_ZN13LiquidCrystal10write8bitsEh+0x20>
 5d2:	c6 01       	movw	r24, r12
 5d4:	0e 94 7d 02 	call	0x4fa	; 0x4fa <_ZN13LiquidCrystal11pulseEnableEv>
 5d8:	df 91       	pop	r29
 5da:	cf 91       	pop	r28
 5dc:	1f 91       	pop	r17
 5de:	0f 91       	pop	r16
 5e0:	ff 90       	pop	r15
 5e2:	ef 90       	pop	r14
 5e4:	df 90       	pop	r13
 5e6:	cf 90       	pop	r12
 5e8:	08 95       	ret

000005ea <_ZN13LiquidCrystal4sendEhh>:
 5ea:	1f 93       	push	r17
 5ec:	cf 93       	push	r28
 5ee:	df 93       	push	r29
 5f0:	ec 01       	movw	r28, r24
 5f2:	16 2f       	mov	r17, r22
 5f4:	64 2f       	mov	r22, r20
 5f6:	8c 81       	ldd	r24, Y+4	; 0x04
 5f8:	0e 94 ac 00 	call	0x158	; 0x158 <digitalWrite>
 5fc:	8d 81       	ldd	r24, Y+5	; 0x05
 5fe:	8f 3f       	cpi	r24, 0xFF	; 255
 600:	19 f0       	breq	.+6      	; 0x608 <_ZN13LiquidCrystal4sendEhh+0x1e>
 602:	60 e0       	ldi	r22, 0x00	; 0
 604:	0e 94 ac 00 	call	0x158	; 0x158 <digitalWrite>
 608:	8f 85       	ldd	r24, Y+15	; 0x0f
 60a:	84 ff       	sbrs	r24, 4
 60c:	05 c0       	rjmp	.+10     	; 0x618 <_ZN13LiquidCrystal4sendEhh+0x2e>
 60e:	61 2f       	mov	r22, r17
 610:	ce 01       	movw	r24, r28
 612:	0e 94 c8 02 	call	0x590	; 0x590 <_ZN13LiquidCrystal10write8bitsEh>
 616:	11 c0       	rjmp	.+34     	; 0x63a <_ZN13LiquidCrystal4sendEhh+0x50>
 618:	61 2f       	mov	r22, r17
 61a:	70 e0       	ldi	r23, 0x00	; 0
 61c:	75 95       	asr	r23
 61e:	67 95       	ror	r22
 620:	75 95       	asr	r23
 622:	67 95       	ror	r22
 624:	75 95       	asr	r23
 626:	67 95       	ror	r22
 628:	75 95       	asr	r23
 62a:	67 95       	ror	r22
 62c:	ce 01       	movw	r24, r28
 62e:	0e 94 9b 02 	call	0x536	; 0x536 <_ZN13LiquidCrystal10write4bitsEh>
 632:	61 2f       	mov	r22, r17
 634:	ce 01       	movw	r24, r28
 636:	0e 94 9b 02 	call	0x536	; 0x536 <_ZN13LiquidCrystal10write4bitsEh>
 63a:	df 91       	pop	r29
 63c:	cf 91       	pop	r28
 63e:	1f 91       	pop	r17
 640:	08 95       	ret

00000642 <_ZN13LiquidCrystal5clearEv>:
 642:	40 e0       	ldi	r20, 0x00	; 0
 644:	61 e0       	ldi	r22, 0x01	; 1
 646:	0e 94 f5 02 	call	0x5ea	; 0x5ea <_ZN13LiquidCrystal4sendEhh>
 64a:	80 ed       	ldi	r24, 0xD0	; 208
 64c:	97 e0       	ldi	r25, 0x07	; 7
 64e:	0e 94 ab 01 	call	0x356	; 0x356 <delayMicroseconds>
 652:	08 95       	ret

00000654 <_ZN13LiquidCrystal9setCursorEhh>:
 654:	fc 01       	movw	r30, r24
 656:	44 30       	cpi	r20, 0x04	; 4
 658:	08 f0       	brcs	.+2      	; 0x65c <_ZN13LiquidCrystal9setCursorEhh+0x8>
 65a:	43 e0       	ldi	r20, 0x03	; 3
 65c:	83 89       	ldd	r24, Z+19	; 0x13
 65e:	48 17       	cp	r20, r24
 660:	10 f0       	brcs	.+4      	; 0x666 <_ZN13LiquidCrystal9setCursorEhh+0x12>
 662:	4f ef       	ldi	r20, 0xFF	; 255
 664:	48 0f       	add	r20, r24
 666:	df 01       	movw	r26, r30
 668:	a4 0f       	add	r26, r20
 66a:	b1 1d       	adc	r27, r1
 66c:	54 96       	adiw	r26, 0x14	; 20
 66e:	9c 91       	ld	r25, X
 670:	69 0f       	add	r22, r25
 672:	60 68       	ori	r22, 0x80	; 128
 674:	40 e0       	ldi	r20, 0x00	; 0
 676:	cf 01       	movw	r24, r30
 678:	0e 94 f5 02 	call	0x5ea	; 0x5ea <_ZN13LiquidCrystal4sendEhh>
 67c:	08 95       	ret

0000067e <_ZN13LiquidCrystal7displayEv>:
 67e:	fc 01       	movw	r30, r24
 680:	60 89       	ldd	r22, Z+16	; 0x10
 682:	26 2f       	mov	r18, r22
 684:	24 60       	ori	r18, 0x04	; 4
 686:	20 8b       	std	Z+16, r18	; 0x10
 688:	6c 60       	ori	r22, 0x0C	; 12
 68a:	40 e0       	ldi	r20, 0x00	; 0
 68c:	0e 94 f5 02 	call	0x5ea	; 0x5ea <_ZN13LiquidCrystal4sendEhh>
 690:	08 95       	ret

00000692 <_ZN13LiquidCrystal5beginEhhh>:
 692:	af 92       	push	r10
 694:	bf 92       	push	r11
 696:	cf 92       	push	r12
 698:	df 92       	push	r13
 69a:	ef 92       	push	r14
 69c:	ff 92       	push	r15
 69e:	0f 93       	push	r16
 6a0:	1f 93       	push	r17
 6a2:	cf 93       	push	r28
 6a4:	df 93       	push	r29
 6a6:	ec 01       	movw	r28, r24
 6a8:	42 30       	cpi	r20, 0x02	; 2
 6aa:	18 f0       	brcs	.+6      	; 0x6b2 <_ZN13LiquidCrystal5beginEhhh+0x20>
 6ac:	8f 85       	ldd	r24, Y+15	; 0x0f
 6ae:	88 60       	ori	r24, 0x08	; 8
 6b0:	8f 87       	std	Y+15, r24	; 0x0f
 6b2:	4b 8b       	std	Y+19, r20	; 0x13
 6b4:	1c 8a       	std	Y+20, r1	; 0x14
 6b6:	80 e4       	ldi	r24, 0x40	; 64
 6b8:	8d 8b       	std	Y+21, r24	; 0x15
 6ba:	6e 8b       	std	Y+22, r22	; 0x16
 6bc:	70 e0       	ldi	r23, 0x00	; 0
 6be:	60 5c       	subi	r22, 0xC0	; 192
 6c0:	7f 4f       	sbci	r23, 0xFF	; 255
 6c2:	6f 8b       	std	Y+23, r22	; 0x17
 6c4:	22 23       	and	r18, r18
 6c6:	29 f0       	breq	.+10     	; 0x6d2 <_ZN13LiquidCrystal5beginEhhh+0x40>
 6c8:	41 30       	cpi	r20, 0x01	; 1
 6ca:	19 f4       	brne	.+6      	; 0x6d2 <_ZN13LiquidCrystal5beginEhhh+0x40>
 6cc:	8f 85       	ldd	r24, Y+15	; 0x0f
 6ce:	84 60       	ori	r24, 0x04	; 4
 6d0:	8f 87       	std	Y+15, r24	; 0x0f
 6d2:	61 e0       	ldi	r22, 0x01	; 1
 6d4:	8c 81       	ldd	r24, Y+4	; 0x04
 6d6:	0e 94 f9 00 	call	0x1f2	; 0x1f2 <pinMode>
 6da:	8d 81       	ldd	r24, Y+5	; 0x05
 6dc:	8f 3f       	cpi	r24, 0xFF	; 255
 6de:	19 f0       	breq	.+6      	; 0x6e6 <_ZN13LiquidCrystal5beginEhhh+0x54>
 6e0:	61 e0       	ldi	r22, 0x01	; 1
 6e2:	0e 94 f9 00 	call	0x1f2	; 0x1f2 <pinMode>
 6e6:	61 e0       	ldi	r22, 0x01	; 1
 6e8:	8e 81       	ldd	r24, Y+6	; 0x06
 6ea:	0e 94 f9 00 	call	0x1f2	; 0x1f2 <pinMode>
 6ee:	7e 01       	movw	r14, r28
 6f0:	87 e0       	ldi	r24, 0x07	; 7
 6f2:	e8 0e       	add	r14, r24
 6f4:	f1 1c       	adc	r15, r1
 6f6:	00 e0       	ldi	r16, 0x00	; 0
 6f8:	10 e0       	ldi	r17, 0x00	; 0
 6fa:	68 94       	set
 6fc:	aa 24       	eor	r10, r10
 6fe:	a3 f8       	bld	r10, 3
 700:	b1 2c       	mov	r11, r1
 702:	68 94       	set
 704:	cc 24       	eor	r12, r12
 706:	c2 f8       	bld	r12, 2
 708:	d1 2c       	mov	r13, r1
 70a:	8f 85       	ldd	r24, Y+15	; 0x0f
 70c:	84 fd       	sbrc	r24, 4
 70e:	03 c0       	rjmp	.+6      	; 0x716 <_ZN13LiquidCrystal5beginEhhh+0x84>
 710:	8c 2d       	mov	r24, r12
 712:	9d 2d       	mov	r25, r13
 714:	02 c0       	rjmp	.+4      	; 0x71a <_ZN13LiquidCrystal5beginEhhh+0x88>
 716:	8a 2d       	mov	r24, r10
 718:	9b 2d       	mov	r25, r11
 71a:	08 17       	cp	r16, r24
 71c:	19 07       	cpc	r17, r25
 71e:	4c f4       	brge	.+18     	; 0x732 <_ZN13LiquidCrystal5beginEhhh+0xa0>
 720:	61 e0       	ldi	r22, 0x01	; 1
 722:	f7 01       	movw	r30, r14
 724:	81 91       	ld	r24, Z+
 726:	7f 01       	movw	r14, r30
 728:	0e 94 f9 00 	call	0x1f2	; 0x1f2 <pinMode>
 72c:	0f 5f       	subi	r16, 0xFF	; 255
 72e:	1f 4f       	sbci	r17, 0xFF	; 255
 730:	ec cf       	rjmp	.-40     	; 0x70a <_ZN13LiquidCrystal5beginEhhh+0x78>
 732:	80 e5       	ldi	r24, 0x50	; 80
 734:	93 ec       	ldi	r25, 0xC3	; 195
 736:	0e 94 ab 01 	call	0x356	; 0x356 <delayMicroseconds>
 73a:	60 e0       	ldi	r22, 0x00	; 0
 73c:	8c 81       	ldd	r24, Y+4	; 0x04
 73e:	0e 94 ac 00 	call	0x158	; 0x158 <digitalWrite>
 742:	60 e0       	ldi	r22, 0x00	; 0
 744:	8e 81       	ldd	r24, Y+6	; 0x06
 746:	0e 94 ac 00 	call	0x158	; 0x158 <digitalWrite>
 74a:	8d 81       	ldd	r24, Y+5	; 0x05
 74c:	8f 3f       	cpi	r24, 0xFF	; 255
 74e:	19 f0       	breq	.+6      	; 0x756 <_ZN13LiquidCrystal5beginEhhh+0xc4>
 750:	60 e0       	ldi	r22, 0x00	; 0
 752:	0e 94 ac 00 	call	0x158	; 0x158 <digitalWrite>
 756:	6f 85       	ldd	r22, Y+15	; 0x0f
 758:	64 fd       	sbrc	r22, 4
 75a:	1d c0       	rjmp	.+58     	; 0x796 <_ZN13LiquidCrystal5beginEhhh+0x104>
 75c:	63 e0       	ldi	r22, 0x03	; 3
 75e:	ce 01       	movw	r24, r28
 760:	0e 94 9b 02 	call	0x536	; 0x536 <_ZN13LiquidCrystal10write4bitsEh>
 764:	84 e9       	ldi	r24, 0x94	; 148
 766:	91 e1       	ldi	r25, 0x11	; 17
 768:	0e 94 ab 01 	call	0x356	; 0x356 <delayMicroseconds>
 76c:	63 e0       	ldi	r22, 0x03	; 3
 76e:	ce 01       	movw	r24, r28
 770:	0e 94 9b 02 	call	0x536	; 0x536 <_ZN13LiquidCrystal10write4bitsEh>
 774:	84 e9       	ldi	r24, 0x94	; 148
 776:	91 e1       	ldi	r25, 0x11	; 17
 778:	0e 94 ab 01 	call	0x356	; 0x356 <delayMicroseconds>
 77c:	63 e0       	ldi	r22, 0x03	; 3
 77e:	ce 01       	movw	r24, r28
 780:	0e 94 9b 02 	call	0x536	; 0x536 <_ZN13LiquidCrystal10write4bitsEh>
 784:	86 e9       	ldi	r24, 0x96	; 150
 786:	90 e0       	ldi	r25, 0x00	; 0
 788:	0e 94 ab 01 	call	0x356	; 0x356 <delayMicroseconds>
 78c:	62 e0       	ldi	r22, 0x02	; 2
 78e:	ce 01       	movw	r24, r28
 790:	0e 94 9b 02 	call	0x536	; 0x536 <_ZN13LiquidCrystal10write4bitsEh>
 794:	19 c0       	rjmp	.+50     	; 0x7c8 <_ZN13LiquidCrystal5beginEhhh+0x136>
 796:	60 62       	ori	r22, 0x20	; 32
 798:	40 e0       	ldi	r20, 0x00	; 0
 79a:	ce 01       	movw	r24, r28
 79c:	0e 94 f5 02 	call	0x5ea	; 0x5ea <_ZN13LiquidCrystal4sendEhh>
 7a0:	84 e9       	ldi	r24, 0x94	; 148
 7a2:	91 e1       	ldi	r25, 0x11	; 17
 7a4:	0e 94 ab 01 	call	0x356	; 0x356 <delayMicroseconds>
 7a8:	6f 85       	ldd	r22, Y+15	; 0x0f
 7aa:	60 62       	ori	r22, 0x20	; 32
 7ac:	40 e0       	ldi	r20, 0x00	; 0
 7ae:	ce 01       	movw	r24, r28
 7b0:	0e 94 f5 02 	call	0x5ea	; 0x5ea <_ZN13LiquidCrystal4sendEhh>
 7b4:	86 e9       	ldi	r24, 0x96	; 150
 7b6:	90 e0       	ldi	r25, 0x00	; 0
 7b8:	0e 94 ab 01 	call	0x356	; 0x356 <delayMicroseconds>
 7bc:	6f 85       	ldd	r22, Y+15	; 0x0f
 7be:	60 62       	ori	r22, 0x20	; 32
 7c0:	40 e0       	ldi	r20, 0x00	; 0
 7c2:	ce 01       	movw	r24, r28
 7c4:	0e 94 f5 02 	call	0x5ea	; 0x5ea <_ZN13LiquidCrystal4sendEhh>
 7c8:	6f 85       	ldd	r22, Y+15	; 0x0f
 7ca:	60 62       	ori	r22, 0x20	; 32
 7cc:	40 e0       	ldi	r20, 0x00	; 0
 7ce:	ce 01       	movw	r24, r28
 7d0:	0e 94 f5 02 	call	0x5ea	; 0x5ea <_ZN13LiquidCrystal4sendEhh>
 7d4:	84 e0       	ldi	r24, 0x04	; 4
 7d6:	88 8b       	std	Y+16, r24	; 0x10
 7d8:	ce 01       	movw	r24, r28
 7da:	0e 94 3f 03 	call	0x67e	; 0x67e <_ZN13LiquidCrystal7displayEv>
 7de:	ce 01       	movw	r24, r28
 7e0:	0e 94 21 03 	call	0x642	; 0x642 <_ZN13LiquidCrystal5clearEv>
 7e4:	82 e0       	ldi	r24, 0x02	; 2
 7e6:	89 8b       	std	Y+17, r24	; 0x11
 7e8:	40 e0       	ldi	r20, 0x00	; 0
 7ea:	66 e0       	ldi	r22, 0x06	; 6
 7ec:	ce 01       	movw	r24, r28
 7ee:	0e 94 f5 02 	call	0x5ea	; 0x5ea <_ZN13LiquidCrystal4sendEhh>
 7f2:	df 91       	pop	r29
 7f4:	cf 91       	pop	r28
 7f6:	1f 91       	pop	r17
 7f8:	0f 91       	pop	r16
 7fa:	ff 90       	pop	r15
 7fc:	ef 90       	pop	r14
 7fe:	df 90       	pop	r13
 800:	cf 90       	pop	r12
 802:	bf 90       	pop	r11
 804:	af 90       	pop	r10
 806:	08 95       	ret

00000808 <_ZN13LiquidCrystalC1Ehhhhhh>:
 808:	cf 92       	push	r12
 80a:	ef 92       	push	r14
 80c:	0f 93       	push	r16
 80e:	fc 01       	movw	r30, r24
 810:	13 82       	std	Z+3, r1	; 0x03
 812:	12 82       	std	Z+2, r1	; 0x02
 814:	88 e6       	ldi	r24, 0x68	; 104
 816:	91 e0       	ldi	r25, 0x01	; 1
 818:	91 83       	std	Z+1, r25	; 0x01
 81a:	80 83       	st	Z, r24
 81c:	64 83       	std	Z+4, r22	; 0x04
 81e:	8f ef       	ldi	r24, 0xFF	; 255
 820:	85 83       	std	Z+5, r24	; 0x05
 822:	46 83       	std	Z+6, r20	; 0x06
 824:	27 83       	std	Z+7, r18	; 0x07
 826:	00 87       	std	Z+8, r16	; 0x08
 828:	e1 86       	std	Z+9, r14	; 0x09
 82a:	c2 86       	std	Z+10, r12	; 0x0a
 82c:	13 86       	std	Z+11, r1	; 0x0b
 82e:	14 86       	std	Z+12, r1	; 0x0c
 830:	15 86       	std	Z+13, r1	; 0x0d
 832:	16 86       	std	Z+14, r1	; 0x0e
 834:	17 86       	std	Z+15, r1	; 0x0f
 836:	20 e0       	ldi	r18, 0x00	; 0
 838:	41 e0       	ldi	r20, 0x01	; 1
 83a:	60 e1       	ldi	r22, 0x10	; 16
 83c:	cf 01       	movw	r24, r30
 83e:	0e 94 49 03 	call	0x692	; 0x692 <_ZN13LiquidCrystal5beginEhhh>
 842:	0f 91       	pop	r16
 844:	ef 90       	pop	r14
 846:	cf 90       	pop	r12
 848:	08 95       	ret

0000084a <_ZN13LiquidCrystal5writeEh>:
inline void LiquidCrystal::command(uint8_t value) {
  send(value, LOW);
}

inline size_t LiquidCrystal::write(uint8_t value) {
  send(value, HIGH);
 84a:	41 e0       	ldi	r20, 0x01	; 1
 84c:	0e 94 f5 02 	call	0x5ea	; 0x5ea <_ZN13LiquidCrystal4sendEhh>
  return 1; // assume sucess
}
 850:	81 e0       	ldi	r24, 0x01	; 1
 852:	90 e0       	ldi	r25, 0x00	; 0
 854:	08 95       	ret

00000856 <_Z7get_keyj>:
uint16_t key=-1;
uint16_t oldkey=-1;

// Convert ADC value to key number
uint16_t get_key(unsigned int input)
{
 856:	bc 01       	movw	r22, r24
	uint16_t k;
	for (k = 0; k < NUM_KEYS; k++)
 858:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <NUM_KEYS>
 85c:	50 e0       	ldi	r21, 0x00	; 0
 85e:	41 15       	cp	r20, r1
 860:	51 05       	cpc	r21, r1
 862:	c1 f0       	breq	.+48     	; 0x894 <_Z7get_keyj+0x3e>
	if (input < adc_key_val[k])
 864:	80 91 05 01 	lds	r24, 0x0105	; 0x800105 <adc_key_val>
 868:	90 91 06 01 	lds	r25, 0x0106	; 0x800106 <adc_key_val+0x1>
 86c:	68 17       	cp	r22, r24
 86e:	79 07       	cpc	r23, r25
 870:	a0 f0       	brcs	.+40     	; 0x89a <_Z7get_keyj+0x44>
 872:	e7 e0       	ldi	r30, 0x07	; 7
 874:	f1 e0       	ldi	r31, 0x01	; 1
 876:	80 e0       	ldi	r24, 0x00	; 0
 878:	90 e0       	ldi	r25, 0x00	; 0
 87a:	05 c0       	rjmp	.+10     	; 0x886 <_Z7get_keyj+0x30>
 87c:	21 91       	ld	r18, Z+
 87e:	31 91       	ld	r19, Z+
 880:	62 17       	cp	r22, r18
 882:	73 07       	cpc	r23, r19
 884:	60 f0       	brcs	.+24     	; 0x89e <_Z7get_keyj+0x48>

// Convert ADC value to key number
uint16_t get_key(unsigned int input)
{
	uint16_t k;
	for (k = 0; k < NUM_KEYS; k++)
 886:	01 96       	adiw	r24, 0x01	; 1
 888:	84 17       	cp	r24, r20
 88a:	95 07       	cpc	r25, r21
 88c:	b9 f7       	brne	.-18     	; 0x87c <_Z7get_keyj+0x26>
	if (input < adc_key_val[k])
	return k;

	if (k >= NUM_KEYS)
	k = -1;     // No valid key pressed
 88e:	8f ef       	ldi	r24, 0xFF	; 255
 890:	9f ef       	ldi	r25, 0xFF	; 255
 892:	08 95       	ret
 894:	8f ef       	ldi	r24, 0xFF	; 255
 896:	9f ef       	ldi	r25, 0xFF	; 255
 898:	08 95       	ret

// Convert ADC value to key number
uint16_t get_key(unsigned int input)
{
	uint16_t k;
	for (k = 0; k < NUM_KEYS; k++)
 89a:	80 e0       	ldi	r24, 0x00	; 0
 89c:	90 e0       	ldi	r25, 0x00	; 0

	if (k >= NUM_KEYS)
	k = -1;     // No valid key pressed

	return k;
}
 89e:	08 95       	ret

000008a0 <setup>:


void setup() 
{
    pinMode(10, OUTPUT);
 8a0:	61 e0       	ldi	r22, 0x01	; 1
 8a2:	8a e0       	ldi	r24, 0x0A	; 10
 8a4:	0e 94 f9 00 	call	0x1f2	; 0x1f2 <pinMode>
    // set up the LCD's number of columns and rows: 
    lcd.begin(numCols,numRows);
 8a8:	20 e0       	ldi	r18, 0x00	; 0
 8aa:	42 e0       	ldi	r20, 0x02	; 2
 8ac:	60 e1       	ldi	r22, 0x10	; 16
 8ae:	89 ea       	ldi	r24, 0xA9	; 169
 8b0:	91 e0       	ldi	r25, 0x01	; 1
 8b2:	0e 94 49 03 	call	0x692	; 0x692 <_ZN13LiquidCrystal5beginEhhh>
    analogWrite(10, 100); //Controla intensidad backlight
 8b6:	64 e6       	ldi	r22, 0x64	; 100
 8b8:	70 e0       	ldi	r23, 0x00	; 0
 8ba:	8a e0       	ldi	r24, 0x0A	; 10
 8bc:	0e 94 35 01 	call	0x26a	; 0x26a <analogWrite>
    lcd.setCursor(0, 0);
 8c0:	40 e0       	ldi	r20, 0x00	; 0
 8c2:	60 e0       	ldi	r22, 0x00	; 0
 8c4:	89 ea       	ldi	r24, 0xA9	; 169
 8c6:	91 e0       	ldi	r25, 0x01	; 1
 8c8:	0e 94 2a 03 	call	0x654	; 0x654 <_ZN13LiquidCrystal9setCursorEhh>
    lcd.print("Key Pad Test");
 8cc:	60 e7       	ldi	r22, 0x70	; 112
 8ce:	71 e0       	ldi	r23, 0x01	; 1
 8d0:	89 ea       	ldi	r24, 0xA9	; 169
 8d2:	91 e0       	ldi	r25, 0x01	; 1
 8d4:	0e 94 3a 02 	call	0x474	; 0x474 <_ZN5Print5printEPKc>
    lcd.setCursor(0, 1);
 8d8:	41 e0       	ldi	r20, 0x01	; 1
 8da:	60 e0       	ldi	r22, 0x00	; 0
 8dc:	89 ea       	ldi	r24, 0xA9	; 169
 8de:	91 e0       	ldi	r25, 0x01	; 1
 8e0:	0e 94 2a 03 	call	0x654	; 0x654 <_ZN13LiquidCrystal9setCursorEhh>
    lcd.print("Sist.Emb. 2019");
 8e4:	6d e7       	ldi	r22, 0x7D	; 125
 8e6:	71 e0       	ldi	r23, 0x01	; 1
 8e8:	89 ea       	ldi	r24, 0xA9	; 169
 8ea:	91 e0       	ldi	r25, 0x01	; 1
 8ec:	0e 94 3a 02 	call	0x474	; 0x474 <_ZN5Print5printEPKc>
    delay(2000);
 8f0:	60 ed       	ldi	r22, 0xD0	; 208
 8f2:	77 e0       	ldi	r23, 0x07	; 7
 8f4:	80 e0       	ldi	r24, 0x00	; 0
 8f6:	90 e0       	ldi	r25, 0x00	; 0
 8f8:	0e 94 b6 01 	call	0x36c	; 0x36c <delay>
    lcd.setCursor(0, 1);
 8fc:	41 e0       	ldi	r20, 0x01	; 1
 8fe:	60 e0       	ldi	r22, 0x00	; 0
 900:	89 ea       	ldi	r24, 0xA9	; 169
 902:	91 e0       	ldi	r25, 0x01	; 1
 904:	0e 94 2a 03 	call	0x654	; 0x654 <_ZN13LiquidCrystal9setCursorEhh>
    lcd.print("Press any key...");
 908:	6c e8       	ldi	r22, 0x8C	; 140
 90a:	71 e0       	ldi	r23, 0x01	; 1
 90c:	89 ea       	ldi	r24, 0xA9	; 169
 90e:	91 e0       	ldi	r25, 0x01	; 1
 910:	0e 94 3a 02 	call	0x474	; 0x474 <_ZN5Print5printEPKc>
 914:	08 95       	ret

00000916 <loop>:
}

void loop()
{
    adc_key_in = analogRead(0);      // read the value from the sensor  
 916:	80 e0       	ldi	r24, 0x00	; 0
 918:	0e 94 94 01 	call	0x328	; 0x328 <analogRead>
 91c:	90 93 a8 01 	sts	0x01A8, r25	; 0x8001a8 <adc_key_in+0x1>
 920:	80 93 a7 01 	sts	0x01A7, r24	; 0x8001a7 <adc_key_in>

    key = get_key(adc_key_in);	     // convert into key press
 924:	0e 94 2b 04 	call	0x856	; 0x856 <_Z7get_keyj>
 928:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <key+0x1>
 92c:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <key>

    if (key != oldkey)		         // if keypress is detected
 930:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__data_start>
 934:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__data_start+0x1>
 938:	82 17       	cp	r24, r18
 93a:	93 07       	cpc	r25, r19
 93c:	a1 f1       	breq	.+104    	; 0x9a6 <loop+0x90>
    { 
        delay(50);		             // wait for debounce time
 93e:	62 e3       	ldi	r22, 0x32	; 50
 940:	70 e0       	ldi	r23, 0x00	; 0
 942:	80 e0       	ldi	r24, 0x00	; 0
 944:	90 e0       	ldi	r25, 0x00	; 0
 946:	0e 94 b6 01 	call	0x36c	; 0x36c <delay>
        adc_key_in = analogRead(0);  // read the value from the sensor  
 94a:	80 e0       	ldi	r24, 0x00	; 0
 94c:	0e 94 94 01 	call	0x328	; 0x328 <analogRead>
 950:	90 93 a8 01 	sts	0x01A8, r25	; 0x8001a8 <adc_key_in+0x1>
 954:	80 93 a7 01 	sts	0x01A7, r24	; 0x8001a7 <adc_key_in>
        key = get_key(adc_key_in);   // convert into key press
 958:	0e 94 2b 04 	call	0x856	; 0x856 <_Z7get_keyj>
 95c:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <key+0x1>
 960:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <key>
        if (key != oldkey)				
 964:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__data_start>
 968:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__data_start+0x1>
 96c:	82 17       	cp	r24, r18
 96e:	93 07       	cpc	r25, r19
 970:	d1 f0       	breq	.+52     	; 0x9a6 <loop+0x90>
        {			
            oldkey = key;
 972:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__data_start+0x1>
 976:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
            if (key >=0)
            {
                lcd.setCursor(0, 1);      //line=1, x=0
 97a:	41 e0       	ldi	r20, 0x01	; 1
 97c:	60 e0       	ldi	r22, 0x00	; 0
 97e:	89 ea       	ldi	r24, 0xA9	; 169
 980:	91 e0       	ldi	r25, 0x01	; 1
 982:	0e 94 2a 03 	call	0x654	; 0x654 <_ZN13LiquidCrystal9setCursorEhh>
                lcd.print(msgs[key]);
 986:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <key>
 98a:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <key+0x1>
 98e:	21 e1       	ldi	r18, 0x11	; 17
 990:	28 9f       	mul	r18, r24
 992:	b0 01       	movw	r22, r0
 994:	29 9f       	mul	r18, r25
 996:	70 0d       	add	r23, r0
 998:	11 24       	eor	r1, r1
 99a:	61 5f       	subi	r22, 0xF1	; 241
 99c:	7e 4f       	sbci	r23, 0xFE	; 254
 99e:	89 ea       	ldi	r24, 0xA9	; 169
 9a0:	91 e0       	ldi	r25, 0x01	; 1
 9a2:	0e 94 3a 02 	call	0x474	; 0x474 <_ZN5Print5printEPKc>
 9a6:	08 95       	ret

000009a8 <_GLOBAL__sub_I_lcd>:
            }
        }
    }
}
 9a8:	cf 92       	push	r12
 9aa:	ef 92       	push	r14
 9ac:	0f 93       	push	r16
// your LCD using them:
const uint8_t numRows = 2;
const uint8_t numCols = 16;

// initialize the library with the numbers of the interface pins
LiquidCrystal lcd(8, 9, 4, 5, 6, 7);
 9ae:	0f 2e       	mov	r0, r31
 9b0:	f7 e0       	ldi	r31, 0x07	; 7
 9b2:	cf 2e       	mov	r12, r31
 9b4:	f0 2d       	mov	r31, r0
 9b6:	0f 2e       	mov	r0, r31
 9b8:	f6 e0       	ldi	r31, 0x06	; 6
 9ba:	ef 2e       	mov	r14, r31
 9bc:	f0 2d       	mov	r31, r0
 9be:	05 e0       	ldi	r16, 0x05	; 5
 9c0:	24 e0       	ldi	r18, 0x04	; 4
 9c2:	49 e0       	ldi	r20, 0x09	; 9
 9c4:	68 e0       	ldi	r22, 0x08	; 8
 9c6:	89 ea       	ldi	r24, 0xA9	; 169
 9c8:	91 e0       	ldi	r25, 0x01	; 1
 9ca:	0e 94 04 04 	call	0x808	; 0x808 <_ZN13LiquidCrystalC1Ehhhhhh>
                lcd.setCursor(0, 1);      //line=1, x=0
                lcd.print(msgs[key]);
            }
        }
    }
}
 9ce:	0f 91       	pop	r16
 9d0:	ef 90       	pop	r14
 9d2:	cf 90       	pop	r12
 9d4:	08 95       	ret

000009d6 <main>:
 9d6:	78 94       	sei
 9d8:	84 b5       	in	r24, 0x24	; 36
 9da:	82 60       	ori	r24, 0x02	; 2
 9dc:	84 bd       	out	0x24, r24	; 36
 9de:	84 b5       	in	r24, 0x24	; 36
 9e0:	81 60       	ori	r24, 0x01	; 1
 9e2:	84 bd       	out	0x24, r24	; 36
 9e4:	85 b5       	in	r24, 0x25	; 37
 9e6:	82 60       	ori	r24, 0x02	; 2
 9e8:	85 bd       	out	0x25, r24	; 37
 9ea:	85 b5       	in	r24, 0x25	; 37
 9ec:	81 60       	ori	r24, 0x01	; 1
 9ee:	85 bd       	out	0x25, r24	; 37
 9f0:	80 91 6e 00 	lds	r24, 0x006E	; 0x80006e <__TEXT_REGION_LENGTH__+0x7e006e>
 9f4:	81 60       	ori	r24, 0x01	; 1
 9f6:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <__TEXT_REGION_LENGTH__+0x7e006e>
 9fa:	10 92 81 00 	sts	0x0081, r1	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
 9fe:	80 91 81 00 	lds	r24, 0x0081	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
 a02:	82 60       	ori	r24, 0x02	; 2
 a04:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
 a08:	80 91 81 00 	lds	r24, 0x0081	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
 a0c:	81 60       	ori	r24, 0x01	; 1
 a0e:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
 a12:	80 91 80 00 	lds	r24, 0x0080	; 0x800080 <__TEXT_REGION_LENGTH__+0x7e0080>
 a16:	81 60       	ori	r24, 0x01	; 1
 a18:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__TEXT_REGION_LENGTH__+0x7e0080>
 a1c:	80 91 b1 00 	lds	r24, 0x00B1	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7e00b1>
 a20:	84 60       	ori	r24, 0x04	; 4
 a22:	80 93 b1 00 	sts	0x00B1, r24	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7e00b1>
 a26:	80 91 b0 00 	lds	r24, 0x00B0	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7e00b0>
 a2a:	81 60       	ori	r24, 0x01	; 1
 a2c:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7e00b0>
 a30:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
 a34:	84 60       	ori	r24, 0x04	; 4
 a36:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
 a3a:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
 a3e:	82 60       	ori	r24, 0x02	; 2
 a40:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
 a44:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
 a48:	81 60       	ori	r24, 0x01	; 1
 a4a:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
 a4e:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
 a52:	80 68       	ori	r24, 0x80	; 128
 a54:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
 a58:	10 92 c1 00 	sts	0x00C1, r1	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
 a5c:	0e 94 50 04 	call	0x8a0	; 0x8a0 <setup>
 a60:	c0 e0       	ldi	r28, 0x00	; 0
 a62:	d0 e0       	ldi	r29, 0x00	; 0
 a64:	0e 94 8b 04 	call	0x916	; 0x916 <loop>
 a68:	20 97       	sbiw	r28, 0x00	; 0
 a6a:	e1 f3       	breq	.-8      	; 0xa64 <main+0x8e>
 a6c:	0e 94 00 00 	call	0	; 0x0 <__vectors>
 a70:	f9 cf       	rjmp	.-14     	; 0xa64 <main+0x8e>

00000a72 <__tablejump2__>:
 a72:	ee 0f       	add	r30, r30
 a74:	ff 1f       	adc	r31, r31
 a76:	05 90       	lpm	r0, Z+
 a78:	f4 91       	lpm	r31, Z
 a7a:	e0 2d       	mov	r30, r0
 a7c:	09 94       	ijmp

00000a7e <_exit>:
 a7e:	f8 94       	cli

00000a80 <__stop_program>:
 a80:	ff cf       	rjmp	.-2      	; 0xa80 <__stop_program>
