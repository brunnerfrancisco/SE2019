
Actividad 1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000b6  00800100  00001bf0  00001c84  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001bf0  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000002dd  008001b6  008001b6  00001d3a  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00001d3a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001d6c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000280  00000000  00000000  00001dac  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00003dd0  00000000  00000000  0000202c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001157  00000000  00000000  00005dfc  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001900  00000000  00000000  00006f53  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000730  00000000  00000000  00008854  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00001100  00000000  00000000  00008f84  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000259f  00000000  00000000  0000a084  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000210  00000000  00000000  0000c623  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__ctors_end>
       4:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
       8:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
       c:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
      10:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
      14:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
      18:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
      1c:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
      20:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
      24:	0c 94 d9 0a 	jmp	0x15b2	; 0x15b2 <__vector_9>
      28:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
      2c:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
      30:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
      34:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
      38:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
      3c:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
      40:	0c 94 8f 02 	jmp	0x51e	; 0x51e <__vector_16>
      44:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
      48:	0c 94 52 04 	jmp	0x8a4	; 0x8a4 <__vector_18>
      4c:	0c 94 2c 04 	jmp	0x858	; 0x858 <__vector_19>
      50:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
      54:	0c 94 a1 05 	jmp	0xb42	; 0xb42 <__vector_21>
      58:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
      5c:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
      60:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
      64:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>

00000068 <__trampolines_end>:
      68:	00 00       	nop
      6a:	00 00       	nop
      6c:	24 00       	.word	0x0024	; ????
      6e:	27 00       	.word	0x0027	; ????
      70:	2a 00       	.word	0x002a	; ????

00000072 <port_to_output_PGM>:
      72:	00 00 00 00 25 00 28 00 2b 00                       ....%.(.+.

0000007c <digital_pin_to_port_PGM>:
      7c:	04 04 04 04 04 04 04 04 02 02 02 02 02 02 03 03     ................
      8c:	03 03 03 03                                         ....

00000090 <digital_pin_to_bit_mask_PGM>:
      90:	01 02 04 08 10 20 40 80 01 02 04 08 10 20 01 02     ..... @...... ..
      a0:	04 08 10 20                                         ... 

000000a4 <digital_pin_to_timer_PGM>:
      a4:	00 00 00 08 00 02 01 00 00 03 04 07 00 00 00 00     ................
      b4:	00 00 00 00                                         ....

000000b8 <__ctors_start>:
      b8:	c2 0a       	sbc	r12, r18
      ba:	60 0b       	sbc	r22, r16

000000bc <__ctors_end>:
      bc:	11 24       	eor	r1, r1
      be:	1f be       	out	0x3f, r1	; 63
      c0:	cf ef       	ldi	r28, 0xFF	; 255
      c2:	d8 e0       	ldi	r29, 0x08	; 8
      c4:	de bf       	out	0x3e, r29	; 62
      c6:	cd bf       	out	0x3d, r28	; 61

000000c8 <__do_copy_data>:
      c8:	11 e0       	ldi	r17, 0x01	; 1
      ca:	a0 e0       	ldi	r26, 0x00	; 0
      cc:	b1 e0       	ldi	r27, 0x01	; 1
      ce:	e0 ef       	ldi	r30, 0xF0	; 240
      d0:	fb e1       	ldi	r31, 0x1B	; 27
      d2:	02 c0       	rjmp	.+4      	; 0xd8 <__do_copy_data+0x10>
      d4:	05 90       	lpm	r0, Z+
      d6:	0d 92       	st	X+, r0
      d8:	a6 3b       	cpi	r26, 0xB6	; 182
      da:	b1 07       	cpc	r27, r17
      dc:	d9 f7       	brne	.-10     	; 0xd4 <__do_copy_data+0xc>

000000de <__do_clear_bss>:
      de:	24 e0       	ldi	r18, 0x04	; 4
      e0:	a6 eb       	ldi	r26, 0xB6	; 182
      e2:	b1 e0       	ldi	r27, 0x01	; 1
      e4:	01 c0       	rjmp	.+2      	; 0xe8 <.do_clear_bss_start>

000000e6 <.do_clear_bss_loop>:
      e6:	1d 92       	st	X+, r1

000000e8 <.do_clear_bss_start>:
      e8:	a3 39       	cpi	r26, 0x93	; 147
      ea:	b2 07       	cpc	r27, r18
      ec:	e1 f7       	brne	.-8      	; 0xe6 <.do_clear_bss_loop>

000000ee <__do_global_ctors>:
      ee:	10 e0       	ldi	r17, 0x00	; 0
      f0:	ce e5       	ldi	r28, 0x5E	; 94
      f2:	d0 e0       	ldi	r29, 0x00	; 0
      f4:	04 c0       	rjmp	.+8      	; 0xfe <__do_global_ctors+0x10>
      f6:	21 97       	sbiw	r28, 0x01	; 1
      f8:	fe 01       	movw	r30, r28
      fa:	0e 94 95 0d 	call	0x1b2a	; 0x1b2a <__tablejump2__>
      fe:	cc 35       	cpi	r28, 0x5C	; 92
     100:	d1 07       	cpc	r29, r17
     102:	c9 f7       	brne	.-14     	; 0xf6 <__do_global_ctors+0x8>
     104:	0e 94 16 0b 	call	0x162c	; 0x162c <main>
     108:	0c 94 f6 0d 	jmp	0x1bec	; 0x1bec <_exit>

0000010c <__bad_interrupt>:
     10c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000110 <_ZN5Print5printEc.constprop.8>:
     110:	dc 01       	movw	r26, r24
     112:	ed 91       	ld	r30, X+
     114:	fc 91       	ld	r31, X
     116:	01 90       	ld	r0, Z+
     118:	f0 81       	ld	r31, Z
     11a:	e0 2d       	mov	r30, r0
     11c:	09 94       	ijmp

0000011e <_ZN5Print5writeEPKhj>:
     11e:	cf 92       	push	r12
     120:	df 92       	push	r13
     122:	ef 92       	push	r14
     124:	ff 92       	push	r15
     126:	0f 93       	push	r16
     128:	1f 93       	push	r17
     12a:	cf 93       	push	r28
     12c:	df 93       	push	r29
     12e:	6c 01       	movw	r12, r24
     130:	7a 01       	movw	r14, r20
     132:	8b 01       	movw	r16, r22
     134:	c0 e0       	ldi	r28, 0x00	; 0
     136:	d0 e0       	ldi	r29, 0x00	; 0
     138:	ce 15       	cp	r28, r14
     13a:	df 05       	cpc	r29, r15
     13c:	81 f0       	breq	.+32     	; 0x15e <_ZN5Print5writeEPKhj+0x40>
     13e:	d8 01       	movw	r26, r16
     140:	6d 91       	ld	r22, X+
     142:	8d 01       	movw	r16, r26
     144:	d6 01       	movw	r26, r12
     146:	ed 91       	ld	r30, X+
     148:	fc 91       	ld	r31, X
     14a:	01 90       	ld	r0, Z+
     14c:	f0 81       	ld	r31, Z
     14e:	e0 2d       	mov	r30, r0
     150:	c6 01       	movw	r24, r12
     152:	09 95       	icall
     154:	89 2b       	or	r24, r25
     156:	11 f0       	breq	.+4      	; 0x15c <_ZN5Print5writeEPKhj+0x3e>
     158:	21 96       	adiw	r28, 0x01	; 1
     15a:	ee cf       	rjmp	.-36     	; 0x138 <_ZN5Print5writeEPKhj+0x1a>
     15c:	7e 01       	movw	r14, r28
     15e:	c7 01       	movw	r24, r14
     160:	df 91       	pop	r29
     162:	cf 91       	pop	r28
     164:	1f 91       	pop	r17
     166:	0f 91       	pop	r16
     168:	ff 90       	pop	r15
     16a:	ef 90       	pop	r14
     16c:	df 90       	pop	r13
     16e:	cf 90       	pop	r12
     170:	08 95       	ret

00000172 <_ZN14HardwareSerial17availableForWriteEv>:
     172:	fc 01       	movw	r30, r24
     174:	53 8d       	ldd	r21, Z+27	; 0x1b
     176:	44 8d       	ldd	r20, Z+28	; 0x1c
     178:	25 2f       	mov	r18, r21
     17a:	30 e0       	ldi	r19, 0x00	; 0
     17c:	84 2f       	mov	r24, r20
     17e:	90 e0       	ldi	r25, 0x00	; 0
     180:	82 1b       	sub	r24, r18
     182:	93 0b       	sbc	r25, r19
     184:	54 17       	cp	r21, r20
     186:	10 f0       	brcs	.+4      	; 0x18c <_ZN14HardwareSerial17availableForWriteEv+0x1a>
     188:	cf 96       	adiw	r24, 0x3f	; 63
     18a:	08 95       	ret
     18c:	01 97       	sbiw	r24, 0x01	; 1
     18e:	08 95       	ret

00000190 <_ZN14HardwareSerial4readEv>:
     190:	fc 01       	movw	r30, r24
     192:	91 8d       	ldd	r25, Z+25	; 0x19
     194:	82 8d       	ldd	r24, Z+26	; 0x1a
     196:	98 17       	cp	r25, r24
     198:	61 f0       	breq	.+24     	; 0x1b2 <_ZN14HardwareSerial4readEv+0x22>
     19a:	82 8d       	ldd	r24, Z+26	; 0x1a
     19c:	df 01       	movw	r26, r30
     19e:	a8 0f       	add	r26, r24
     1a0:	b1 1d       	adc	r27, r1
     1a2:	5d 96       	adiw	r26, 0x1d	; 29
     1a4:	8c 91       	ld	r24, X
     1a6:	92 8d       	ldd	r25, Z+26	; 0x1a
     1a8:	9f 5f       	subi	r25, 0xFF	; 255
     1aa:	9f 73       	andi	r25, 0x3F	; 63
     1ac:	92 8f       	std	Z+26, r25	; 0x1a
     1ae:	90 e0       	ldi	r25, 0x00	; 0
     1b0:	08 95       	ret
     1b2:	8f ef       	ldi	r24, 0xFF	; 255
     1b4:	9f ef       	ldi	r25, 0xFF	; 255
     1b6:	08 95       	ret

000001b8 <_ZN14HardwareSerial4peekEv>:
     1b8:	fc 01       	movw	r30, r24
     1ba:	91 8d       	ldd	r25, Z+25	; 0x19
     1bc:	82 8d       	ldd	r24, Z+26	; 0x1a
     1be:	98 17       	cp	r25, r24
     1c0:	31 f0       	breq	.+12     	; 0x1ce <_ZN14HardwareSerial4peekEv+0x16>
     1c2:	82 8d       	ldd	r24, Z+26	; 0x1a
     1c4:	e8 0f       	add	r30, r24
     1c6:	f1 1d       	adc	r31, r1
     1c8:	85 8d       	ldd	r24, Z+29	; 0x1d
     1ca:	90 e0       	ldi	r25, 0x00	; 0
     1cc:	08 95       	ret
     1ce:	8f ef       	ldi	r24, 0xFF	; 255
     1d0:	9f ef       	ldi	r25, 0xFF	; 255
     1d2:	08 95       	ret

000001d4 <_ZN14HardwareSerial9availableEv>:
     1d4:	fc 01       	movw	r30, r24
     1d6:	91 8d       	ldd	r25, Z+25	; 0x19
     1d8:	22 8d       	ldd	r18, Z+26	; 0x1a
     1da:	89 2f       	mov	r24, r25
     1dc:	90 e0       	ldi	r25, 0x00	; 0
     1de:	80 5c       	subi	r24, 0xC0	; 192
     1e0:	9f 4f       	sbci	r25, 0xFF	; 255
     1e2:	82 1b       	sub	r24, r18
     1e4:	91 09       	sbc	r25, r1
     1e6:	8f 73       	andi	r24, 0x3F	; 63
     1e8:	99 27       	eor	r25, r25
     1ea:	08 95       	ret

000001ec <_Z17Serial0_availablev>:
     1ec:	86 eb       	ldi	r24, 0xB6	; 182
     1ee:	91 e0       	ldi	r25, 0x01	; 1
     1f0:	0e 94 ea 00 	call	0x1d4	; 0x1d4 <_ZN14HardwareSerial9availableEv>
     1f4:	21 e0       	ldi	r18, 0x01	; 1
     1f6:	89 2b       	or	r24, r25
     1f8:	09 f4       	brne	.+2      	; 0x1fc <_Z17Serial0_availablev+0x10>
     1fa:	20 e0       	ldi	r18, 0x00	; 0
     1fc:	82 2f       	mov	r24, r18
     1fe:	08 95       	ret

00000200 <_ZN14HardwareSerial17_tx_udr_empty_irqEv>:
     200:	fc 01       	movw	r30, r24
     202:	84 8d       	ldd	r24, Z+28	; 0x1c
     204:	df 01       	movw	r26, r30
     206:	a8 0f       	add	r26, r24
     208:	b1 1d       	adc	r27, r1
     20a:	a3 5a       	subi	r26, 0xA3	; 163
     20c:	bf 4f       	sbci	r27, 0xFF	; 255
     20e:	2c 91       	ld	r18, X
     210:	84 8d       	ldd	r24, Z+28	; 0x1c
     212:	90 e0       	ldi	r25, 0x00	; 0
     214:	01 96       	adiw	r24, 0x01	; 1
     216:	8f 73       	andi	r24, 0x3F	; 63
     218:	99 27       	eor	r25, r25
     21a:	84 8f       	std	Z+28, r24	; 0x1c
     21c:	a6 89       	ldd	r26, Z+22	; 0x16
     21e:	b7 89       	ldd	r27, Z+23	; 0x17
     220:	2c 93       	st	X, r18
     222:	a0 89       	ldd	r26, Z+16	; 0x10
     224:	b1 89       	ldd	r27, Z+17	; 0x11
     226:	8c 91       	ld	r24, X
     228:	83 70       	andi	r24, 0x03	; 3
     22a:	80 64       	ori	r24, 0x40	; 64
     22c:	8c 93       	st	X, r24
     22e:	93 8d       	ldd	r25, Z+27	; 0x1b
     230:	84 8d       	ldd	r24, Z+28	; 0x1c
     232:	98 13       	cpse	r25, r24
     234:	06 c0       	rjmp	.+12     	; 0x242 <_ZN14HardwareSerial17_tx_udr_empty_irqEv+0x42>
     236:	02 88       	ldd	r0, Z+18	; 0x12
     238:	f3 89       	ldd	r31, Z+19	; 0x13
     23a:	e0 2d       	mov	r30, r0
     23c:	80 81       	ld	r24, Z
     23e:	8f 7d       	andi	r24, 0xDF	; 223
     240:	80 83       	st	Z, r24
     242:	08 95       	ret

00000244 <_ZN14HardwareSerial5writeEh>:
     244:	ef 92       	push	r14
     246:	ff 92       	push	r15
     248:	0f 93       	push	r16
     24a:	1f 93       	push	r17
     24c:	cf 93       	push	r28
     24e:	df 93       	push	r29
     250:	ec 01       	movw	r28, r24
     252:	81 e0       	ldi	r24, 0x01	; 1
     254:	88 8f       	std	Y+24, r24	; 0x18
     256:	9b 8d       	ldd	r25, Y+27	; 0x1b
     258:	8c 8d       	ldd	r24, Y+28	; 0x1c
     25a:	98 13       	cpse	r25, r24
     25c:	05 c0       	rjmp	.+10     	; 0x268 <_ZN14HardwareSerial5writeEh+0x24>
     25e:	e8 89       	ldd	r30, Y+16	; 0x10
     260:	f9 89       	ldd	r31, Y+17	; 0x11
     262:	80 81       	ld	r24, Z
     264:	85 fd       	sbrc	r24, 5
     266:	26 c0       	rjmp	.+76     	; 0x2b4 <_ZN14HardwareSerial5writeEh+0x70>
     268:	f6 2e       	mov	r15, r22
     26a:	0b 8d       	ldd	r16, Y+27	; 0x1b
     26c:	10 e0       	ldi	r17, 0x00	; 0
     26e:	0f 5f       	subi	r16, 0xFF	; 255
     270:	1f 4f       	sbci	r17, 0xFF	; 255
     272:	0f 73       	andi	r16, 0x3F	; 63
     274:	11 27       	eor	r17, r17
     276:	e0 2e       	mov	r14, r16
     278:	8c 8d       	ldd	r24, Y+28	; 0x1c
     27a:	e8 12       	cpse	r14, r24
     27c:	0c c0       	rjmp	.+24     	; 0x296 <_ZN14HardwareSerial5writeEh+0x52>
     27e:	0f b6       	in	r0, 0x3f	; 63
     280:	07 fc       	sbrc	r0, 7
     282:	fa cf       	rjmp	.-12     	; 0x278 <_ZN14HardwareSerial5writeEh+0x34>
     284:	e8 89       	ldd	r30, Y+16	; 0x10
     286:	f9 89       	ldd	r31, Y+17	; 0x11
     288:	80 81       	ld	r24, Z
     28a:	85 ff       	sbrs	r24, 5
     28c:	f5 cf       	rjmp	.-22     	; 0x278 <_ZN14HardwareSerial5writeEh+0x34>
     28e:	ce 01       	movw	r24, r28
     290:	0e 94 00 01 	call	0x200	; 0x200 <_ZN14HardwareSerial17_tx_udr_empty_irqEv>
     294:	f1 cf       	rjmp	.-30     	; 0x278 <_ZN14HardwareSerial5writeEh+0x34>
     296:	8b 8d       	ldd	r24, Y+27	; 0x1b
     298:	fe 01       	movw	r30, r28
     29a:	e8 0f       	add	r30, r24
     29c:	f1 1d       	adc	r31, r1
     29e:	e3 5a       	subi	r30, 0xA3	; 163
     2a0:	ff 4f       	sbci	r31, 0xFF	; 255
     2a2:	f0 82       	st	Z, r15
     2a4:	9f b7       	in	r25, 0x3f	; 63
     2a6:	f8 94       	cli
     2a8:	0b 8f       	std	Y+27, r16	; 0x1b
     2aa:	ea 89       	ldd	r30, Y+18	; 0x12
     2ac:	fb 89       	ldd	r31, Y+19	; 0x13
     2ae:	80 81       	ld	r24, Z
     2b0:	80 62       	ori	r24, 0x20	; 32
     2b2:	0a c0       	rjmp	.+20     	; 0x2c8 <_ZN14HardwareSerial5writeEh+0x84>
     2b4:	9f b7       	in	r25, 0x3f	; 63
     2b6:	f8 94       	cli
     2b8:	ee 89       	ldd	r30, Y+22	; 0x16
     2ba:	ff 89       	ldd	r31, Y+23	; 0x17
     2bc:	60 83       	st	Z, r22
     2be:	e8 89       	ldd	r30, Y+16	; 0x10
     2c0:	f9 89       	ldd	r31, Y+17	; 0x11
     2c2:	80 81       	ld	r24, Z
     2c4:	83 70       	andi	r24, 0x03	; 3
     2c6:	80 64       	ori	r24, 0x40	; 64
     2c8:	80 83       	st	Z, r24
     2ca:	9f bf       	out	0x3f, r25	; 63
     2cc:	81 e0       	ldi	r24, 0x01	; 1
     2ce:	90 e0       	ldi	r25, 0x00	; 0
     2d0:	df 91       	pop	r29
     2d2:	cf 91       	pop	r28
     2d4:	1f 91       	pop	r17
     2d6:	0f 91       	pop	r16
     2d8:	ff 90       	pop	r15
     2da:	ef 90       	pop	r14
     2dc:	08 95       	ret

000002de <_ZN14HardwareSerial5flushEv>:
     2de:	cf 93       	push	r28
     2e0:	df 93       	push	r29
     2e2:	ec 01       	movw	r28, r24
     2e4:	88 8d       	ldd	r24, Y+24	; 0x18
     2e6:	88 23       	and	r24, r24
     2e8:	c9 f0       	breq	.+50     	; 0x31c <_ZN14HardwareSerial5flushEv+0x3e>
     2ea:	ea 89       	ldd	r30, Y+18	; 0x12
     2ec:	fb 89       	ldd	r31, Y+19	; 0x13
     2ee:	80 81       	ld	r24, Z
     2f0:	85 fd       	sbrc	r24, 5
     2f2:	05 c0       	rjmp	.+10     	; 0x2fe <_ZN14HardwareSerial5flushEv+0x20>
     2f4:	a8 89       	ldd	r26, Y+16	; 0x10
     2f6:	b9 89       	ldd	r27, Y+17	; 0x11
     2f8:	8c 91       	ld	r24, X
     2fa:	86 fd       	sbrc	r24, 6
     2fc:	0f c0       	rjmp	.+30     	; 0x31c <_ZN14HardwareSerial5flushEv+0x3e>
     2fe:	0f b6       	in	r0, 0x3f	; 63
     300:	07 fc       	sbrc	r0, 7
     302:	f5 cf       	rjmp	.-22     	; 0x2ee <_ZN14HardwareSerial5flushEv+0x10>
     304:	80 81       	ld	r24, Z
     306:	85 ff       	sbrs	r24, 5
     308:	f2 cf       	rjmp	.-28     	; 0x2ee <_ZN14HardwareSerial5flushEv+0x10>
     30a:	a8 89       	ldd	r26, Y+16	; 0x10
     30c:	b9 89       	ldd	r27, Y+17	; 0x11
     30e:	8c 91       	ld	r24, X
     310:	85 ff       	sbrs	r24, 5
     312:	ed cf       	rjmp	.-38     	; 0x2ee <_ZN14HardwareSerial5flushEv+0x10>
     314:	ce 01       	movw	r24, r28
     316:	0e 94 00 01 	call	0x200	; 0x200 <_ZN14HardwareSerial17_tx_udr_empty_irqEv>
     31a:	e7 cf       	rjmp	.-50     	; 0x2ea <_ZN14HardwareSerial5flushEv+0xc>
     31c:	df 91       	pop	r29
     31e:	cf 91       	pop	r28
     320:	08 95       	ret

00000322 <_Z14serialEventRunv>:
     322:	80 e0       	ldi	r24, 0x00	; 0
     324:	90 e0       	ldi	r25, 0x00	; 0
     326:	89 2b       	or	r24, r25
     328:	29 f0       	breq	.+10     	; 0x334 <_Z14serialEventRunv+0x12>
     32a:	0e 94 f6 00 	call	0x1ec	; 0x1ec <_Z17Serial0_availablev>
     32e:	81 11       	cpse	r24, r1
     330:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>
     334:	08 95       	ret

00000336 <_ZN5Print5writeEPKc.constprop.9>:
     336:	61 15       	cp	r22, r1
     338:	71 05       	cpc	r23, r1
     33a:	79 f0       	breq	.+30     	; 0x35a <_ZN5Print5writeEPKc.constprop.9+0x24>
     33c:	fb 01       	movw	r30, r22
     33e:	01 90       	ld	r0, Z+
     340:	00 20       	and	r0, r0
     342:	e9 f7       	brne	.-6      	; 0x33e <_ZN5Print5writeEPKc.constprop.9+0x8>
     344:	31 97       	sbiw	r30, 0x01	; 1
     346:	af 01       	movw	r20, r30
     348:	46 1b       	sub	r20, r22
     34a:	57 0b       	sbc	r21, r23
     34c:	dc 01       	movw	r26, r24
     34e:	ed 91       	ld	r30, X+
     350:	fc 91       	ld	r31, X
     352:	02 80       	ldd	r0, Z+2	; 0x02
     354:	f3 81       	ldd	r31, Z+3	; 0x03
     356:	e0 2d       	mov	r30, r0
     358:	09 94       	ijmp
     35a:	80 e0       	ldi	r24, 0x00	; 0
     35c:	90 e0       	ldi	r25, 0x00	; 0
     35e:	08 95       	ret

00000360 <_ZN5Print11printNumberEmh.constprop.6>:
     360:	8f 92       	push	r8
     362:	9f 92       	push	r9
     364:	af 92       	push	r10
     366:	bf 92       	push	r11
     368:	ef 92       	push	r14
     36a:	ff 92       	push	r15
     36c:	0f 93       	push	r16
     36e:	1f 93       	push	r17
     370:	cf 93       	push	r28
     372:	df 93       	push	r29
     374:	cd b7       	in	r28, 0x3d	; 61
     376:	de b7       	in	r29, 0x3e	; 62
     378:	a1 97       	sbiw	r28, 0x21	; 33
     37a:	0f b6       	in	r0, 0x3f	; 63
     37c:	f8 94       	cli
     37e:	de bf       	out	0x3e, r29	; 62
     380:	0f be       	out	0x3f, r0	; 63
     382:	cd bf       	out	0x3d, r28	; 61
     384:	7c 01       	movw	r14, r24
     386:	fa 01       	movw	r30, r20
     388:	cb 01       	movw	r24, r22
     38a:	19 a2       	std	Y+33, r1	; 0x21
     38c:	22 30       	cpi	r18, 0x02	; 2
     38e:	08 f4       	brcc	.+2      	; 0x392 <_ZN5Print11printNumberEmh.constprop.6+0x32>
     390:	2a e0       	ldi	r18, 0x0A	; 10
     392:	8e 01       	movw	r16, r28
     394:	0f 5d       	subi	r16, 0xDF	; 223
     396:	1f 4f       	sbci	r17, 0xFF	; 255
     398:	82 2e       	mov	r8, r18
     39a:	91 2c       	mov	r9, r1
     39c:	a1 2c       	mov	r10, r1
     39e:	b1 2c       	mov	r11, r1
     3a0:	bf 01       	movw	r22, r30
     3a2:	a5 01       	movw	r20, r10
     3a4:	94 01       	movw	r18, r8
     3a6:	0e 94 cf 0d 	call	0x1b9e	; 0x1b9e <__udivmodsi4>
     3aa:	f9 01       	movw	r30, r18
     3ac:	ca 01       	movw	r24, r20
     3ae:	01 50       	subi	r16, 0x01	; 1
     3b0:	11 09       	sbc	r17, r1
     3b2:	6a 30       	cpi	r22, 0x0A	; 10
     3b4:	14 f4       	brge	.+4      	; 0x3ba <_ZN5Print11printNumberEmh.constprop.6+0x5a>
     3b6:	60 5d       	subi	r22, 0xD0	; 208
     3b8:	01 c0       	rjmp	.+2      	; 0x3bc <_ZN5Print11printNumberEmh.constprop.6+0x5c>
     3ba:	69 5c       	subi	r22, 0xC9	; 201
     3bc:	d8 01       	movw	r26, r16
     3be:	6c 93       	st	X, r22
     3c0:	23 2b       	or	r18, r19
     3c2:	24 2b       	or	r18, r20
     3c4:	25 2b       	or	r18, r21
     3c6:	61 f7       	brne	.-40     	; 0x3a0 <_ZN5Print11printNumberEmh.constprop.6+0x40>
     3c8:	b8 01       	movw	r22, r16
     3ca:	c7 01       	movw	r24, r14
     3cc:	0e 94 9b 01 	call	0x336	; 0x336 <_ZN5Print5writeEPKc.constprop.9>
     3d0:	a1 96       	adiw	r28, 0x21	; 33
     3d2:	0f b6       	in	r0, 0x3f	; 63
     3d4:	f8 94       	cli
     3d6:	de bf       	out	0x3e, r29	; 62
     3d8:	0f be       	out	0x3f, r0	; 63
     3da:	cd bf       	out	0x3d, r28	; 61
     3dc:	df 91       	pop	r29
     3de:	cf 91       	pop	r28
     3e0:	1f 91       	pop	r17
     3e2:	0f 91       	pop	r16
     3e4:	ff 90       	pop	r15
     3e6:	ef 90       	pop	r14
     3e8:	bf 90       	pop	r11
     3ea:	af 90       	pop	r10
     3ec:	9f 90       	pop	r9
     3ee:	8f 90       	pop	r8
     3f0:	08 95       	ret

000003f2 <__cxa_pure_virtual>:
     3f2:	0e 94 f1 0d 	call	0x1be2	; 0x1be2 <abort>

000003f6 <digitalWrite>:
     3f6:	90 e0       	ldi	r25, 0x00	; 0
     3f8:	fc 01       	movw	r30, r24
     3fa:	ec 55       	subi	r30, 0x5C	; 92
     3fc:	ff 4f       	sbci	r31, 0xFF	; 255
     3fe:	24 91       	lpm	r18, Z
     400:	fc 01       	movw	r30, r24
     402:	e0 57       	subi	r30, 0x70	; 112
     404:	ff 4f       	sbci	r31, 0xFF	; 255
     406:	34 91       	lpm	r19, Z
     408:	fc 01       	movw	r30, r24
     40a:	e4 58       	subi	r30, 0x84	; 132
     40c:	ff 4f       	sbci	r31, 0xFF	; 255
     40e:	e4 91       	lpm	r30, Z
     410:	ee 23       	and	r30, r30
     412:	09 f4       	brne	.+2      	; 0x416 <__LOCK_REGION_LENGTH__+0x16>
     414:	3c c0       	rjmp	.+120    	; 0x48e <__LOCK_REGION_LENGTH__+0x8e>
     416:	22 23       	and	r18, r18
     418:	39 f1       	breq	.+78     	; 0x468 <__LOCK_REGION_LENGTH__+0x68>
     41a:	23 30       	cpi	r18, 0x03	; 3
     41c:	91 f0       	breq	.+36     	; 0x442 <__LOCK_REGION_LENGTH__+0x42>
     41e:	38 f4       	brcc	.+14     	; 0x42e <__LOCK_REGION_LENGTH__+0x2e>
     420:	21 30       	cpi	r18, 0x01	; 1
     422:	a9 f0       	breq	.+42     	; 0x44e <__LOCK_REGION_LENGTH__+0x4e>
     424:	22 30       	cpi	r18, 0x02	; 2
     426:	01 f5       	brne	.+64     	; 0x468 <__LOCK_REGION_LENGTH__+0x68>
     428:	84 b5       	in	r24, 0x24	; 36
     42a:	8f 7d       	andi	r24, 0xDF	; 223
     42c:	12 c0       	rjmp	.+36     	; 0x452 <__LOCK_REGION_LENGTH__+0x52>
     42e:	27 30       	cpi	r18, 0x07	; 7
     430:	91 f0       	breq	.+36     	; 0x456 <__LOCK_REGION_LENGTH__+0x56>
     432:	28 30       	cpi	r18, 0x08	; 8
     434:	a1 f0       	breq	.+40     	; 0x45e <__LOCK_REGION_LENGTH__+0x5e>
     436:	24 30       	cpi	r18, 0x04	; 4
     438:	b9 f4       	brne	.+46     	; 0x468 <__LOCK_REGION_LENGTH__+0x68>
     43a:	80 91 80 00 	lds	r24, 0x0080	; 0x800080 <__TEXT_REGION_LENGTH__+0x7e0080>
     43e:	8f 7d       	andi	r24, 0xDF	; 223
     440:	03 c0       	rjmp	.+6      	; 0x448 <__LOCK_REGION_LENGTH__+0x48>
     442:	80 91 80 00 	lds	r24, 0x0080	; 0x800080 <__TEXT_REGION_LENGTH__+0x7e0080>
     446:	8f 77       	andi	r24, 0x7F	; 127
     448:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__TEXT_REGION_LENGTH__+0x7e0080>
     44c:	0d c0       	rjmp	.+26     	; 0x468 <__LOCK_REGION_LENGTH__+0x68>
     44e:	84 b5       	in	r24, 0x24	; 36
     450:	8f 77       	andi	r24, 0x7F	; 127
     452:	84 bd       	out	0x24, r24	; 36
     454:	09 c0       	rjmp	.+18     	; 0x468 <__LOCK_REGION_LENGTH__+0x68>
     456:	80 91 b0 00 	lds	r24, 0x00B0	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7e00b0>
     45a:	8f 77       	andi	r24, 0x7F	; 127
     45c:	03 c0       	rjmp	.+6      	; 0x464 <__LOCK_REGION_LENGTH__+0x64>
     45e:	80 91 b0 00 	lds	r24, 0x00B0	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7e00b0>
     462:	8f 7d       	andi	r24, 0xDF	; 223
     464:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7e00b0>
     468:	f0 e0       	ldi	r31, 0x00	; 0
     46a:	ee 0f       	add	r30, r30
     46c:	ff 1f       	adc	r31, r31
     46e:	ee 58       	subi	r30, 0x8E	; 142
     470:	ff 4f       	sbci	r31, 0xFF	; 255
     472:	a5 91       	lpm	r26, Z+
     474:	b4 91       	lpm	r27, Z
     476:	9f b7       	in	r25, 0x3f	; 63
     478:	f8 94       	cli
     47a:	61 11       	cpse	r22, r1
     47c:	04 c0       	rjmp	.+8      	; 0x486 <__LOCK_REGION_LENGTH__+0x86>
     47e:	8c 91       	ld	r24, X
     480:	30 95       	com	r19
     482:	38 23       	and	r19, r24
     484:	02 c0       	rjmp	.+4      	; 0x48a <__LOCK_REGION_LENGTH__+0x8a>
     486:	ec 91       	ld	r30, X
     488:	3e 2b       	or	r19, r30
     48a:	3c 93       	st	X, r19
     48c:	9f bf       	out	0x3f, r25	; 63
     48e:	08 95       	ret

00000490 <pinMode>:
     490:	cf 93       	push	r28
     492:	df 93       	push	r29
     494:	90 e0       	ldi	r25, 0x00	; 0
     496:	fc 01       	movw	r30, r24
     498:	e0 57       	subi	r30, 0x70	; 112
     49a:	ff 4f       	sbci	r31, 0xFF	; 255
     49c:	24 91       	lpm	r18, Z
     49e:	fc 01       	movw	r30, r24
     4a0:	e4 58       	subi	r30, 0x84	; 132
     4a2:	ff 4f       	sbci	r31, 0xFF	; 255
     4a4:	84 91       	lpm	r24, Z
     4a6:	88 23       	and	r24, r24
     4a8:	61 f1       	breq	.+88     	; 0x502 <pinMode+0x72>
     4aa:	90 e0       	ldi	r25, 0x00	; 0
     4ac:	88 0f       	add	r24, r24
     4ae:	99 1f       	adc	r25, r25
     4b0:	fc 01       	movw	r30, r24
     4b2:	e8 59       	subi	r30, 0x98	; 152
     4b4:	ff 4f       	sbci	r31, 0xFF	; 255
     4b6:	c5 91       	lpm	r28, Z+
     4b8:	d4 91       	lpm	r29, Z
     4ba:	fc 01       	movw	r30, r24
     4bc:	ee 58       	subi	r30, 0x8E	; 142
     4be:	ff 4f       	sbci	r31, 0xFF	; 255
     4c0:	a5 91       	lpm	r26, Z+
     4c2:	b4 91       	lpm	r27, Z
     4c4:	61 11       	cpse	r22, r1
     4c6:	09 c0       	rjmp	.+18     	; 0x4da <pinMode+0x4a>
     4c8:	9f b7       	in	r25, 0x3f	; 63
     4ca:	f8 94       	cli
     4cc:	88 81       	ld	r24, Y
     4ce:	20 95       	com	r18
     4d0:	82 23       	and	r24, r18
     4d2:	88 83       	st	Y, r24
     4d4:	ec 91       	ld	r30, X
     4d6:	2e 23       	and	r18, r30
     4d8:	0b c0       	rjmp	.+22     	; 0x4f0 <pinMode+0x60>
     4da:	62 30       	cpi	r22, 0x02	; 2
     4dc:	61 f4       	brne	.+24     	; 0x4f6 <pinMode+0x66>
     4de:	9f b7       	in	r25, 0x3f	; 63
     4e0:	f8 94       	cli
     4e2:	88 81       	ld	r24, Y
     4e4:	32 2f       	mov	r19, r18
     4e6:	30 95       	com	r19
     4e8:	83 23       	and	r24, r19
     4ea:	88 83       	st	Y, r24
     4ec:	ec 91       	ld	r30, X
     4ee:	2e 2b       	or	r18, r30
     4f0:	2c 93       	st	X, r18
     4f2:	9f bf       	out	0x3f, r25	; 63
     4f4:	06 c0       	rjmp	.+12     	; 0x502 <pinMode+0x72>
     4f6:	8f b7       	in	r24, 0x3f	; 63
     4f8:	f8 94       	cli
     4fa:	e8 81       	ld	r30, Y
     4fc:	2e 2b       	or	r18, r30
     4fe:	28 83       	st	Y, r18
     500:	8f bf       	out	0x3f, r24	; 63
     502:	df 91       	pop	r29
     504:	cf 91       	pop	r28
     506:	08 95       	ret

00000508 <delayMicroseconds>:
     508:	82 30       	cpi	r24, 0x02	; 2
     50a:	91 05       	cpc	r25, r1
     50c:	38 f0       	brcs	.+14     	; 0x51c <delayMicroseconds+0x14>
     50e:	88 0f       	add	r24, r24
     510:	99 1f       	adc	r25, r25
     512:	88 0f       	add	r24, r24
     514:	99 1f       	adc	r25, r25
     516:	05 97       	sbiw	r24, 0x05	; 5
     518:	01 97       	sbiw	r24, 0x01	; 1
     51a:	f1 f7       	brne	.-4      	; 0x518 <delayMicroseconds+0x10>
     51c:	08 95       	ret

0000051e <__vector_16>:
     51e:	1f 92       	push	r1
     520:	0f 92       	push	r0
     522:	0f b6       	in	r0, 0x3f	; 63
     524:	0f 92       	push	r0
     526:	11 24       	eor	r1, r1
     528:	2f 93       	push	r18
     52a:	3f 93       	push	r19
     52c:	8f 93       	push	r24
     52e:	9f 93       	push	r25
     530:	af 93       	push	r26
     532:	bf 93       	push	r27
     534:	80 91 58 02 	lds	r24, 0x0258	; 0x800258 <timer0_millis>
     538:	90 91 59 02 	lds	r25, 0x0259	; 0x800259 <timer0_millis+0x1>
     53c:	a0 91 5a 02 	lds	r26, 0x025A	; 0x80025a <timer0_millis+0x2>
     540:	b0 91 5b 02 	lds	r27, 0x025B	; 0x80025b <timer0_millis+0x3>
     544:	30 91 57 02 	lds	r19, 0x0257	; 0x800257 <timer0_fract>
     548:	23 e0       	ldi	r18, 0x03	; 3
     54a:	23 0f       	add	r18, r19
     54c:	2d 37       	cpi	r18, 0x7D	; 125
     54e:	20 f4       	brcc	.+8      	; 0x558 <__vector_16+0x3a>
     550:	01 96       	adiw	r24, 0x01	; 1
     552:	a1 1d       	adc	r26, r1
     554:	b1 1d       	adc	r27, r1
     556:	05 c0       	rjmp	.+10     	; 0x562 <__vector_16+0x44>
     558:	26 e8       	ldi	r18, 0x86	; 134
     55a:	23 0f       	add	r18, r19
     55c:	02 96       	adiw	r24, 0x02	; 2
     55e:	a1 1d       	adc	r26, r1
     560:	b1 1d       	adc	r27, r1
     562:	20 93 57 02 	sts	0x0257, r18	; 0x800257 <timer0_fract>
     566:	80 93 58 02 	sts	0x0258, r24	; 0x800258 <timer0_millis>
     56a:	90 93 59 02 	sts	0x0259, r25	; 0x800259 <timer0_millis+0x1>
     56e:	a0 93 5a 02 	sts	0x025A, r26	; 0x80025a <timer0_millis+0x2>
     572:	b0 93 5b 02 	sts	0x025B, r27	; 0x80025b <timer0_millis+0x3>
     576:	80 91 53 02 	lds	r24, 0x0253	; 0x800253 <timer0_overflow_count>
     57a:	90 91 54 02 	lds	r25, 0x0254	; 0x800254 <timer0_overflow_count+0x1>
     57e:	a0 91 55 02 	lds	r26, 0x0255	; 0x800255 <timer0_overflow_count+0x2>
     582:	b0 91 56 02 	lds	r27, 0x0256	; 0x800256 <timer0_overflow_count+0x3>
     586:	01 96       	adiw	r24, 0x01	; 1
     588:	a1 1d       	adc	r26, r1
     58a:	b1 1d       	adc	r27, r1
     58c:	80 93 53 02 	sts	0x0253, r24	; 0x800253 <timer0_overflow_count>
     590:	90 93 54 02 	sts	0x0254, r25	; 0x800254 <timer0_overflow_count+0x1>
     594:	a0 93 55 02 	sts	0x0255, r26	; 0x800255 <timer0_overflow_count+0x2>
     598:	b0 93 56 02 	sts	0x0256, r27	; 0x800256 <timer0_overflow_count+0x3>
     59c:	bf 91       	pop	r27
     59e:	af 91       	pop	r26
     5a0:	9f 91       	pop	r25
     5a2:	8f 91       	pop	r24
     5a4:	3f 91       	pop	r19
     5a6:	2f 91       	pop	r18
     5a8:	0f 90       	pop	r0
     5aa:	0f be       	out	0x3f, r0	; 63
     5ac:	0f 90       	pop	r0
     5ae:	1f 90       	pop	r1
     5b0:	18 95       	reti

000005b2 <_ZN5Print7printlnEPKc>:
     5b2:	0f 93       	push	r16
     5b4:	1f 93       	push	r17
     5b6:	cf 93       	push	r28
     5b8:	df 93       	push	r29
     5ba:	ec 01       	movw	r28, r24
     5bc:	0e 94 9b 01 	call	0x336	; 0x336 <_ZN5Print5writeEPKc.constprop.9>
     5c0:	8c 01       	movw	r16, r24
     5c2:	67 ea       	ldi	r22, 0xA7	; 167
     5c4:	71 e0       	ldi	r23, 0x01	; 1
     5c6:	ce 01       	movw	r24, r28
     5c8:	0e 94 9b 01 	call	0x336	; 0x336 <_ZN5Print5writeEPKc.constprop.9>
     5cc:	80 0f       	add	r24, r16
     5ce:	91 1f       	adc	r25, r17
     5d0:	df 91       	pop	r29
     5d2:	cf 91       	pop	r28
     5d4:	1f 91       	pop	r17
     5d6:	0f 91       	pop	r16
     5d8:	08 95       	ret

000005da <_ZN5Print5printEdi>:
     5da:	7f 92       	push	r7
     5dc:	8f 92       	push	r8
     5de:	9f 92       	push	r9
     5e0:	af 92       	push	r10
     5e2:	bf 92       	push	r11
     5e4:	cf 92       	push	r12
     5e6:	df 92       	push	r13
     5e8:	ef 92       	push	r14
     5ea:	ff 92       	push	r15
     5ec:	0f 93       	push	r16
     5ee:	1f 93       	push	r17
     5f0:	cf 93       	push	r28
     5f2:	df 93       	push	r29
     5f4:	8c 01       	movw	r16, r24
     5f6:	6a 01       	movw	r12, r20
     5f8:	7b 01       	movw	r14, r22
     5fa:	72 2e       	mov	r7, r18
     5fc:	9a 01       	movw	r18, r20
     5fe:	ab 01       	movw	r20, r22
     600:	c7 01       	movw	r24, r14
     602:	b6 01       	movw	r22, r12
     604:	0e 94 ca 0d 	call	0x1b94	; 0x1b94 <__unordsf2>
     608:	88 23       	and	r24, r24
     60a:	19 f0       	breq	.+6      	; 0x612 <_ZN5Print5printEdi+0x38>
     60c:	6a ea       	ldi	r22, 0xAA	; 170
     60e:	71 e0       	ldi	r23, 0x01	; 1
     610:	27 c0       	rjmp	.+78     	; 0x660 <_ZN5Print5printEdi+0x86>
     612:	46 01       	movw	r8, r12
     614:	57 01       	movw	r10, r14
     616:	e8 94       	clt
     618:	b7 f8       	bld	r11, 7
     61a:	2f ef       	ldi	r18, 0xFF	; 255
     61c:	3f ef       	ldi	r19, 0xFF	; 255
     61e:	4f e7       	ldi	r20, 0x7F	; 127
     620:	5f e7       	ldi	r21, 0x7F	; 127
     622:	c5 01       	movw	r24, r10
     624:	b4 01       	movw	r22, r8
     626:	0e 94 ca 0d 	call	0x1b94	; 0x1b94 <__unordsf2>
     62a:	81 11       	cpse	r24, r1
     62c:	0d c0       	rjmp	.+26     	; 0x648 <_ZN5Print5printEdi+0x6e>
     62e:	2f ef       	ldi	r18, 0xFF	; 255
     630:	3f ef       	ldi	r19, 0xFF	; 255
     632:	4f e7       	ldi	r20, 0x7F	; 127
     634:	5f e7       	ldi	r21, 0x7F	; 127
     636:	c5 01       	movw	r24, r10
     638:	b4 01       	movw	r22, r8
     63a:	0e 94 fa 0b 	call	0x17f4	; 0x17f4 <__cmpsf2>
     63e:	18 16       	cp	r1, r24
     640:	1c f4       	brge	.+6      	; 0x648 <_ZN5Print5printEdi+0x6e>
     642:	6e ea       	ldi	r22, 0xAE	; 174
     644:	71 e0       	ldi	r23, 0x01	; 1
     646:	0c c0       	rjmp	.+24     	; 0x660 <_ZN5Print5printEdi+0x86>
     648:	2f ef       	ldi	r18, 0xFF	; 255
     64a:	3f ef       	ldi	r19, 0xFF	; 255
     64c:	4f e7       	ldi	r20, 0x7F	; 127
     64e:	5f e4       	ldi	r21, 0x4F	; 79
     650:	c7 01       	movw	r24, r14
     652:	b6 01       	movw	r22, r12
     654:	0e 94 23 0d 	call	0x1a46	; 0x1a46 <__gesf2>
     658:	18 16       	cp	r1, r24
     65a:	94 f4       	brge	.+36     	; 0x680 <_ZN5Print5printEdi+0xa6>
     65c:	62 eb       	ldi	r22, 0xB2	; 178
     65e:	71 e0       	ldi	r23, 0x01	; 1
     660:	c8 01       	movw	r24, r16
     662:	df 91       	pop	r29
     664:	cf 91       	pop	r28
     666:	1f 91       	pop	r17
     668:	0f 91       	pop	r16
     66a:	ff 90       	pop	r15
     66c:	ef 90       	pop	r14
     66e:	df 90       	pop	r13
     670:	cf 90       	pop	r12
     672:	bf 90       	pop	r11
     674:	af 90       	pop	r10
     676:	9f 90       	pop	r9
     678:	8f 90       	pop	r8
     67a:	7f 90       	pop	r7
     67c:	0c 94 9b 01 	jmp	0x336	; 0x336 <_ZN5Print5writeEPKc.constprop.9>
     680:	2f ef       	ldi	r18, 0xFF	; 255
     682:	3f ef       	ldi	r19, 0xFF	; 255
     684:	4f e7       	ldi	r20, 0x7F	; 127
     686:	5f ec       	ldi	r21, 0xCF	; 207
     688:	c7 01       	movw	r24, r14
     68a:	b6 01       	movw	r22, r12
     68c:	0e 94 fa 0b 	call	0x17f4	; 0x17f4 <__cmpsf2>
     690:	87 fd       	sbrc	r24, 7
     692:	e4 cf       	rjmp	.-56     	; 0x65c <_ZN5Print5printEdi+0x82>
     694:	20 e0       	ldi	r18, 0x00	; 0
     696:	30 e0       	ldi	r19, 0x00	; 0
     698:	a9 01       	movw	r20, r18
     69a:	c7 01       	movw	r24, r14
     69c:	b6 01       	movw	r22, r12
     69e:	0e 94 fa 0b 	call	0x17f4	; 0x17f4 <__cmpsf2>
     6a2:	87 ff       	sbrs	r24, 7
     6a4:	0a c0       	rjmp	.+20     	; 0x6ba <_ZN5Print5printEdi+0xe0>
     6a6:	6d e2       	ldi	r22, 0x2D	; 45
     6a8:	c8 01       	movw	r24, r16
     6aa:	0e 94 88 00 	call	0x110	; 0x110 <_ZN5Print5printEc.constprop.8>
     6ae:	ec 01       	movw	r28, r24
     6b0:	f7 fa       	bst	r15, 7
     6b2:	f0 94       	com	r15
     6b4:	f7 f8       	bld	r15, 7
     6b6:	f0 94       	com	r15
     6b8:	02 c0       	rjmp	.+4      	; 0x6be <_ZN5Print5printEdi+0xe4>
     6ba:	c0 e0       	ldi	r28, 0x00	; 0
     6bc:	d0 e0       	ldi	r29, 0x00	; 0
     6be:	b1 2c       	mov	r11, r1
     6c0:	60 e0       	ldi	r22, 0x00	; 0
     6c2:	70 e0       	ldi	r23, 0x00	; 0
     6c4:	80 e0       	ldi	r24, 0x00	; 0
     6c6:	9f e3       	ldi	r25, 0x3F	; 63
     6c8:	b7 14       	cp	r11, r7
     6ca:	40 f4       	brcc	.+16     	; 0x6dc <_ZN5Print5printEdi+0x102>
     6cc:	20 e0       	ldi	r18, 0x00	; 0
     6ce:	30 e0       	ldi	r19, 0x00	; 0
     6d0:	40 e2       	ldi	r20, 0x20	; 32
     6d2:	51 e4       	ldi	r21, 0x41	; 65
     6d4:	0e 94 ff 0b 	call	0x17fe	; 0x17fe <__divsf3>
     6d8:	b3 94       	inc	r11
     6da:	f6 cf       	rjmp	.-20     	; 0x6c8 <_ZN5Print5printEdi+0xee>
     6dc:	a7 01       	movw	r20, r14
     6de:	96 01       	movw	r18, r12
     6e0:	0e 94 8e 0b 	call	0x171c	; 0x171c <__addsf3>
     6e4:	6b 01       	movw	r12, r22
     6e6:	7c 01       	movw	r14, r24
     6e8:	0e 94 9b 0d 	call	0x1b36	; 0x1b36 <__fixunssfsi>
     6ec:	4b 01       	movw	r8, r22
     6ee:	5c 01       	movw	r10, r24
     6f0:	2a e0       	ldi	r18, 0x0A	; 10
     6f2:	ab 01       	movw	r20, r22
     6f4:	bc 01       	movw	r22, r24
     6f6:	c8 01       	movw	r24, r16
     6f8:	0e 94 b0 01 	call	0x360	; 0x360 <_ZN5Print11printNumberEmh.constprop.6>
     6fc:	c8 0f       	add	r28, r24
     6fe:	d9 1f       	adc	r29, r25
     700:	77 20       	and	r7, r7
     702:	c1 f1       	breq	.+112    	; 0x774 <_ZN5Print5printEdi+0x19a>
     704:	c5 01       	movw	r24, r10
     706:	b4 01       	movw	r22, r8
     708:	0e 94 71 0c 	call	0x18e2	; 0x18e2 <__floatunsisf>
     70c:	9b 01       	movw	r18, r22
     70e:	ac 01       	movw	r20, r24
     710:	c7 01       	movw	r24, r14
     712:	b6 01       	movw	r22, r12
     714:	0e 94 8d 0b 	call	0x171a	; 0x171a <__subsf3>
     718:	6b 01       	movw	r12, r22
     71a:	7c 01       	movw	r14, r24
     71c:	6e e2       	ldi	r22, 0x2E	; 46
     71e:	c8 01       	movw	r24, r16
     720:	0e 94 88 00 	call	0x110	; 0x110 <_ZN5Print5printEc.constprop.8>
     724:	c8 0f       	add	r28, r24
     726:	d9 1f       	adc	r29, r25
     728:	20 e0       	ldi	r18, 0x00	; 0
     72a:	30 e0       	ldi	r19, 0x00	; 0
     72c:	40 e2       	ldi	r20, 0x20	; 32
     72e:	51 e4       	ldi	r21, 0x41	; 65
     730:	c7 01       	movw	r24, r14
     732:	b6 01       	movw	r22, r12
     734:	0e 94 28 0d 	call	0x1a50	; 0x1a50 <__mulsf3>
     738:	4b 01       	movw	r8, r22
     73a:	5c 01       	movw	r10, r24
     73c:	0e 94 9b 0d 	call	0x1b36	; 0x1b36 <__fixunssfsi>
     740:	6b 01       	movw	r12, r22
     742:	e1 2c       	mov	r14, r1
     744:	f1 2c       	mov	r15, r1
     746:	2a e0       	ldi	r18, 0x0A	; 10
     748:	b7 01       	movw	r22, r14
     74a:	a6 01       	movw	r20, r12
     74c:	c8 01       	movw	r24, r16
     74e:	0e 94 b0 01 	call	0x360	; 0x360 <_ZN5Print11printNumberEmh.constprop.6>
     752:	c8 0f       	add	r28, r24
     754:	d9 1f       	adc	r29, r25
     756:	c7 01       	movw	r24, r14
     758:	b6 01       	movw	r22, r12
     75a:	0e 94 71 0c 	call	0x18e2	; 0x18e2 <__floatunsisf>
     75e:	9b 01       	movw	r18, r22
     760:	ac 01       	movw	r20, r24
     762:	c5 01       	movw	r24, r10
     764:	b4 01       	movw	r22, r8
     766:	0e 94 8d 0b 	call	0x171a	; 0x171a <__subsf3>
     76a:	6b 01       	movw	r12, r22
     76c:	7c 01       	movw	r14, r24
     76e:	7a 94       	dec	r7
     770:	71 10       	cpse	r7, r1
     772:	da cf       	rjmp	.-76     	; 0x728 <_ZN5Print5printEdi+0x14e>
     774:	ce 01       	movw	r24, r28
     776:	df 91       	pop	r29
     778:	cf 91       	pop	r28
     77a:	1f 91       	pop	r17
     77c:	0f 91       	pop	r16
     77e:	ff 90       	pop	r15
     780:	ef 90       	pop	r14
     782:	df 90       	pop	r13
     784:	cf 90       	pop	r12
     786:	bf 90       	pop	r11
     788:	af 90       	pop	r10
     78a:	9f 90       	pop	r9
     78c:	8f 90       	pop	r8
     78e:	7f 90       	pop	r7
     790:	08 95       	ret

00000792 <_ZN5Print5printEii>:
     792:	cf 92       	push	r12
     794:	df 92       	push	r13
     796:	ef 92       	push	r14
     798:	ff 92       	push	r15
     79a:	0f 93       	push	r16
     79c:	1f 93       	push	r17
     79e:	cf 93       	push	r28
     7a0:	df 93       	push	r29
     7a2:	41 15       	cp	r20, r1
     7a4:	51 05       	cpc	r21, r1
     7a6:	79 f4       	brne	.+30     	; 0x7c6 <_ZN5Print5printEii+0x34>
     7a8:	dc 01       	movw	r26, r24
     7aa:	ed 91       	ld	r30, X+
     7ac:	fc 91       	ld	r31, X
     7ae:	01 90       	ld	r0, Z+
     7b0:	f0 81       	ld	r31, Z
     7b2:	e0 2d       	mov	r30, r0
     7b4:	df 91       	pop	r29
     7b6:	cf 91       	pop	r28
     7b8:	1f 91       	pop	r17
     7ba:	0f 91       	pop	r16
     7bc:	ff 90       	pop	r15
     7be:	ef 90       	pop	r14
     7c0:	df 90       	pop	r13
     7c2:	cf 90       	pop	r12
     7c4:	09 94       	ijmp
     7c6:	6b 01       	movw	r12, r22
     7c8:	77 0f       	add	r23, r23
     7ca:	ee 08       	sbc	r14, r14
     7cc:	ff 08       	sbc	r15, r15
     7ce:	4a 30       	cpi	r20, 0x0A	; 10
     7d0:	51 05       	cpc	r21, r1
     7d2:	f9 f4       	brne	.+62     	; 0x812 <_ZN5Print5printEii+0x80>
     7d4:	f7 fe       	sbrs	r15, 7
     7d6:	1b c0       	rjmp	.+54     	; 0x80e <_ZN5Print5printEii+0x7c>
     7d8:	ec 01       	movw	r28, r24
     7da:	6d e2       	ldi	r22, 0x2D	; 45
     7dc:	0e 94 88 00 	call	0x110	; 0x110 <_ZN5Print5printEc.constprop.8>
     7e0:	8c 01       	movw	r16, r24
     7e2:	44 27       	eor	r20, r20
     7e4:	55 27       	eor	r21, r21
     7e6:	ba 01       	movw	r22, r20
     7e8:	4c 19       	sub	r20, r12
     7ea:	5d 09       	sbc	r21, r13
     7ec:	6e 09       	sbc	r22, r14
     7ee:	7f 09       	sbc	r23, r15
     7f0:	2a e0       	ldi	r18, 0x0A	; 10
     7f2:	ce 01       	movw	r24, r28
     7f4:	0e 94 b0 01 	call	0x360	; 0x360 <_ZN5Print11printNumberEmh.constprop.6>
     7f8:	80 0f       	add	r24, r16
     7fa:	91 1f       	adc	r25, r17
     7fc:	df 91       	pop	r29
     7fe:	cf 91       	pop	r28
     800:	1f 91       	pop	r17
     802:	0f 91       	pop	r16
     804:	ff 90       	pop	r15
     806:	ef 90       	pop	r14
     808:	df 90       	pop	r13
     80a:	cf 90       	pop	r12
     80c:	08 95       	ret
     80e:	2a e0       	ldi	r18, 0x0A	; 10
     810:	01 c0       	rjmp	.+2      	; 0x814 <_ZN5Print5printEii+0x82>
     812:	24 2f       	mov	r18, r20
     814:	b7 01       	movw	r22, r14
     816:	a6 01       	movw	r20, r12
     818:	df 91       	pop	r29
     81a:	cf 91       	pop	r28
     81c:	1f 91       	pop	r17
     81e:	0f 91       	pop	r16
     820:	ff 90       	pop	r15
     822:	ef 90       	pop	r14
     824:	df 90       	pop	r13
     826:	cf 90       	pop	r12
     828:	0c 94 b0 01 	jmp	0x360	; 0x360 <_ZN5Print11printNumberEmh.constprop.6>

0000082c <_ZN5Print7printlnEii>:
     82c:	0f 93       	push	r16
     82e:	1f 93       	push	r17
     830:	cf 93       	push	r28
     832:	df 93       	push	r29
     834:	ec 01       	movw	r28, r24
     836:	0e 94 c9 03 	call	0x792	; 0x792 <_ZN5Print5printEii>
     83a:	8c 01       	movw	r16, r24
     83c:	67 ea       	ldi	r22, 0xA7	; 167
     83e:	71 e0       	ldi	r23, 0x01	; 1
     840:	ce 01       	movw	r24, r28
     842:	0e 94 9b 01 	call	0x336	; 0x336 <_ZN5Print5writeEPKc.constprop.9>
     846:	80 0f       	add	r24, r16
     848:	91 1f       	adc	r25, r17
     84a:	df 91       	pop	r29
     84c:	cf 91       	pop	r28
     84e:	1f 91       	pop	r17
     850:	0f 91       	pop	r16
     852:	08 95       	ret

00000854 <_ZN5Print5printEPKc>:
     854:	0c 94 9b 01 	jmp	0x336	; 0x336 <_ZN5Print5writeEPKc.constprop.9>

00000858 <__vector_19>:
     858:	1f 92       	push	r1
     85a:	0f 92       	push	r0
     85c:	0f b6       	in	r0, 0x3f	; 63
     85e:	0f 92       	push	r0
     860:	11 24       	eor	r1, r1
     862:	2f 93       	push	r18
     864:	3f 93       	push	r19
     866:	4f 93       	push	r20
     868:	5f 93       	push	r21
     86a:	6f 93       	push	r22
     86c:	7f 93       	push	r23
     86e:	8f 93       	push	r24
     870:	9f 93       	push	r25
     872:	af 93       	push	r26
     874:	bf 93       	push	r27
     876:	ef 93       	push	r30
     878:	ff 93       	push	r31
     87a:	86 eb       	ldi	r24, 0xB6	; 182
     87c:	91 e0       	ldi	r25, 0x01	; 1
     87e:	0e 94 00 01 	call	0x200	; 0x200 <_ZN14HardwareSerial17_tx_udr_empty_irqEv>
     882:	ff 91       	pop	r31
     884:	ef 91       	pop	r30
     886:	bf 91       	pop	r27
     888:	af 91       	pop	r26
     88a:	9f 91       	pop	r25
     88c:	8f 91       	pop	r24
     88e:	7f 91       	pop	r23
     890:	6f 91       	pop	r22
     892:	5f 91       	pop	r21
     894:	4f 91       	pop	r20
     896:	3f 91       	pop	r19
     898:	2f 91       	pop	r18
     89a:	0f 90       	pop	r0
     89c:	0f be       	out	0x3f, r0	; 63
     89e:	0f 90       	pop	r0
     8a0:	1f 90       	pop	r1
     8a2:	18 95       	reti

000008a4 <__vector_18>:
     8a4:	1f 92       	push	r1
     8a6:	0f 92       	push	r0
     8a8:	0f b6       	in	r0, 0x3f	; 63
     8aa:	0f 92       	push	r0
     8ac:	11 24       	eor	r1, r1
     8ae:	2f 93       	push	r18
     8b0:	8f 93       	push	r24
     8b2:	9f 93       	push	r25
     8b4:	ef 93       	push	r30
     8b6:	ff 93       	push	r31
     8b8:	e0 91 c6 01 	lds	r30, 0x01C6	; 0x8001c6 <__data_end+0x10>
     8bc:	f0 91 c7 01 	lds	r31, 0x01C7	; 0x8001c7 <__data_end+0x11>
     8c0:	80 81       	ld	r24, Z
     8c2:	e0 91 cc 01 	lds	r30, 0x01CC	; 0x8001cc <__data_end+0x16>
     8c6:	f0 91 cd 01 	lds	r31, 0x01CD	; 0x8001cd <__data_end+0x17>
     8ca:	82 fd       	sbrc	r24, 2
     8cc:	12 c0       	rjmp	.+36     	; 0x8f2 <__vector_18+0x4e>
     8ce:	90 81       	ld	r25, Z
     8d0:	80 91 cf 01 	lds	r24, 0x01CF	; 0x8001cf <__data_end+0x19>
     8d4:	8f 5f       	subi	r24, 0xFF	; 255
     8d6:	8f 73       	andi	r24, 0x3F	; 63
     8d8:	20 91 d0 01 	lds	r18, 0x01D0	; 0x8001d0 <__data_end+0x1a>
     8dc:	82 17       	cp	r24, r18
     8de:	51 f0       	breq	.+20     	; 0x8f4 <__vector_18+0x50>
     8e0:	e0 91 cf 01 	lds	r30, 0x01CF	; 0x8001cf <__data_end+0x19>
     8e4:	f0 e0       	ldi	r31, 0x00	; 0
     8e6:	ea 54       	subi	r30, 0x4A	; 74
     8e8:	fe 4f       	sbci	r31, 0xFE	; 254
     8ea:	95 8f       	std	Z+29, r25	; 0x1d
     8ec:	80 93 cf 01 	sts	0x01CF, r24	; 0x8001cf <__data_end+0x19>
     8f0:	01 c0       	rjmp	.+2      	; 0x8f4 <__vector_18+0x50>
     8f2:	80 81       	ld	r24, Z
     8f4:	ff 91       	pop	r31
     8f6:	ef 91       	pop	r30
     8f8:	9f 91       	pop	r25
     8fa:	8f 91       	pop	r24
     8fc:	2f 91       	pop	r18
     8fe:	0f 90       	pop	r0
     900:	0f be       	out	0x3f, r0	; 63
     902:	0f 90       	pop	r0
     904:	1f 90       	pop	r1
     906:	18 95       	reti

00000908 <_ZN14HardwareSerial5beginEmh>:
     908:	cf 92       	push	r12
     90a:	df 92       	push	r13
     90c:	ef 92       	push	r14
     90e:	ff 92       	push	r15
     910:	1f 93       	push	r17
     912:	cf 93       	push	r28
     914:	df 93       	push	r29
     916:	ec 01       	movw	r28, r24
     918:	6a 01       	movw	r12, r20
     91a:	7b 01       	movw	r14, r22
     91c:	12 2f       	mov	r17, r18
     91e:	e8 89       	ldd	r30, Y+16	; 0x10
     920:	f9 89       	ldd	r31, Y+17	; 0x11
     922:	82 e0       	ldi	r24, 0x02	; 2
     924:	80 83       	st	Z, r24
     926:	41 15       	cp	r20, r1
     928:	51 4e       	sbci	r21, 0xE1	; 225
     92a:	61 05       	cpc	r22, r1
     92c:	71 05       	cpc	r23, r1
     92e:	b1 f0       	breq	.+44     	; 0x95c <_ZN14HardwareSerial5beginEmh+0x54>
     930:	60 e0       	ldi	r22, 0x00	; 0
     932:	79 e0       	ldi	r23, 0x09	; 9
     934:	8d e3       	ldi	r24, 0x3D	; 61
     936:	90 e0       	ldi	r25, 0x00	; 0
     938:	a7 01       	movw	r20, r14
     93a:	96 01       	movw	r18, r12
     93c:	0e 94 cf 0d 	call	0x1b9e	; 0x1b9e <__udivmodsi4>
     940:	da 01       	movw	r26, r20
     942:	c9 01       	movw	r24, r18
     944:	01 97       	sbiw	r24, 0x01	; 1
     946:	a1 09       	sbc	r26, r1
     948:	b1 09       	sbc	r27, r1
     94a:	b6 95       	lsr	r27
     94c:	a7 95       	ror	r26
     94e:	97 95       	ror	r25
     950:	87 95       	ror	r24
     952:	9c 01       	movw	r18, r24
     954:	21 15       	cp	r18, r1
     956:	80 e1       	ldi	r24, 0x10	; 16
     958:	38 07       	cpc	r19, r24
     95a:	a8 f0       	brcs	.+42     	; 0x986 <_ZN14HardwareSerial5beginEmh+0x7e>
     95c:	e8 89       	ldd	r30, Y+16	; 0x10
     95e:	f9 89       	ldd	r31, Y+17	; 0x11
     960:	10 82       	st	Z, r1
     962:	60 e8       	ldi	r22, 0x80	; 128
     964:	74 e8       	ldi	r23, 0x84	; 132
     966:	8e e1       	ldi	r24, 0x1E	; 30
     968:	90 e0       	ldi	r25, 0x00	; 0
     96a:	a7 01       	movw	r20, r14
     96c:	96 01       	movw	r18, r12
     96e:	0e 94 cf 0d 	call	0x1b9e	; 0x1b9e <__udivmodsi4>
     972:	da 01       	movw	r26, r20
     974:	c9 01       	movw	r24, r18
     976:	01 97       	sbiw	r24, 0x01	; 1
     978:	a1 09       	sbc	r26, r1
     97a:	b1 09       	sbc	r27, r1
     97c:	b6 95       	lsr	r27
     97e:	a7 95       	ror	r26
     980:	97 95       	ror	r25
     982:	87 95       	ror	r24
     984:	9c 01       	movw	r18, r24
     986:	ec 85       	ldd	r30, Y+12	; 0x0c
     988:	fd 85       	ldd	r31, Y+13	; 0x0d
     98a:	30 83       	st	Z, r19
     98c:	ee 85       	ldd	r30, Y+14	; 0x0e
     98e:	ff 85       	ldd	r31, Y+15	; 0x0f
     990:	20 83       	st	Z, r18
     992:	18 8e       	std	Y+24, r1	; 0x18
     994:	ec 89       	ldd	r30, Y+20	; 0x14
     996:	fd 89       	ldd	r31, Y+21	; 0x15
     998:	10 83       	st	Z, r17
     99a:	ea 89       	ldd	r30, Y+18	; 0x12
     99c:	fb 89       	ldd	r31, Y+19	; 0x13
     99e:	80 81       	ld	r24, Z
     9a0:	80 61       	ori	r24, 0x10	; 16
     9a2:	80 83       	st	Z, r24
     9a4:	ea 89       	ldd	r30, Y+18	; 0x12
     9a6:	fb 89       	ldd	r31, Y+19	; 0x13
     9a8:	80 81       	ld	r24, Z
     9aa:	88 60       	ori	r24, 0x08	; 8
     9ac:	80 83       	st	Z, r24
     9ae:	ea 89       	ldd	r30, Y+18	; 0x12
     9b0:	fb 89       	ldd	r31, Y+19	; 0x13
     9b2:	80 81       	ld	r24, Z
     9b4:	80 68       	ori	r24, 0x80	; 128
     9b6:	80 83       	st	Z, r24
     9b8:	ea 89       	ldd	r30, Y+18	; 0x12
     9ba:	fb 89       	ldd	r31, Y+19	; 0x13
     9bc:	80 81       	ld	r24, Z
     9be:	8f 7d       	andi	r24, 0xDF	; 223
     9c0:	80 83       	st	Z, r24
     9c2:	df 91       	pop	r29
     9c4:	cf 91       	pop	r28
     9c6:	1f 91       	pop	r17
     9c8:	ff 90       	pop	r15
     9ca:	ef 90       	pop	r14
     9cc:	df 90       	pop	r13
     9ce:	cf 90       	pop	r12
     9d0:	08 95       	ret

000009d2 <_Z11adc_processv>:
	else
		return 0;
}

void adc_process()
{
     9d2:	ef 92       	push	r14
     9d4:	ff 92       	push	r15
     9d6:	0f 93       	push	r16
     9d8:	1f 93       	push	r17
     9da:	cf 93       	push	r28
     9dc:	df 93       	push	r29
	// Para cada canal en el adc_channel_cfg llamo a la funcion de callback que haya terminado la conversion
	critical_begin();
     9de:	0e 94 02 06 	call	0xc04	; 0xc04 <_Z14critical_beginv>
     9e2:	cc e5       	ldi	r28, 0x5C	; 92
     9e4:	d2 e0       	ldi	r29, 0x02	; 2
     9e6:	0f 2e       	mov	r0, r31
     9e8:	f8 e9       	ldi	r31, 0x98	; 152
     9ea:	ef 2e       	mov	r14, r31
     9ec:	f2 e0       	ldi	r31, 0x02	; 2
     9ee:	ff 2e       	mov	r15, r31
     9f0:	f0 2d       	mov	r31, r0
	int i = 0;
	for(i=0; i<MAX_CHANNELS; i++)
	{
		if(adc_channel_cfg[i].active)
     9f2:	8e 81       	ldd	r24, Y+6	; 0x06
     9f4:	9f 81       	ldd	r25, Y+7	; 0x07
     9f6:	89 2b       	or	r24, r25
     9f8:	31 f1       	breq	.+76     	; 0xa46 <_Z11adc_processv+0x74>
		{
			if (adc_channel_cfg[i].finish_convertion)
     9fa:	88 85       	ldd	r24, Y+8	; 0x08
     9fc:	99 85       	ldd	r25, Y+9	; 0x09
     9fe:	89 2b       	or	r24, r25
     a00:	11 f1       	breq	.+68     	; 0xa46 <_Z11adc_processv+0x74>
			{
				Serial.print("leo en el canal ");Serial.print (adc_channel_cfg[i].channel);
     a02:	6e e1       	ldi	r22, 0x1E	; 30
     a04:	71 e0       	ldi	r23, 0x01	; 1
     a06:	86 eb       	ldi	r24, 0xB6	; 182
     a08:	91 e0       	ldi	r25, 0x01	; 1
     a0a:	0e 94 2a 04 	call	0x854	; 0x854 <_ZN5Print5printEPKc>
     a0e:	68 81       	ld	r22, Y
     a10:	79 81       	ldd	r23, Y+1	; 0x01
     a12:	4a e0       	ldi	r20, 0x0A	; 10
     a14:	50 e0       	ldi	r21, 0x00	; 0
     a16:	86 eb       	ldi	r24, 0xB6	; 182
     a18:	91 e0       	ldi	r25, 0x01	; 1
     a1a:	0e 94 c9 03 	call	0x792	; 0x792 <_ZN5Print5printEii>
				Serial.print("value adc ");Serial.println (adc_channel_cfg[i].value);
     a1e:	6f e2       	ldi	r22, 0x2F	; 47
     a20:	71 e0       	ldi	r23, 0x01	; 1
     a22:	86 eb       	ldi	r24, 0xB6	; 182
     a24:	91 e0       	ldi	r25, 0x01	; 1
     a26:	0e 94 2a 04 	call	0x854	; 0x854 <_ZN5Print5printEPKc>
     a2a:	6c 81       	ldd	r22, Y+4	; 0x04
     a2c:	7d 81       	ldd	r23, Y+5	; 0x05
     a2e:	4a e0       	ldi	r20, 0x0A	; 10
     a30:	50 e0       	ldi	r21, 0x00	; 0
     a32:	86 eb       	ldi	r24, 0xB6	; 182
     a34:	91 e0       	ldi	r25, 0x01	; 1
     a36:	0e 94 16 04 	call	0x82c	; 0x82c <_ZN5Print7printlnEii>
				fnqueue_add (adc_channel_cfg[i].callback);
     a3a:	8a 81       	ldd	r24, Y+2	; 0x02
     a3c:	9b 81       	ldd	r25, Y+3	; 0x03
     a3e:	0e 94 78 06 	call	0xcf0	; 0xcf0 <_Z11fnqueue_addPFvvE>
				adc_channel_cfg[i].finish_convertion = 0;
     a42:	19 86       	std	Y+9, r1	; 0x09
     a44:	18 86       	std	Y+8, r1	; 0x08
     a46:	2a 96       	adiw	r28, 0x0a	; 10
void adc_process()
{
	// Para cada canal en el adc_channel_cfg llamo a la funcion de callback que haya terminado la conversion
	critical_begin();
	int i = 0;
	for(i=0; i<MAX_CHANNELS; i++)
     a48:	ce 15       	cp	r28, r14
     a4a:	df 05       	cpc	r29, r15
     a4c:	91 f6       	brne	.-92     	; 0x9f2 <_Z11adc_processv+0x20>
				fnqueue_add (adc_channel_cfg[i].callback);
				adc_channel_cfg[i].finish_convertion = 0;
			}
		}
	}
	critical_end();
     a4e:	0e 94 26 06 	call	0xc4c	; 0xc4c <_Z12critical_endv>
}
     a52:	df 91       	pop	r29
     a54:	cf 91       	pop	r28
     a56:	1f 91       	pop	r17
     a58:	0f 91       	pop	r16
     a5a:	ff 90       	pop	r15
     a5c:	ef 90       	pop	r14
     a5e:	08 95       	ret

00000a60 <_Z8adc_initP7adc_cfg>:
static int cant_channels = 0;

struct adc_cfg adc_channel_cfg[MAX_CHANNELS];

int adc_init(struct adc_cfg *cfg)
{
     a60:	cf 93       	push	r28
     a62:	df 93       	push	r29
     a64:	ec 01       	movw	r28, r24
	//Configuro todo para el canal inicial
	critical_begin ();
     a66:	0e 94 02 06 	call	0xc04	; 0xc04 <_Z14critical_beginv>
	int ADC_channel = cfg->channel;
     a6a:	28 81       	ld	r18, Y
     a6c:	39 81       	ldd	r19, Y+1	; 0x01
	if(ADC_channel>-1 && ADC_channel<MAX_CHANNELS)
     a6e:	26 30       	cpi	r18, 0x06	; 6
     a70:	31 05       	cpc	r19, r1
     a72:	08 f0       	brcs	.+2      	; 0xa76 <_Z8adc_initP7adc_cfg+0x16>
     a74:	61 c0       	rjmp	.+194    	; 0xb38 <_Z8adc_initP7adc_cfg+0xd8>
	{
		adc_channel_cfg[cfg->channel] = *cfg;
     a76:	c9 01       	movw	r24, r18
     a78:	88 0f       	add	r24, r24
     a7a:	99 1f       	adc	r25, r25
     a7c:	88 0f       	add	r24, r24
     a7e:	99 1f       	adc	r25, r25
     a80:	88 0f       	add	r24, r24
     a82:	99 1f       	adc	r25, r25
     a84:	d9 01       	movw	r26, r18
     a86:	aa 0f       	add	r26, r26
     a88:	bb 1f       	adc	r27, r27
     a8a:	a8 0f       	add	r26, r24
     a8c:	b9 1f       	adc	r27, r25
     a8e:	a4 5a       	subi	r26, 0xA4	; 164
     a90:	bd 4f       	sbci	r27, 0xFD	; 253
     a92:	8a e0       	ldi	r24, 0x0A	; 10
     a94:	fe 01       	movw	r30, r28
     a96:	01 90       	ld	r0, Z+
     a98:	0d 92       	st	X+, r0
     a9a:	8a 95       	dec	r24
     a9c:	e1 f7       	brne	.-8      	; 0xa96 <_Z8adc_initP7adc_cfg+0x36>
		adc_channel_cfg[cfg->channel].active = true;
     a9e:	88 81       	ld	r24, Y
     aa0:	99 81       	ldd	r25, Y+1	; 0x01
     aa2:	fc 01       	movw	r30, r24
     aa4:	ee 0f       	add	r30, r30
     aa6:	ff 1f       	adc	r31, r31
     aa8:	88 0f       	add	r24, r24
     aaa:	99 1f       	adc	r25, r25
     aac:	88 0f       	add	r24, r24
     aae:	99 1f       	adc	r25, r25
     ab0:	88 0f       	add	r24, r24
     ab2:	99 1f       	adc	r25, r25
     ab4:	e8 0f       	add	r30, r24
     ab6:	f9 1f       	adc	r31, r25
     ab8:	e4 5a       	subi	r30, 0xA4	; 164
     aba:	fd 4f       	sbci	r31, 0xFD	; 253
     abc:	81 e0       	ldi	r24, 0x01	; 1
     abe:	90 e0       	ldi	r25, 0x00	; 0
     ac0:	97 83       	std	Z+7, r25	; 0x07
     ac2:	86 83       	std	Z+6, r24	; 0x06

		// si no estoy convirtiendo
		if(!converting)
     ac4:	80 91 9a 02 	lds	r24, 0x029A	; 0x80029a <_ZL10converting>
     ac8:	90 91 9b 02 	lds	r25, 0x029B	; 0x80029b <_ZL10converting+0x1>
     acc:	89 2b       	or	r24, r25
     ace:	31 f5       	brne	.+76     	; 0xb1c <_Z8adc_initP7adc_cfg+0xbc>
		{

			actual_channel = ADC_channel;
     ad0:	30 93 9d 02 	sts	0x029D, r19	; 0x80029d <_ZL14actual_channel+0x1>
     ad4:	20 93 9c 02 	sts	0x029C, r18	; 0x80029c <_ZL14actual_channel>
			ADMUX |= (ADC_channel); //inicializar MUX0..2 segun el canal ingresado
     ad8:	ec e7       	ldi	r30, 0x7C	; 124
     ada:	f0 e0       	ldi	r31, 0x00	; 0
     adc:	80 81       	ld	r24, Z
     ade:	28 2b       	or	r18, r24
     ae0:	20 83       	st	Z, r18

			// si es el primer canal configuro el ADC con la configuracion general
			if(cant_channels == 0)
     ae2:	80 91 98 02 	lds	r24, 0x0298	; 0x800298 <_ZL13cant_channels>
     ae6:	90 91 99 02 	lds	r25, 0x0299	; 0x800299 <_ZL13cant_channels+0x1>
     aea:	89 2b       	or	r24, r25
     aec:	89 f4       	brne	.+34     	; 0xb10 <_Z8adc_initP7adc_cfg+0xb0>
			{
				//ADCSRB = 0; // este registro no lo deberia tocar segun el datasheet
				
				ADCSRA |= (1<<ADEN); // habilito el adc "lo prendo" segun el datasheet
     aee:	ea e7       	ldi	r30, 0x7A	; 122
     af0:	f0 e0       	ldi	r31, 0x00	; 0
     af2:	80 81       	ld	r24, Z
     af4:	80 68       	ori	r24, 0x80	; 128
     af6:	80 83       	st	Z, r24
				ADCSRA |= (1<<ADPS2) | (1<<ADPS1) | (1<<ADPS0); // estos bit setean el prescaler lo pongo en 16
     af8:	80 81       	ld	r24, Z
     afa:	87 60       	ori	r24, 0x07	; 7
     afc:	80 83       	st	Z, r24
				ADCSRA |= (1<< ADIE); // este bit activa la interrupcion por conversion completa ISR(ADC_Vect)
     afe:	80 81       	ld	r24, Z
     b00:	88 60       	ori	r24, 0x08	; 8
     b02:	80 83       	st	Z, r24
				ADCSRA |= ~(1<<ADATE); // este bit en 0 desactiva el AutoTrigger segun el datasheet
     b04:	80 81       	ld	r24, Z
     b06:	8f 6d       	ori	r24, 0xDF	; 223
     b08:	80 83       	st	Z, r24
				ADCSRA |= (1<<ADSC); // este es el bit que pone a funcionar el ADC segun el datasheet
     b0a:	80 81       	ld	r24, Z
     b0c:	80 64       	ori	r24, 0x40	; 64
     b0e:	80 83       	st	Z, r24
			}
			converting = 1;
     b10:	81 e0       	ldi	r24, 0x01	; 1
     b12:	90 e0       	ldi	r25, 0x00	; 0
     b14:	90 93 9b 02 	sts	0x029B, r25	; 0x80029b <_ZL10converting+0x1>
     b18:	80 93 9a 02 	sts	0x029A, r24	; 0x80029a <_ZL10converting>
		}
		cant_channels++;
     b1c:	80 91 98 02 	lds	r24, 0x0298	; 0x800298 <_ZL13cant_channels>
     b20:	90 91 99 02 	lds	r25, 0x0299	; 0x800299 <_ZL13cant_channels+0x1>
     b24:	01 96       	adiw	r24, 0x01	; 1
     b26:	90 93 99 02 	sts	0x0299, r25	; 0x800299 <_ZL13cant_channels+0x1>
     b2a:	80 93 98 02 	sts	0x0298, r24	; 0x800298 <_ZL13cant_channels>
		critical_end ();
     b2e:	0e 94 26 06 	call	0xc4c	; 0xc4c <_Z12critical_endv>
		return 1;
     b32:	81 e0       	ldi	r24, 0x01	; 1
     b34:	90 e0       	ldi	r25, 0x00	; 0
     b36:	02 c0       	rjmp	.+4      	; 0xb3c <_Z8adc_initP7adc_cfg+0xdc>
	}
	else
		return 0;
     b38:	80 e0       	ldi	r24, 0x00	; 0
     b3a:	90 e0       	ldi	r25, 0x00	; 0
}
     b3c:	df 91       	pop	r29
     b3e:	cf 91       	pop	r28
     b40:	08 95       	ret

00000b42 <__vector_21>:
	}
	critical_end();
}

ISR(ADC_vect)
{
     b42:	1f 92       	push	r1
     b44:	0f 92       	push	r0
     b46:	0f b6       	in	r0, 0x3f	; 63
     b48:	0f 92       	push	r0
     b4a:	11 24       	eor	r1, r1
     b4c:	2f 93       	push	r18
     b4e:	3f 93       	push	r19
     b50:	4f 93       	push	r20
     b52:	5f 93       	push	r21
     b54:	6f 93       	push	r22
     b56:	7f 93       	push	r23
     b58:	8f 93       	push	r24
     b5a:	9f 93       	push	r25
     b5c:	af 93       	push	r26
     b5e:	bf 93       	push	r27
     b60:	ef 93       	push	r30
     b62:	ff 93       	push	r31
	adc_channel_cfg[actual_channel].value = ADC;//ADCH<<8 | ADCL;
     b64:	80 91 9c 02 	lds	r24, 0x029C	; 0x80029c <_ZL14actual_channel>
     b68:	90 91 9d 02 	lds	r25, 0x029D	; 0x80029d <_ZL14actual_channel+0x1>
     b6c:	20 91 78 00 	lds	r18, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
     b70:	30 91 79 00 	lds	r19, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
     b74:	fc 01       	movw	r30, r24
     b76:	ee 0f       	add	r30, r30
     b78:	ff 1f       	adc	r31, r31
     b7a:	88 0f       	add	r24, r24
     b7c:	99 1f       	adc	r25, r25
     b7e:	88 0f       	add	r24, r24
     b80:	99 1f       	adc	r25, r25
     b82:	88 0f       	add	r24, r24
     b84:	99 1f       	adc	r25, r25
     b86:	e8 0f       	add	r30, r24
     b88:	f9 1f       	adc	r31, r25
     b8a:	e4 5a       	subi	r30, 0xA4	; 164
     b8c:	fd 4f       	sbci	r31, 0xFD	; 253
     b8e:	35 83       	std	Z+5, r19	; 0x05
     b90:	24 83       	std	Z+4, r18	; 0x04
	adc_channel_cfg[actual_channel].finish_convertion = 1;
     b92:	80 91 9c 02 	lds	r24, 0x029C	; 0x80029c <_ZL14actual_channel>
     b96:	90 91 9d 02 	lds	r25, 0x029D	; 0x80029d <_ZL14actual_channel+0x1>
     b9a:	fc 01       	movw	r30, r24
     b9c:	ee 0f       	add	r30, r30
     b9e:	ff 1f       	adc	r31, r31
     ba0:	88 0f       	add	r24, r24
     ba2:	99 1f       	adc	r25, r25
     ba4:	88 0f       	add	r24, r24
     ba6:	99 1f       	adc	r25, r25
     ba8:	88 0f       	add	r24, r24
     baa:	99 1f       	adc	r25, r25
     bac:	e8 0f       	add	r30, r24
     bae:	f9 1f       	adc	r31, r25
     bb0:	e4 5a       	subi	r30, 0xA4	; 164
     bb2:	fd 4f       	sbci	r31, 0xFD	; 253
     bb4:	81 e0       	ldi	r24, 0x01	; 1
     bb6:	90 e0       	ldi	r25, 0x00	; 0
     bb8:	91 87       	std	Z+9, r25	; 0x09
     bba:	80 87       	std	Z+8, r24	; 0x08

	fnqueue_add (adc_process);
     bbc:	89 ee       	ldi	r24, 0xE9	; 233
     bbe:	94 e0       	ldi	r25, 0x04	; 4
     bc0:	0e 94 78 06 	call	0xcf0	; 0xcf0 <_Z11fnqueue_addPFvvE>
	if(actual_channel == 0)
		actual_channel = 1;
	else
		actual_channel = 0;*/

	ADMUX = (actual_channel); // seteo el proximo canal a convertir
     bc4:	80 91 9c 02 	lds	r24, 0x029C	; 0x80029c <_ZL14actual_channel>
     bc8:	90 91 9d 02 	lds	r25, 0x029D	; 0x80029d <_ZL14actual_channel+0x1>
     bcc:	ec e7       	ldi	r30, 0x7C	; 124
     bce:	f0 e0       	ldi	r31, 0x00	; 0
     bd0:	80 83       	st	Z, r24

	ADMUX |= (1<<MUX3);
     bd2:	80 81       	ld	r24, Z
     bd4:	88 60       	ori	r24, 0x08	; 8
     bd6:	80 83       	st	Z, r24

	ADCSRA |= (1<<ADSC); //Poner el ADC a convertir
     bd8:	ea e7       	ldi	r30, 0x7A	; 122
     bda:	f0 e0       	ldi	r31, 0x00	; 0
     bdc:	80 81       	ld	r24, Z
     bde:	80 64       	ori	r24, 0x40	; 64
     be0:	80 83       	st	Z, r24
}
     be2:	ff 91       	pop	r31
     be4:	ef 91       	pop	r30
     be6:	bf 91       	pop	r27
     be8:	af 91       	pop	r26
     bea:	9f 91       	pop	r25
     bec:	8f 91       	pop	r24
     bee:	7f 91       	pop	r23
     bf0:	6f 91       	pop	r22
     bf2:	5f 91       	pop	r21
     bf4:	4f 91       	pop	r20
     bf6:	3f 91       	pop	r19
     bf8:	2f 91       	pop	r18
     bfa:	0f 90       	pop	r0
     bfc:	0f be       	out	0x3f, r0	; 63
     bfe:	0f 90       	pop	r0
     c00:	1f 90       	pop	r1
     c02:	18 95       	reti

00000c04 <_Z14critical_beginv>:
    // módulo de región crítica. Esto puede suceder cuando se está ejecutando
    // una rutina de interrupción. En este caso, no deshabilitar las
    // interrupciones

    // Lectura atómica del registro
    uint8_t status_register = SREG;
     c04:	2f b7       	in	r18, 0x3f	; 63
    cli();
     c06:	f8 94       	cli

    // Si las interrupciones estaban habilitadas, y aún no fueron
    // deshabilitadas por el módulo de región crítica
    // o están deshabilitadas pero por el módulo de región crítica
    //       incrementar el anidamiento.
    if (((anidamiento == 0) && ((status_register & (0x80)) != 0)) || ((anidamiento != 0) && ((status_register & (0x80)) == 0)))
     c08:	80 91 9e 02 	lds	r24, 0x029E	; 0x80029e <_ZL11anidamiento>
     c0c:	90 91 9f 02 	lds	r25, 0x029F	; 0x80029f <_ZL11anidamiento+0x1>
     c10:	89 2b       	or	r24, r25
     c12:	19 f4       	brne	.+6      	; 0xc1a <_Z14critical_beginv+0x16>
     c14:	22 23       	and	r18, r18
     c16:	9c f4       	brge	.+38     	; 0xc3e <_Z14critical_beginv+0x3a>
     c18:	08 c0       	rjmp	.+16     	; 0xc2a <_Z14critical_beginv+0x26>
     c1a:	80 91 9e 02 	lds	r24, 0x029E	; 0x80029e <_ZL11anidamiento>
     c1e:	90 91 9f 02 	lds	r25, 0x029F	; 0x80029f <_ZL11anidamiento+0x1>
     c22:	89 2b       	or	r24, r25
     c24:	91 f0       	breq	.+36     	; 0xc4a <_Z14critical_beginv+0x46>
     c26:	22 23       	and	r18, r18
     c28:	84 f0       	brlt	.+32     	; 0xc4a <_Z14critical_beginv+0x46>
    {
        anidamiento++;
     c2a:	80 91 9e 02 	lds	r24, 0x029E	; 0x80029e <_ZL11anidamiento>
     c2e:	90 91 9f 02 	lds	r25, 0x029F	; 0x80029f <_ZL11anidamiento+0x1>
     c32:	01 96       	adiw	r24, 0x01	; 1
     c34:	90 93 9f 02 	sts	0x029F, r25	; 0x80029f <_ZL11anidamiento+0x1>
     c38:	80 93 9e 02 	sts	0x029E, r24	; 0x80029e <_ZL11anidamiento>
     c3c:	08 95       	ret

    // Si las interrupciones estaban habilitadas, y aún no fueron
    // deshabilitadas por el módulo de región crítica
    // o están deshabilitadas pero por el módulo de región crítica
    //       incrementar el anidamiento.
    if (((anidamiento == 0) && ((status_register & (0x80)) != 0)) || ((anidamiento != 0) && ((status_register & (0x80)) == 0)))
     c3e:	80 91 9e 02 	lds	r24, 0x029E	; 0x80029e <_ZL11anidamiento>
     c42:	90 91 9f 02 	lds	r25, 0x029F	; 0x80029f <_ZL11anidamiento+0x1>
     c46:	89 2b       	or	r24, r25
     c48:	81 f7       	brne	.-32     	; 0xc2a <_Z14critical_beginv+0x26>
     c4a:	08 95       	ret

00000c4c <_Z12critical_endv>:
    // crítica, no hacer nada.
}

void critical_end(void)
{
    uint8_t status_register = SREG;
     c4c:	2f b7       	in	r18, 0x3f	; 63
    cli();
     c4e:	f8 94       	cli

    if (anidamiento > 0) {
     c50:	80 91 9e 02 	lds	r24, 0x029E	; 0x80029e <_ZL11anidamiento>
     c54:	90 91 9f 02 	lds	r25, 0x029F	; 0x80029f <_ZL11anidamiento+0x1>
     c58:	18 16       	cp	r1, r24
     c5a:	19 06       	cpc	r1, r25
     c5c:	8c f4       	brge	.+34     	; 0xc80 <_Z12critical_endv+0x34>
        anidamiento--;
     c5e:	80 91 9e 02 	lds	r24, 0x029E	; 0x80029e <_ZL11anidamiento>
     c62:	90 91 9f 02 	lds	r25, 0x029F	; 0x80029f <_ZL11anidamiento+0x1>
     c66:	01 97       	sbiw	r24, 0x01	; 1
     c68:	90 93 9f 02 	sts	0x029F, r25	; 0x80029f <_ZL11anidamiento+0x1>
     c6c:	80 93 9e 02 	sts	0x029E, r24	; 0x80029e <_ZL11anidamiento>
        if (anidamiento == 0)
     c70:	80 91 9e 02 	lds	r24, 0x029E	; 0x80029e <_ZL11anidamiento>
     c74:	90 91 9f 02 	lds	r25, 0x029F	; 0x80029f <_ZL11anidamiento+0x1>
     c78:	89 2b       	or	r24, r25
     c7a:	29 f4       	brne	.+10     	; 0xc86 <_Z12critical_endv+0x3a>
            sei();
     c7c:	78 94       	sei
     c7e:	08 95       	ret
    }
    else if ((status_register & 0x80) != 0)
     c80:	22 23       	and	r18, r18
     c82:	0c f4       	brge	.+2      	; 0xc86 <_Z12critical_endv+0x3a>
        sei();
     c84:	78 94       	sei
     c86:	08 95       	ret

00000c88 <_Z12fnqueue_initv>:
	fnqueue_tail,
	fnqueue_count;

bool fnqueue_init(void)
{
	fnqueue_head = 0;
     c88:	10 92 a2 02 	sts	0x02A2, r1	; 0x8002a2 <_ZL12fnqueue_head>
	fnqueue_tail = 0;
     c8c:	10 92 a1 02 	sts	0x02A1, r1	; 0x8002a1 <_ZL12fnqueue_tail>
	fnqueue_count = 0;
     c90:	10 92 a0 02 	sts	0x02A0, r1	; 0x8002a0 <_ZL13fnqueue_count>
    
    return true;
}
     c94:	81 e0       	ldi	r24, 0x01	; 1
     c96:	08 95       	ret

00000c98 <_Z11fnqueue_runv>:

bool fnqueue_run(void)
{
    critical_begin();
     c98:	0e 94 02 06 	call	0xc04	; 0xc04 <_Z14critical_beginv>
    if (fnqueue_count > 0)
     c9c:	80 91 a0 02 	lds	r24, 0x02A0	; 0x8002a0 <_ZL13fnqueue_count>
     ca0:	88 23       	and	r24, r24
     ca2:	11 f1       	breq	.+68     	; 0xce8 <_Z11fnqueue_runv+0x50>
    {
        critical_end();
     ca4:	0e 94 26 06 	call	0xc4c	; 0xc4c <_Z12critical_endv>

        fnqueue_functions[fnqueue_head]();
     ca8:	e0 91 a2 02 	lds	r30, 0x02A2	; 0x8002a2 <_ZL12fnqueue_head>
     cac:	f0 e0       	ldi	r31, 0x00	; 0
     cae:	ee 0f       	add	r30, r30
     cb0:	ff 1f       	adc	r31, r31
     cb2:	ed 55       	subi	r30, 0x5D	; 93
     cb4:	fd 4f       	sbci	r31, 0xFD	; 253
     cb6:	01 90       	ld	r0, Z+
     cb8:	f0 81       	ld	r31, Z
     cba:	e0 2d       	mov	r30, r0
     cbc:	09 95       	icall
        critical_begin();
     cbe:	0e 94 02 06 	call	0xc04	; 0xc04 <_Z14critical_beginv>
        fnqueue_head = (fnqueue_head + 1) % FNQUEUE_LENGTH;
     cc2:	80 91 a2 02 	lds	r24, 0x02A2	; 0x8002a2 <_ZL12fnqueue_head>
     cc6:	90 e0       	ldi	r25, 0x00	; 0
     cc8:	01 96       	adiw	r24, 0x01	; 1
     cca:	8f 70       	andi	r24, 0x0F	; 15
     ccc:	90 78       	andi	r25, 0x80	; 128
     cce:	99 23       	and	r25, r25
     cd0:	24 f4       	brge	.+8      	; 0xcda <_Z11fnqueue_runv+0x42>
     cd2:	01 97       	sbiw	r24, 0x01	; 1
     cd4:	80 6f       	ori	r24, 0xF0	; 240
     cd6:	9f 6f       	ori	r25, 0xFF	; 255
     cd8:	01 96       	adiw	r24, 0x01	; 1
     cda:	80 93 a2 02 	sts	0x02A2, r24	; 0x8002a2 <_ZL12fnqueue_head>
        fnqueue_count--;
     cde:	80 91 a0 02 	lds	r24, 0x02A0	; 0x8002a0 <_ZL13fnqueue_count>
     ce2:	81 50       	subi	r24, 0x01	; 1
     ce4:	80 93 a0 02 	sts	0x02A0, r24	; 0x8002a0 <_ZL13fnqueue_count>
    }
    critical_end();
     ce8:	0e 94 26 06 	call	0xc4c	; 0xc4c <_Z12critical_endv>

	return 1;
}
     cec:	81 e0       	ldi	r24, 0x01	; 1
     cee:	08 95       	ret

00000cf0 <_Z11fnqueue_addPFvvE>:

bool fnqueue_add(void (*function)(void))
{
     cf0:	cf 93       	push	r28
     cf2:	df 93       	push	r29
     cf4:	ec 01       	movw	r28, r24
	bool result = false;
	
    critical_begin();
     cf6:	0e 94 02 06 	call	0xc04	; 0xc04 <_Z14critical_beginv>
    if (fnqueue_count < FNQUEUE_LENGTH)
     cfa:	20 91 a0 02 	lds	r18, 0x02A0	; 0x8002a0 <_ZL13fnqueue_count>
     cfe:	20 31       	cpi	r18, 0x10	; 16
     d00:	d0 f4       	brcc	.+52     	; 0xd36 <_Z11fnqueue_addPFvvE+0x46>
    {
        fnqueue_functions[fnqueue_tail] = function;
     d02:	80 91 a1 02 	lds	r24, 0x02A1	; 0x8002a1 <_ZL12fnqueue_tail>
     d06:	90 e0       	ldi	r25, 0x00	; 0
     d08:	fc 01       	movw	r30, r24
     d0a:	ee 0f       	add	r30, r30
     d0c:	ff 1f       	adc	r31, r31
     d0e:	ed 55       	subi	r30, 0x5D	; 93
     d10:	fd 4f       	sbci	r31, 0xFD	; 253
     d12:	d1 83       	std	Z+1, r29	; 0x01
     d14:	c0 83       	st	Z, r28
        fnqueue_tail = (fnqueue_tail + 1) % FNQUEUE_LENGTH;
     d16:	01 96       	adiw	r24, 0x01	; 1
     d18:	8f 70       	andi	r24, 0x0F	; 15
     d1a:	90 78       	andi	r25, 0x80	; 128
     d1c:	99 23       	and	r25, r25
     d1e:	24 f4       	brge	.+8      	; 0xd28 <_Z11fnqueue_addPFvvE+0x38>
     d20:	01 97       	sbiw	r24, 0x01	; 1
     d22:	80 6f       	ori	r24, 0xF0	; 240
     d24:	9f 6f       	ori	r25, 0xFF	; 255
     d26:	01 96       	adiw	r24, 0x01	; 1
     d28:	80 93 a1 02 	sts	0x02A1, r24	; 0x8002a1 <_ZL12fnqueue_tail>
        fnqueue_count++;
     d2c:	2f 5f       	subi	r18, 0xFF	; 255
     d2e:	20 93 a0 02 	sts	0x02A0, r18	; 0x8002a0 <_ZL13fnqueue_count>
        result = true;
     d32:	c1 e0       	ldi	r28, 0x01	; 1
     d34:	01 c0       	rjmp	.+2      	; 0xd38 <_Z11fnqueue_addPFvvE+0x48>
	return 1;
}

bool fnqueue_add(void (*function)(void))
{
	bool result = false;
     d36:	c0 e0       	ldi	r28, 0x00	; 0
        fnqueue_functions[fnqueue_tail] = function;
        fnqueue_tail = (fnqueue_tail + 1) % FNQUEUE_LENGTH;
        fnqueue_count++;
        result = true;
    }
    critical_end();
     d38:	0e 94 26 06 	call	0xc4c	; 0xc4c <_Z12critical_endv>
    return result;
}
     d3c:	8c 2f       	mov	r24, r28
     d3e:	df 91       	pop	r29
     d40:	cf 91       	pop	r28
     d42:	08 95       	ret

00000d44 <_Z20adc_keyboard_processv>:
	if(tecla>=0 && tecla < NRO_TECLAS)
		teclas_callback[tecla].callback_Down = handler;
}

void adc_keyboard_process()
{
     d44:	cf 93       	push	r28
     d46:	df 93       	push	r29
	int16_t k;
	int8_t analogVal = cfg_keyboard.value;
	//Serial.print("            keyboard adc ");Serial.println (cfg_keyboard.value);
	for (k = 0; k < NRO_TECLAS; k++)
	{
		if (analogVal < adc_key_val[k])
     d48:	80 91 c9 02 	lds	r24, 0x02C9	; 0x8002c9 <cfg_keyboard+0x4>
     d4c:	08 2e       	mov	r0, r24
     d4e:	00 0c       	add	r0, r0
     d50:	99 0b       	sbc	r25, r25
     d52:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__data_start>
     d56:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__data_start+0x1>
     d5a:	82 17       	cp	r24, r18
     d5c:	93 07       	cpc	r25, r19
     d5e:	54 f0       	brlt	.+20     	; 0xd74 <_Z20adc_keyboard_processv+0x30>
     d60:	e2 e0       	ldi	r30, 0x02	; 2
     d62:	f1 e0       	ldi	r31, 0x01	; 1
void adc_keyboard_process()
{
	int16_t k;
	int8_t analogVal = cfg_keyboard.value;
	//Serial.print("            keyboard adc ");Serial.println (cfg_keyboard.value);
	for (k = 0; k < NRO_TECLAS; k++)
     d64:	c1 e0       	ldi	r28, 0x01	; 1
     d66:	d0 e0       	ldi	r29, 0x00	; 0
	{
		if (analogVal < adc_key_val[k])
     d68:	21 91       	ld	r18, Z+
     d6a:	31 91       	ld	r19, Z+
     d6c:	82 17       	cp	r24, r18
     d6e:	93 07       	cpc	r25, r19
     d70:	dc f4       	brge	.+54     	; 0xda8 <_Z20adc_keyboard_processv+0x64>
     d72:	38 c0       	rjmp	.+112    	; 0xde4 <_Z20adc_keyboard_processv+0xa0>
		{
			if(oldkey!=k)
     d74:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <_ZL6oldkey>
     d78:	90 91 0b 01 	lds	r25, 0x010B	; 0x80010b <_ZL6oldkey+0x1>
     d7c:	89 2b       	or	r24, r25
     d7e:	c9 f1       	breq	.+114    	; 0xdf2 <_Z20adc_keyboard_processv+0xae>
void adc_keyboard_process()
{
	int16_t k;
	int8_t analogVal = cfg_keyboard.value;
	//Serial.print("            keyboard adc ");Serial.println (cfg_keyboard.value);
	for (k = 0; k < NRO_TECLAS; k++)
     d80:	c0 e0       	ldi	r28, 0x00	; 0
     d82:	d0 e0       	ldi	r29, 0x00	; 0
	{
		if (analogVal < adc_key_val[k])
		{
			if(oldkey!=k)
			{
				oldkey = k;
     d84:	d0 93 0b 01 	sts	0x010B, r29	; 0x80010b <_ZL6oldkey+0x1>
     d88:	c0 93 0a 01 	sts	0x010A, r28	; 0x80010a <_ZL6oldkey>
				teclas_callback[k].callback_Down();
     d8c:	fe 01       	movw	r30, r28
     d8e:	ee 0f       	add	r30, r30
     d90:	ff 1f       	adc	r31, r31
     d92:	ee 0f       	add	r30, r30
     d94:	ff 1f       	adc	r31, r31
     d96:	e1 53       	subi	r30, 0x31	; 49
     d98:	fd 4f       	sbci	r31, 0xFD	; 253
     d9a:	02 80       	ldd	r0, Z+2	; 0x02
     d9c:	f3 81       	ldd	r31, Z+3	; 0x03
     d9e:	e0 2d       	mov	r30, r0
     da0:	09 95       	icall
			}
			break;
		}
	}
	if (k >= NRO_TECLAS)		//solto el boton
     da2:	25 97       	sbiw	r28, 0x05	; 5
     da4:	34 f1       	brlt	.+76     	; 0xdf2 <_Z20adc_keyboard_processv+0xae>
     da6:	04 c0       	rjmp	.+8      	; 0xdb0 <_Z20adc_keyboard_processv+0x6c>
void adc_keyboard_process()
{
	int16_t k;
	int8_t analogVal = cfg_keyboard.value;
	//Serial.print("            keyboard adc ");Serial.println (cfg_keyboard.value);
	for (k = 0; k < NRO_TECLAS; k++)
     da8:	21 96       	adiw	r28, 0x01	; 1
     daa:	c5 30       	cpi	r28, 0x05	; 5
     dac:	d1 05       	cpc	r29, r1
     dae:	e1 f6       	brne	.-72     	; 0xd68 <_Z20adc_keyboard_processv+0x24>
			}
			break;
		}
	}
	if (k >= NRO_TECLAS)		//solto el boton
		if(oldkey!= -1)
     db0:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <_ZL6oldkey>
     db4:	90 91 0b 01 	lds	r25, 0x010B	; 0x80010b <_ZL6oldkey+0x1>
     db8:	8f 3f       	cpi	r24, 0xFF	; 255
     dba:	2f ef       	ldi	r18, 0xFF	; 255
     dbc:	92 07       	cpc	r25, r18
     dbe:	c9 f0       	breq	.+50     	; 0xdf2 <_Z20adc_keyboard_processv+0xae>
		{
			teclas_callback[oldkey].callback_Up();
     dc0:	88 0f       	add	r24, r24
     dc2:	99 1f       	adc	r25, r25
     dc4:	88 0f       	add	r24, r24
     dc6:	99 1f       	adc	r25, r25
     dc8:	fc 01       	movw	r30, r24
     dca:	e1 53       	subi	r30, 0x31	; 49
     dcc:	fd 4f       	sbci	r31, 0xFD	; 253
     dce:	01 90       	ld	r0, Z+
     dd0:	f0 81       	ld	r31, Z
     dd2:	e0 2d       	mov	r30, r0
     dd4:	09 95       	icall
			oldkey = -1;     // Solto el boton y cambio el valor de oldkey
     dd6:	8f ef       	ldi	r24, 0xFF	; 255
     dd8:	9f ef       	ldi	r25, 0xFF	; 255
     dda:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <_ZL6oldkey+0x1>
     dde:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <_ZL6oldkey>
		}
	;
}
     de2:	07 c0       	rjmp	.+14     	; 0xdf2 <_Z20adc_keyboard_processv+0xae>
	//Serial.print("            keyboard adc ");Serial.println (cfg_keyboard.value);
	for (k = 0; k < NRO_TECLAS; k++)
	{
		if (analogVal < adc_key_val[k])
		{
			if(oldkey!=k)
     de4:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <_ZL6oldkey>
     de8:	90 91 0b 01 	lds	r25, 0x010B	; 0x80010b <_ZL6oldkey+0x1>
     dec:	8c 17       	cp	r24, r28
     dee:	9d 07       	cpc	r25, r29
     df0:	49 f6       	brne	.-110    	; 0xd84 <_Z20adc_keyboard_processv+0x40>
		{
			teclas_callback[oldkey].callback_Up();
			oldkey = -1;     // Solto el boton y cambio el valor de oldkey
		}
	;
}
     df2:	df 91       	pop	r29
     df4:	cf 91       	pop	r28
     df6:	08 95       	ret

00000df8 <_Z21adc_keyboard_callbackv>:

void adc_keyboard_callback(void)
{
	contador++;
     df8:	80 91 c3 02 	lds	r24, 0x02C3	; 0x8002c3 <_ZL8contador>
     dfc:	90 91 c4 02 	lds	r25, 0x02C4	; 0x8002c4 <_ZL8contador+0x1>
     e00:	01 96       	adiw	r24, 0x01	; 1
     e02:	90 93 c4 02 	sts	0x02C4, r25	; 0x8002c4 <_ZL8contador+0x1>
     e06:	80 93 c3 02 	sts	0x02C3, r24	; 0x8002c3 <_ZL8contador>
	if(contador > 50)
     e0a:	c3 97       	sbiw	r24, 0x33	; 51
     e0c:	44 f0       	brlt	.+16     	; 0xe1e <_Z21adc_keyboard_callbackv+0x26>
	{
		fnqueue_add(adc_keyboard_process);
     e0e:	82 ea       	ldi	r24, 0xA2	; 162
     e10:	96 e0       	ldi	r25, 0x06	; 6
     e12:	0e 94 78 06 	call	0xcf0	; 0xcf0 <_Z11fnqueue_addPFvvE>
		contador = 0;
     e16:	10 92 c4 02 	sts	0x02C4, r1	; 0x8002c4 <_ZL8contador+0x1>
     e1a:	10 92 c3 02 	sts	0x02C3, r1	; 0x8002c3 <_ZL8contador>
     e1e:	08 95       	ret

00000e20 <_Z15key_up_callbackPFvvEi>:
adc_cfg cfg_keyboard;
static int contador = 0;

void key_up_callback(void (* handler)(), int tecla)
{
	if(tecla>=0 && tecla < NRO_TECLAS)
     e20:	65 30       	cpi	r22, 0x05	; 5
     e22:	71 05       	cpc	r23, r1
     e24:	48 f4       	brcc	.+18     	; 0xe38 <_Z15key_up_callbackPFvvEi+0x18>
		teclas_callback[tecla].callback_Up = handler;
     e26:	66 0f       	add	r22, r22
     e28:	77 1f       	adc	r23, r23
     e2a:	66 0f       	add	r22, r22
     e2c:	77 1f       	adc	r23, r23
     e2e:	fb 01       	movw	r30, r22
     e30:	e1 53       	subi	r30, 0x31	; 49
     e32:	fd 4f       	sbci	r31, 0xFD	; 253
     e34:	91 83       	std	Z+1, r25	; 0x01
     e36:	80 83       	st	Z, r24
     e38:	08 95       	ret

00000e3a <_Z17key_down_callbackPFvvEi>:
}

void key_down_callback(void (* handler)(), int tecla)
{
	if(tecla>=0 && tecla < NRO_TECLAS)
     e3a:	65 30       	cpi	r22, 0x05	; 5
     e3c:	71 05       	cpc	r23, r1
     e3e:	48 f4       	brcc	.+18     	; 0xe52 <_Z17key_down_callbackPFvvEi+0x18>
		teclas_callback[tecla].callback_Down = handler;
     e40:	66 0f       	add	r22, r22
     e42:	77 1f       	adc	r23, r23
     e44:	66 0f       	add	r22, r22
     e46:	77 1f       	adc	r23, r23
     e48:	fb 01       	movw	r30, r22
     e4a:	e1 53       	subi	r30, 0x31	; 49
     e4c:	fd 4f       	sbci	r31, 0xFD	; 253
     e4e:	93 83       	std	Z+3, r25	; 0x03
     e50:	82 83       	std	Z+2, r24	; 0x02
     e52:	08 95       	ret

00000e54 <_Z13keyboard_initv>:
	}
}

void keyboard_init(void)
{
	cfg_keyboard.channel = 0;
     e54:	e5 ec       	ldi	r30, 0xC5	; 197
     e56:	f2 e0       	ldi	r31, 0x02	; 2
     e58:	11 82       	std	Z+1, r1	; 0x01
     e5a:	10 82       	st	Z, r1
	cfg_keyboard.callback = adc_keyboard_callback;
     e5c:	8c ef       	ldi	r24, 0xFC	; 252
     e5e:	96 e0       	ldi	r25, 0x06	; 6
     e60:	93 83       	std	Z+3, r25	; 0x03
     e62:	82 83       	std	Z+2, r24	; 0x02
	cfg_keyboard.value = 0;
     e64:	15 82       	std	Z+5, r1	; 0x05
     e66:	14 82       	std	Z+4, r1	; 0x04
	cfg_keyboard.active = 0;
     e68:	17 82       	std	Z+7, r1	; 0x07
     e6a:	16 82       	std	Z+6, r1	; 0x06
	cfg_keyboard.finish_convertion = 0;
     e6c:	11 86       	std	Z+9, r1	; 0x09
     e6e:	10 86       	std	Z+8, r1	; 0x08
	adc_init(&cfg_keyboard);
     e70:	cf 01       	movw	r24, r30
     e72:	0e 94 30 05 	call	0xa60	; 0xa60 <_Z8adc_initP7adc_cfg>
     e76:	08 95       	ret

00000e78 <_ZN5Print17availableForWriteEv>:
  location &= 0x7; // we only have 8 locations 0-7
  command(LCD_SETCGRAMADDR | (location << 3));
  for (int i=0; i<8; i++) {
    write(charmap[i]);
  }
}
     e78:	80 e0       	ldi	r24, 0x00	; 0
     e7a:	90 e0       	ldi	r25, 0x00	; 0
     e7c:	08 95       	ret

00000e7e <_ZN5Print5flushEv>:
     e7e:	08 95       	ret

00000e80 <_ZN13LiquidCrystal11pulseEnableEv>:
     e80:	cf 93       	push	r28
     e82:	df 93       	push	r29
     e84:	ec 01       	movw	r28, r24
     e86:	60 e0       	ldi	r22, 0x00	; 0
     e88:	8e 81       	ldd	r24, Y+6	; 0x06
     e8a:	0e 94 fb 01 	call	0x3f6	; 0x3f6 <digitalWrite>
     e8e:	81 e0       	ldi	r24, 0x01	; 1
     e90:	90 e0       	ldi	r25, 0x00	; 0
     e92:	0e 94 84 02 	call	0x508	; 0x508 <delayMicroseconds>
     e96:	61 e0       	ldi	r22, 0x01	; 1
     e98:	8e 81       	ldd	r24, Y+6	; 0x06
     e9a:	0e 94 fb 01 	call	0x3f6	; 0x3f6 <digitalWrite>
     e9e:	81 e0       	ldi	r24, 0x01	; 1
     ea0:	90 e0       	ldi	r25, 0x00	; 0
     ea2:	0e 94 84 02 	call	0x508	; 0x508 <delayMicroseconds>
     ea6:	60 e0       	ldi	r22, 0x00	; 0
     ea8:	8e 81       	ldd	r24, Y+6	; 0x06
     eaa:	0e 94 fb 01 	call	0x3f6	; 0x3f6 <digitalWrite>
     eae:	84 e6       	ldi	r24, 0x64	; 100
     eb0:	90 e0       	ldi	r25, 0x00	; 0
     eb2:	0e 94 84 02 	call	0x508	; 0x508 <delayMicroseconds>
     eb6:	df 91       	pop	r29
     eb8:	cf 91       	pop	r28
     eba:	08 95       	ret

00000ebc <_ZN13LiquidCrystal10write4bitsEh>:
     ebc:	cf 92       	push	r12
     ebe:	df 92       	push	r13
     ec0:	ef 92       	push	r14
     ec2:	ff 92       	push	r15
     ec4:	0f 93       	push	r16
     ec6:	1f 93       	push	r17
     ec8:	cf 93       	push	r28
     eca:	df 93       	push	r29
     ecc:	6c 01       	movw	r12, r24
     ece:	8c 01       	movw	r16, r24
     ed0:	09 5f       	subi	r16, 0xF9	; 249
     ed2:	1f 4f       	sbci	r17, 0xFF	; 255
     ed4:	c0 e0       	ldi	r28, 0x00	; 0
     ed6:	d0 e0       	ldi	r29, 0x00	; 0
     ed8:	e6 2e       	mov	r14, r22
     eda:	f1 2c       	mov	r15, r1
     edc:	b7 01       	movw	r22, r14
     ede:	0c 2e       	mov	r0, r28
     ee0:	02 c0       	rjmp	.+4      	; 0xee6 <_ZN13LiquidCrystal10write4bitsEh+0x2a>
     ee2:	75 95       	asr	r23
     ee4:	67 95       	ror	r22
     ee6:	0a 94       	dec	r0
     ee8:	e2 f7       	brpl	.-8      	; 0xee2 <_ZN13LiquidCrystal10write4bitsEh+0x26>
     eea:	61 70       	andi	r22, 0x01	; 1
     eec:	f8 01       	movw	r30, r16
     eee:	81 91       	ld	r24, Z+
     ef0:	8f 01       	movw	r16, r30
     ef2:	0e 94 fb 01 	call	0x3f6	; 0x3f6 <digitalWrite>
     ef6:	21 96       	adiw	r28, 0x01	; 1
     ef8:	c4 30       	cpi	r28, 0x04	; 4
     efa:	d1 05       	cpc	r29, r1
     efc:	79 f7       	brne	.-34     	; 0xedc <_ZN13LiquidCrystal10write4bitsEh+0x20>
     efe:	c6 01       	movw	r24, r12
     f00:	0e 94 40 07 	call	0xe80	; 0xe80 <_ZN13LiquidCrystal11pulseEnableEv>
     f04:	df 91       	pop	r29
     f06:	cf 91       	pop	r28
     f08:	1f 91       	pop	r17
     f0a:	0f 91       	pop	r16
     f0c:	ff 90       	pop	r15
     f0e:	ef 90       	pop	r14
     f10:	df 90       	pop	r13
     f12:	cf 90       	pop	r12
     f14:	08 95       	ret

00000f16 <_ZN13LiquidCrystal10write8bitsEh>:
     f16:	cf 92       	push	r12
     f18:	df 92       	push	r13
     f1a:	ef 92       	push	r14
     f1c:	ff 92       	push	r15
     f1e:	0f 93       	push	r16
     f20:	1f 93       	push	r17
     f22:	cf 93       	push	r28
     f24:	df 93       	push	r29
     f26:	6c 01       	movw	r12, r24
     f28:	8c 01       	movw	r16, r24
     f2a:	09 5f       	subi	r16, 0xF9	; 249
     f2c:	1f 4f       	sbci	r17, 0xFF	; 255
     f2e:	c0 e0       	ldi	r28, 0x00	; 0
     f30:	d0 e0       	ldi	r29, 0x00	; 0
     f32:	e6 2e       	mov	r14, r22
     f34:	f1 2c       	mov	r15, r1
     f36:	b7 01       	movw	r22, r14
     f38:	0c 2e       	mov	r0, r28
     f3a:	02 c0       	rjmp	.+4      	; 0xf40 <_ZN13LiquidCrystal10write8bitsEh+0x2a>
     f3c:	75 95       	asr	r23
     f3e:	67 95       	ror	r22
     f40:	0a 94       	dec	r0
     f42:	e2 f7       	brpl	.-8      	; 0xf3c <_ZN13LiquidCrystal10write8bitsEh+0x26>
     f44:	61 70       	andi	r22, 0x01	; 1
     f46:	f8 01       	movw	r30, r16
     f48:	81 91       	ld	r24, Z+
     f4a:	8f 01       	movw	r16, r30
     f4c:	0e 94 fb 01 	call	0x3f6	; 0x3f6 <digitalWrite>
     f50:	21 96       	adiw	r28, 0x01	; 1
     f52:	c8 30       	cpi	r28, 0x08	; 8
     f54:	d1 05       	cpc	r29, r1
     f56:	79 f7       	brne	.-34     	; 0xf36 <_ZN13LiquidCrystal10write8bitsEh+0x20>
     f58:	c6 01       	movw	r24, r12
     f5a:	0e 94 40 07 	call	0xe80	; 0xe80 <_ZN13LiquidCrystal11pulseEnableEv>
     f5e:	df 91       	pop	r29
     f60:	cf 91       	pop	r28
     f62:	1f 91       	pop	r17
     f64:	0f 91       	pop	r16
     f66:	ff 90       	pop	r15
     f68:	ef 90       	pop	r14
     f6a:	df 90       	pop	r13
     f6c:	cf 90       	pop	r12
     f6e:	08 95       	ret

00000f70 <_ZN13LiquidCrystal4sendEhh>:
     f70:	1f 93       	push	r17
     f72:	cf 93       	push	r28
     f74:	df 93       	push	r29
     f76:	ec 01       	movw	r28, r24
     f78:	16 2f       	mov	r17, r22
     f7a:	64 2f       	mov	r22, r20
     f7c:	8c 81       	ldd	r24, Y+4	; 0x04
     f7e:	0e 94 fb 01 	call	0x3f6	; 0x3f6 <digitalWrite>
     f82:	8d 81       	ldd	r24, Y+5	; 0x05
     f84:	8f 3f       	cpi	r24, 0xFF	; 255
     f86:	19 f0       	breq	.+6      	; 0xf8e <_ZN13LiquidCrystal4sendEhh+0x1e>
     f88:	60 e0       	ldi	r22, 0x00	; 0
     f8a:	0e 94 fb 01 	call	0x3f6	; 0x3f6 <digitalWrite>
     f8e:	8f 85       	ldd	r24, Y+15	; 0x0f
     f90:	84 ff       	sbrs	r24, 4
     f92:	05 c0       	rjmp	.+10     	; 0xf9e <_ZN13LiquidCrystal4sendEhh+0x2e>
     f94:	61 2f       	mov	r22, r17
     f96:	ce 01       	movw	r24, r28
     f98:	0e 94 8b 07 	call	0xf16	; 0xf16 <_ZN13LiquidCrystal10write8bitsEh>
     f9c:	11 c0       	rjmp	.+34     	; 0xfc0 <_ZN13LiquidCrystal4sendEhh+0x50>
     f9e:	61 2f       	mov	r22, r17
     fa0:	70 e0       	ldi	r23, 0x00	; 0
     fa2:	75 95       	asr	r23
     fa4:	67 95       	ror	r22
     fa6:	75 95       	asr	r23
     fa8:	67 95       	ror	r22
     faa:	75 95       	asr	r23
     fac:	67 95       	ror	r22
     fae:	75 95       	asr	r23
     fb0:	67 95       	ror	r22
     fb2:	ce 01       	movw	r24, r28
     fb4:	0e 94 5e 07 	call	0xebc	; 0xebc <_ZN13LiquidCrystal10write4bitsEh>
     fb8:	61 2f       	mov	r22, r17
     fba:	ce 01       	movw	r24, r28
     fbc:	0e 94 5e 07 	call	0xebc	; 0xebc <_ZN13LiquidCrystal10write4bitsEh>
     fc0:	df 91       	pop	r29
     fc2:	cf 91       	pop	r28
     fc4:	1f 91       	pop	r17
     fc6:	08 95       	ret

00000fc8 <_ZN13LiquidCrystal5clearEv>:
     fc8:	40 e0       	ldi	r20, 0x00	; 0
     fca:	61 e0       	ldi	r22, 0x01	; 1
     fcc:	0e 94 b8 07 	call	0xf70	; 0xf70 <_ZN13LiquidCrystal4sendEhh>
     fd0:	80 ed       	ldi	r24, 0xD0	; 208
     fd2:	97 e0       	ldi	r25, 0x07	; 7
     fd4:	0e 94 84 02 	call	0x508	; 0x508 <delayMicroseconds>
     fd8:	08 95       	ret

00000fda <_ZN13LiquidCrystal9setCursorEhh>:
     fda:	fc 01       	movw	r30, r24
     fdc:	44 30       	cpi	r20, 0x04	; 4
     fde:	08 f0       	brcs	.+2      	; 0xfe2 <_ZN13LiquidCrystal9setCursorEhh+0x8>
     fe0:	43 e0       	ldi	r20, 0x03	; 3
     fe2:	83 89       	ldd	r24, Z+19	; 0x13
     fe4:	48 17       	cp	r20, r24
     fe6:	10 f0       	brcs	.+4      	; 0xfec <_ZN13LiquidCrystal9setCursorEhh+0x12>
     fe8:	4f ef       	ldi	r20, 0xFF	; 255
     fea:	48 0f       	add	r20, r24
     fec:	df 01       	movw	r26, r30
     fee:	a4 0f       	add	r26, r20
     ff0:	b1 1d       	adc	r27, r1
     ff2:	54 96       	adiw	r26, 0x14	; 20
     ff4:	9c 91       	ld	r25, X
     ff6:	69 0f       	add	r22, r25
     ff8:	60 68       	ori	r22, 0x80	; 128
     ffa:	40 e0       	ldi	r20, 0x00	; 0
     ffc:	cf 01       	movw	r24, r30
     ffe:	0e 94 b8 07 	call	0xf70	; 0xf70 <_ZN13LiquidCrystal4sendEhh>
    1002:	08 95       	ret

00001004 <_ZN13LiquidCrystal7displayEv>:
    1004:	fc 01       	movw	r30, r24
    1006:	60 89       	ldd	r22, Z+16	; 0x10
    1008:	26 2f       	mov	r18, r22
    100a:	24 60       	ori	r18, 0x04	; 4
    100c:	20 8b       	std	Z+16, r18	; 0x10
    100e:	6c 60       	ori	r22, 0x0C	; 12
    1010:	40 e0       	ldi	r20, 0x00	; 0
    1012:	0e 94 b8 07 	call	0xf70	; 0xf70 <_ZN13LiquidCrystal4sendEhh>
    1016:	08 95       	ret

00001018 <_ZN13LiquidCrystal5beginEhhh>:
    1018:	af 92       	push	r10
    101a:	bf 92       	push	r11
    101c:	cf 92       	push	r12
    101e:	df 92       	push	r13
    1020:	ef 92       	push	r14
    1022:	ff 92       	push	r15
    1024:	0f 93       	push	r16
    1026:	1f 93       	push	r17
    1028:	cf 93       	push	r28
    102a:	df 93       	push	r29
    102c:	ec 01       	movw	r28, r24
    102e:	42 30       	cpi	r20, 0x02	; 2
    1030:	18 f0       	brcs	.+6      	; 0x1038 <_ZN13LiquidCrystal5beginEhhh+0x20>
    1032:	8f 85       	ldd	r24, Y+15	; 0x0f
    1034:	88 60       	ori	r24, 0x08	; 8
    1036:	8f 87       	std	Y+15, r24	; 0x0f
    1038:	4b 8b       	std	Y+19, r20	; 0x13
    103a:	1c 8a       	std	Y+20, r1	; 0x14
    103c:	80 e4       	ldi	r24, 0x40	; 64
    103e:	8d 8b       	std	Y+21, r24	; 0x15
    1040:	6e 8b       	std	Y+22, r22	; 0x16
    1042:	70 e0       	ldi	r23, 0x00	; 0
    1044:	60 5c       	subi	r22, 0xC0	; 192
    1046:	7f 4f       	sbci	r23, 0xFF	; 255
    1048:	6f 8b       	std	Y+23, r22	; 0x17
    104a:	22 23       	and	r18, r18
    104c:	29 f0       	breq	.+10     	; 0x1058 <_ZN13LiquidCrystal5beginEhhh+0x40>
    104e:	41 30       	cpi	r20, 0x01	; 1
    1050:	19 f4       	brne	.+6      	; 0x1058 <_ZN13LiquidCrystal5beginEhhh+0x40>
    1052:	8f 85       	ldd	r24, Y+15	; 0x0f
    1054:	84 60       	ori	r24, 0x04	; 4
    1056:	8f 87       	std	Y+15, r24	; 0x0f
    1058:	61 e0       	ldi	r22, 0x01	; 1
    105a:	8c 81       	ldd	r24, Y+4	; 0x04
    105c:	0e 94 48 02 	call	0x490	; 0x490 <pinMode>
    1060:	8d 81       	ldd	r24, Y+5	; 0x05
    1062:	8f 3f       	cpi	r24, 0xFF	; 255
    1064:	19 f0       	breq	.+6      	; 0x106c <_ZN13LiquidCrystal5beginEhhh+0x54>
    1066:	61 e0       	ldi	r22, 0x01	; 1
    1068:	0e 94 48 02 	call	0x490	; 0x490 <pinMode>
    106c:	61 e0       	ldi	r22, 0x01	; 1
    106e:	8e 81       	ldd	r24, Y+6	; 0x06
    1070:	0e 94 48 02 	call	0x490	; 0x490 <pinMode>
    1074:	7e 01       	movw	r14, r28
    1076:	87 e0       	ldi	r24, 0x07	; 7
    1078:	e8 0e       	add	r14, r24
    107a:	f1 1c       	adc	r15, r1
    107c:	00 e0       	ldi	r16, 0x00	; 0
    107e:	10 e0       	ldi	r17, 0x00	; 0
    1080:	68 94       	set
    1082:	aa 24       	eor	r10, r10
    1084:	a3 f8       	bld	r10, 3
    1086:	b1 2c       	mov	r11, r1
    1088:	68 94       	set
    108a:	cc 24       	eor	r12, r12
    108c:	c2 f8       	bld	r12, 2
    108e:	d1 2c       	mov	r13, r1
    1090:	8f 85       	ldd	r24, Y+15	; 0x0f
    1092:	84 fd       	sbrc	r24, 4
    1094:	03 c0       	rjmp	.+6      	; 0x109c <_ZN13LiquidCrystal5beginEhhh+0x84>
    1096:	8c 2d       	mov	r24, r12
    1098:	9d 2d       	mov	r25, r13
    109a:	02 c0       	rjmp	.+4      	; 0x10a0 <_ZN13LiquidCrystal5beginEhhh+0x88>
    109c:	8a 2d       	mov	r24, r10
    109e:	9b 2d       	mov	r25, r11
    10a0:	08 17       	cp	r16, r24
    10a2:	19 07       	cpc	r17, r25
    10a4:	4c f4       	brge	.+18     	; 0x10b8 <_ZN13LiquidCrystal5beginEhhh+0xa0>
    10a6:	61 e0       	ldi	r22, 0x01	; 1
    10a8:	f7 01       	movw	r30, r14
    10aa:	81 91       	ld	r24, Z+
    10ac:	7f 01       	movw	r14, r30
    10ae:	0e 94 48 02 	call	0x490	; 0x490 <pinMode>
    10b2:	0f 5f       	subi	r16, 0xFF	; 255
    10b4:	1f 4f       	sbci	r17, 0xFF	; 255
    10b6:	ec cf       	rjmp	.-40     	; 0x1090 <_ZN13LiquidCrystal5beginEhhh+0x78>
    10b8:	80 e5       	ldi	r24, 0x50	; 80
    10ba:	93 ec       	ldi	r25, 0xC3	; 195
    10bc:	0e 94 84 02 	call	0x508	; 0x508 <delayMicroseconds>
    10c0:	60 e0       	ldi	r22, 0x00	; 0
    10c2:	8c 81       	ldd	r24, Y+4	; 0x04
    10c4:	0e 94 fb 01 	call	0x3f6	; 0x3f6 <digitalWrite>
    10c8:	60 e0       	ldi	r22, 0x00	; 0
    10ca:	8e 81       	ldd	r24, Y+6	; 0x06
    10cc:	0e 94 fb 01 	call	0x3f6	; 0x3f6 <digitalWrite>
    10d0:	8d 81       	ldd	r24, Y+5	; 0x05
    10d2:	8f 3f       	cpi	r24, 0xFF	; 255
    10d4:	19 f0       	breq	.+6      	; 0x10dc <_ZN13LiquidCrystal5beginEhhh+0xc4>
    10d6:	60 e0       	ldi	r22, 0x00	; 0
    10d8:	0e 94 fb 01 	call	0x3f6	; 0x3f6 <digitalWrite>
    10dc:	6f 85       	ldd	r22, Y+15	; 0x0f
    10de:	64 fd       	sbrc	r22, 4
    10e0:	1d c0       	rjmp	.+58     	; 0x111c <_ZN13LiquidCrystal5beginEhhh+0x104>
    10e2:	63 e0       	ldi	r22, 0x03	; 3
    10e4:	ce 01       	movw	r24, r28
    10e6:	0e 94 5e 07 	call	0xebc	; 0xebc <_ZN13LiquidCrystal10write4bitsEh>
    10ea:	84 e9       	ldi	r24, 0x94	; 148
    10ec:	91 e1       	ldi	r25, 0x11	; 17
    10ee:	0e 94 84 02 	call	0x508	; 0x508 <delayMicroseconds>
    10f2:	63 e0       	ldi	r22, 0x03	; 3
    10f4:	ce 01       	movw	r24, r28
    10f6:	0e 94 5e 07 	call	0xebc	; 0xebc <_ZN13LiquidCrystal10write4bitsEh>
    10fa:	84 e9       	ldi	r24, 0x94	; 148
    10fc:	91 e1       	ldi	r25, 0x11	; 17
    10fe:	0e 94 84 02 	call	0x508	; 0x508 <delayMicroseconds>
    1102:	63 e0       	ldi	r22, 0x03	; 3
    1104:	ce 01       	movw	r24, r28
    1106:	0e 94 5e 07 	call	0xebc	; 0xebc <_ZN13LiquidCrystal10write4bitsEh>
    110a:	86 e9       	ldi	r24, 0x96	; 150
    110c:	90 e0       	ldi	r25, 0x00	; 0
    110e:	0e 94 84 02 	call	0x508	; 0x508 <delayMicroseconds>
    1112:	62 e0       	ldi	r22, 0x02	; 2
    1114:	ce 01       	movw	r24, r28
    1116:	0e 94 5e 07 	call	0xebc	; 0xebc <_ZN13LiquidCrystal10write4bitsEh>
    111a:	19 c0       	rjmp	.+50     	; 0x114e <_ZN13LiquidCrystal5beginEhhh+0x136>
    111c:	60 62       	ori	r22, 0x20	; 32
    111e:	40 e0       	ldi	r20, 0x00	; 0
    1120:	ce 01       	movw	r24, r28
    1122:	0e 94 b8 07 	call	0xf70	; 0xf70 <_ZN13LiquidCrystal4sendEhh>
    1126:	84 e9       	ldi	r24, 0x94	; 148
    1128:	91 e1       	ldi	r25, 0x11	; 17
    112a:	0e 94 84 02 	call	0x508	; 0x508 <delayMicroseconds>
    112e:	6f 85       	ldd	r22, Y+15	; 0x0f
    1130:	60 62       	ori	r22, 0x20	; 32
    1132:	40 e0       	ldi	r20, 0x00	; 0
    1134:	ce 01       	movw	r24, r28
    1136:	0e 94 b8 07 	call	0xf70	; 0xf70 <_ZN13LiquidCrystal4sendEhh>
    113a:	86 e9       	ldi	r24, 0x96	; 150
    113c:	90 e0       	ldi	r25, 0x00	; 0
    113e:	0e 94 84 02 	call	0x508	; 0x508 <delayMicroseconds>
    1142:	6f 85       	ldd	r22, Y+15	; 0x0f
    1144:	60 62       	ori	r22, 0x20	; 32
    1146:	40 e0       	ldi	r20, 0x00	; 0
    1148:	ce 01       	movw	r24, r28
    114a:	0e 94 b8 07 	call	0xf70	; 0xf70 <_ZN13LiquidCrystal4sendEhh>
    114e:	6f 85       	ldd	r22, Y+15	; 0x0f
    1150:	60 62       	ori	r22, 0x20	; 32
    1152:	40 e0       	ldi	r20, 0x00	; 0
    1154:	ce 01       	movw	r24, r28
    1156:	0e 94 b8 07 	call	0xf70	; 0xf70 <_ZN13LiquidCrystal4sendEhh>
    115a:	84 e0       	ldi	r24, 0x04	; 4
    115c:	88 8b       	std	Y+16, r24	; 0x10
    115e:	ce 01       	movw	r24, r28
    1160:	0e 94 02 08 	call	0x1004	; 0x1004 <_ZN13LiquidCrystal7displayEv>
    1164:	ce 01       	movw	r24, r28
    1166:	0e 94 e4 07 	call	0xfc8	; 0xfc8 <_ZN13LiquidCrystal5clearEv>
    116a:	82 e0       	ldi	r24, 0x02	; 2
    116c:	89 8b       	std	Y+17, r24	; 0x11
    116e:	40 e0       	ldi	r20, 0x00	; 0
    1170:	66 e0       	ldi	r22, 0x06	; 6
    1172:	ce 01       	movw	r24, r28
    1174:	0e 94 b8 07 	call	0xf70	; 0xf70 <_ZN13LiquidCrystal4sendEhh>
    1178:	df 91       	pop	r29
    117a:	cf 91       	pop	r28
    117c:	1f 91       	pop	r17
    117e:	0f 91       	pop	r16
    1180:	ff 90       	pop	r15
    1182:	ef 90       	pop	r14
    1184:	df 90       	pop	r13
    1186:	cf 90       	pop	r12
    1188:	bf 90       	pop	r11
    118a:	af 90       	pop	r10
    118c:	08 95       	ret

0000118e <_ZN13LiquidCrystalC1Ehhhhhh>:
    118e:	cf 92       	push	r12
    1190:	ef 92       	push	r14
    1192:	0f 93       	push	r16
    1194:	fc 01       	movw	r30, r24
    1196:	13 82       	std	Z+3, r1	; 0x03
    1198:	12 82       	std	Z+2, r1	; 0x02
    119a:	8e e3       	ldi	r24, 0x3E	; 62
    119c:	91 e0       	ldi	r25, 0x01	; 1
    119e:	91 83       	std	Z+1, r25	; 0x01
    11a0:	80 83       	st	Z, r24
    11a2:	64 83       	std	Z+4, r22	; 0x04
    11a4:	8f ef       	ldi	r24, 0xFF	; 255
    11a6:	85 83       	std	Z+5, r24	; 0x05
    11a8:	46 83       	std	Z+6, r20	; 0x06
    11aa:	27 83       	std	Z+7, r18	; 0x07
    11ac:	00 87       	std	Z+8, r16	; 0x08
    11ae:	e1 86       	std	Z+9, r14	; 0x09
    11b0:	c2 86       	std	Z+10, r12	; 0x0a
    11b2:	13 86       	std	Z+11, r1	; 0x0b
    11b4:	14 86       	std	Z+12, r1	; 0x0c
    11b6:	15 86       	std	Z+13, r1	; 0x0d
    11b8:	16 86       	std	Z+14, r1	; 0x0e
    11ba:	17 86       	std	Z+15, r1	; 0x0f
    11bc:	20 e0       	ldi	r18, 0x00	; 0
    11be:	41 e0       	ldi	r20, 0x01	; 1
    11c0:	60 e1       	ldi	r22, 0x10	; 16
    11c2:	cf 01       	movw	r24, r30
    11c4:	0e 94 0c 08 	call	0x1018	; 0x1018 <_ZN13LiquidCrystal5beginEhhh>
    11c8:	0f 91       	pop	r16
    11ca:	ef 90       	pop	r14
    11cc:	cf 90       	pop	r12
    11ce:	08 95       	ret

000011d0 <_ZN13LiquidCrystal5writeEh>:
inline void LiquidCrystal::command(uint8_t value) {
  send(value, LOW);
}

inline size_t LiquidCrystal::write(uint8_t value) {
  send(value, HIGH);
    11d0:	41 e0       	ldi	r20, 0x01	; 1
    11d2:	0e 94 b8 07 	call	0xf70	; 0xf70 <_ZN13LiquidCrystal4sendEhh>
  return 1; // assume sucess
}
    11d6:	81 e0       	ldi	r24, 0x01	; 1
    11d8:	90 e0       	ldi	r25, 0x00	; 0
    11da:	08 95       	ret

000011dc <_Z8up_keyUpv>:
void process_temperature(int sensor_value)
{
	// Calculo de la temperatura segun el valor retornado.
	Temperatura = sensor_value * 1.1 * 100 / 1024;			// formula de mapeo del sensor
	arregloTemperaturas[indice] = Temperatura;
	indice = (indice + 1) % MAX_TEMP;
    11dc:	41 e0       	ldi	r20, 0x01	; 1
    11de:	60 e0       	ldi	r22, 0x00	; 0
    11e0:	87 e7       	ldi	r24, 0x77	; 119
    11e2:	94 e0       	ldi	r25, 0x04	; 4
    11e4:	0e 94 ed 07 	call	0xfda	; 0xfda <_ZN13LiquidCrystal9setCursorEhh>
    11e8:	66 e4       	ldi	r22, 0x46	; 70
    11ea:	71 e0       	ldi	r23, 0x01	; 1
    11ec:	87 e7       	ldi	r24, 0x77	; 119
    11ee:	94 e0       	ldi	r25, 0x04	; 4
    11f0:	0e 94 2a 04 	call	0x854	; 0x854 <_ZN5Print5printEPKc>
    11f4:	08 95       	ret

000011f6 <_Z10up_keyDownv>:
    11f6:	41 e0       	ldi	r20, 0x01	; 1
    11f8:	60 e0       	ldi	r22, 0x00	; 0
    11fa:	87 e7       	ldi	r24, 0x77	; 119
    11fc:	94 e0       	ldi	r25, 0x04	; 4
    11fe:	0e 94 ed 07 	call	0xfda	; 0xfda <_ZN13LiquidCrystal9setCursorEhh>
    1202:	66 e4       	ldi	r22, 0x46	; 70
    1204:	71 e0       	ldi	r23, 0x01	; 1
    1206:	87 e7       	ldi	r24, 0x77	; 119
    1208:	94 e0       	ldi	r25, 0x04	; 4
    120a:	0e 94 2a 04 	call	0x854	; 0x854 <_ZN5Print5printEPKc>
    120e:	08 95       	ret

00001210 <_Z11up_keyRightv>:
    1210:	41 e0       	ldi	r20, 0x01	; 1
    1212:	60 e0       	ldi	r22, 0x00	; 0
    1214:	87 e7       	ldi	r24, 0x77	; 119
    1216:	94 e0       	ldi	r25, 0x04	; 4
    1218:	0e 94 ed 07 	call	0xfda	; 0xfda <_ZN13LiquidCrystal9setCursorEhh>
    121c:	66 e4       	ldi	r22, 0x46	; 70
    121e:	71 e0       	ldi	r23, 0x01	; 1
    1220:	87 e7       	ldi	r24, 0x77	; 119
    1222:	94 e0       	ldi	r25, 0x04	; 4
    1224:	0e 94 2a 04 	call	0x854	; 0x854 <_ZN5Print5printEPKc>
    1228:	08 95       	ret

0000122a <_Z10up_keyLeftv>:
    122a:	41 e0       	ldi	r20, 0x01	; 1
    122c:	60 e0       	ldi	r22, 0x00	; 0
    122e:	87 e7       	ldi	r24, 0x77	; 119
    1230:	94 e0       	ldi	r25, 0x04	; 4
    1232:	0e 94 ed 07 	call	0xfda	; 0xfda <_ZN13LiquidCrystal9setCursorEhh>
    1236:	66 e4       	ldi	r22, 0x46	; 70
    1238:	71 e0       	ldi	r23, 0x01	; 1
    123a:	87 e7       	ldi	r24, 0x77	; 119
    123c:	94 e0       	ldi	r25, 0x04	; 4
    123e:	0e 94 2a 04 	call	0x854	; 0x854 <_ZN5Print5printEPKc>
    1242:	08 95       	ret

00001244 <_Z12up_keySelectv>:
    1244:	41 e0       	ldi	r20, 0x01	; 1
    1246:	60 e0       	ldi	r22, 0x00	; 0
    1248:	87 e7       	ldi	r24, 0x77	; 119
    124a:	94 e0       	ldi	r25, 0x04	; 4
    124c:	0e 94 ed 07 	call	0xfda	; 0xfda <_ZN13LiquidCrystal9setCursorEhh>
    1250:	66 e4       	ldi	r22, 0x46	; 70
    1252:	71 e0       	ldi	r23, 0x01	; 1
    1254:	87 e7       	ldi	r24, 0x77	; 119
    1256:	94 e0       	ldi	r25, 0x04	; 4
    1258:	0e 94 2a 04 	call	0x854	; 0x854 <_ZN5Print5printEPKc>
    125c:	08 95       	ret

0000125e <_Z14down_keySelectv>:
    125e:	41 e0       	ldi	r20, 0x01	; 1
    1260:	60 e0       	ldi	r22, 0x00	; 0
    1262:	87 e7       	ldi	r24, 0x77	; 119
    1264:	94 e0       	ldi	r25, 0x04	; 4
    1266:	0e 94 ed 07 	call	0xfda	; 0xfda <_ZN13LiquidCrystal9setCursorEhh>
    126a:	66 e4       	ldi	r22, 0x46	; 70
    126c:	71 e0       	ldi	r23, 0x01	; 1
    126e:	87 e7       	ldi	r24, 0x77	; 119
    1270:	94 e0       	ldi	r25, 0x04	; 4
    1272:	0e 94 2a 04 	call	0x854	; 0x854 <_ZN5Print5printEPKc>
    1276:	08 95       	ret

00001278 <_Z10down_keyUpv>:
    1278:	8f 92       	push	r8
    127a:	9f 92       	push	r9
    127c:	af 92       	push	r10
    127e:	bf 92       	push	r11
    1280:	cf 92       	push	r12
    1282:	df 92       	push	r13
    1284:	ef 92       	push	r14
    1286:	ff 92       	push	r15
    1288:	0f 93       	push	r16
    128a:	1f 93       	push	r17
    128c:	cf 93       	push	r28
    128e:	df 93       	push	r29
    1290:	41 e0       	ldi	r20, 0x01	; 1
    1292:	60 e0       	ldi	r22, 0x00	; 0
    1294:	87 e7       	ldi	r24, 0x77	; 119
    1296:	94 e0       	ldi	r25, 0x04	; 4
    1298:	0e 94 ed 07 	call	0xfda	; 0xfda <_ZN13LiquidCrystal9setCursorEhh>
    129c:	67 e5       	ldi	r22, 0x57	; 87
    129e:	71 e0       	ldi	r23, 0x01	; 1
    12a0:	87 e7       	ldi	r24, 0x77	; 119
    12a2:	94 e0       	ldi	r25, 0x04	; 4
    12a4:	0e 94 2a 04 	call	0x854	; 0x854 <_ZN5Print5printEPKc>
    12a8:	80 90 e3 02 	lds	r8, 0x02E3	; 0x8002e3 <arregloTemperaturas>
    12ac:	90 90 e4 02 	lds	r9, 0x02E4	; 0x8002e4 <arregloTemperaturas+0x1>
    12b0:	a0 90 e5 02 	lds	r10, 0x02E5	; 0x8002e5 <arregloTemperaturas+0x2>
    12b4:	b0 90 e6 02 	lds	r11, 0x02E6	; 0x8002e6 <arregloTemperaturas+0x3>
    12b8:	c7 ee       	ldi	r28, 0xE7	; 231
    12ba:	d2 e0       	ldi	r29, 0x02	; 2
    12bc:	03 e7       	ldi	r16, 0x73	; 115
    12be:	14 e0       	ldi	r17, 0x04	; 4
    12c0:	c9 90       	ld	r12, Y+
    12c2:	d9 90       	ld	r13, Y+
    12c4:	e9 90       	ld	r14, Y+
    12c6:	f9 90       	ld	r15, Y+
    12c8:	28 2d       	mov	r18, r8
    12ca:	39 2d       	mov	r19, r9
    12cc:	4a 2d       	mov	r20, r10
    12ce:	5b 2d       	mov	r21, r11
    12d0:	c7 01       	movw	r24, r14
    12d2:	b6 01       	movw	r22, r12
    12d4:	0e 94 23 0d 	call	0x1a46	; 0x1a46 <__gesf2>
    12d8:	18 16       	cp	r1, r24
    12da:	24 f4       	brge	.+8      	; 0x12e4 <_Z10down_keyUpv+0x6c>
    12dc:	8c 2c       	mov	r8, r12
    12de:	9d 2c       	mov	r9, r13
    12e0:	ae 2c       	mov	r10, r14
    12e2:	bf 2c       	mov	r11, r15
    12e4:	c0 17       	cp	r28, r16
    12e6:	d1 07       	cpc	r29, r17
    12e8:	59 f7       	brne	.-42     	; 0x12c0 <_Z10down_keyUpv+0x48>
    12ea:	41 e0       	ldi	r20, 0x01	; 1
    12ec:	6b e0       	ldi	r22, 0x0B	; 11
    12ee:	87 e7       	ldi	r24, 0x77	; 119
    12f0:	94 e0       	ldi	r25, 0x04	; 4
    12f2:	0e 94 ed 07 	call	0xfda	; 0xfda <_ZN13LiquidCrystal9setCursorEhh>
    12f6:	22 e0       	ldi	r18, 0x02	; 2
    12f8:	30 e0       	ldi	r19, 0x00	; 0
    12fa:	48 2d       	mov	r20, r8
    12fc:	59 2d       	mov	r21, r9
    12fe:	6a 2d       	mov	r22, r10
    1300:	7b 2d       	mov	r23, r11
    1302:	87 e7       	ldi	r24, 0x77	; 119
    1304:	94 e0       	ldi	r25, 0x04	; 4
    1306:	0e 94 ed 02 	call	0x5da	; 0x5da <_ZN5Print5printEdi>
    130a:	df 91       	pop	r29
    130c:	cf 91       	pop	r28
    130e:	1f 91       	pop	r17
    1310:	0f 91       	pop	r16
    1312:	ff 90       	pop	r15
    1314:	ef 90       	pop	r14
    1316:	df 90       	pop	r13
    1318:	cf 90       	pop	r12
    131a:	bf 90       	pop	r11
    131c:	af 90       	pop	r10
    131e:	9f 90       	pop	r9
    1320:	8f 90       	pop	r8
    1322:	08 95       	ret

00001324 <_Z12down_keyDownv>:
    1324:	8f 92       	push	r8
    1326:	9f 92       	push	r9
    1328:	af 92       	push	r10
    132a:	bf 92       	push	r11
    132c:	cf 92       	push	r12
    132e:	df 92       	push	r13
    1330:	ef 92       	push	r14
    1332:	ff 92       	push	r15
    1334:	0f 93       	push	r16
    1336:	1f 93       	push	r17
    1338:	cf 93       	push	r28
    133a:	df 93       	push	r29
    133c:	41 e0       	ldi	r20, 0x01	; 1
    133e:	60 e0       	ldi	r22, 0x00	; 0
    1340:	87 e7       	ldi	r24, 0x77	; 119
    1342:	94 e0       	ldi	r25, 0x04	; 4
    1344:	0e 94 ed 07 	call	0xfda	; 0xfda <_ZN13LiquidCrystal9setCursorEhh>
    1348:	60 e6       	ldi	r22, 0x60	; 96
    134a:	71 e0       	ldi	r23, 0x01	; 1
    134c:	87 e7       	ldi	r24, 0x77	; 119
    134e:	94 e0       	ldi	r25, 0x04	; 4
    1350:	0e 94 2a 04 	call	0x854	; 0x854 <_ZN5Print5printEPKc>
    1354:	80 90 e3 02 	lds	r8, 0x02E3	; 0x8002e3 <arregloTemperaturas>
    1358:	90 90 e4 02 	lds	r9, 0x02E4	; 0x8002e4 <arregloTemperaturas+0x1>
    135c:	a0 90 e5 02 	lds	r10, 0x02E5	; 0x8002e5 <arregloTemperaturas+0x2>
    1360:	b0 90 e6 02 	lds	r11, 0x02E6	; 0x8002e6 <arregloTemperaturas+0x3>
    1364:	c7 ee       	ldi	r28, 0xE7	; 231
    1366:	d2 e0       	ldi	r29, 0x02	; 2
    1368:	03 e7       	ldi	r16, 0x73	; 115
    136a:	14 e0       	ldi	r17, 0x04	; 4
    136c:	c9 90       	ld	r12, Y+
    136e:	d9 90       	ld	r13, Y+
    1370:	e9 90       	ld	r14, Y+
    1372:	f9 90       	ld	r15, Y+
    1374:	28 2d       	mov	r18, r8
    1376:	39 2d       	mov	r19, r9
    1378:	4a 2d       	mov	r20, r10
    137a:	5b 2d       	mov	r21, r11
    137c:	c7 01       	movw	r24, r14
    137e:	b6 01       	movw	r22, r12
    1380:	0e 94 fa 0b 	call	0x17f4	; 0x17f4 <__cmpsf2>
    1384:	88 23       	and	r24, r24
    1386:	24 f4       	brge	.+8      	; 0x1390 <_Z12down_keyDownv+0x6c>
    1388:	8c 2c       	mov	r8, r12
    138a:	9d 2c       	mov	r9, r13
    138c:	ae 2c       	mov	r10, r14
    138e:	bf 2c       	mov	r11, r15
    1390:	c0 17       	cp	r28, r16
    1392:	d1 07       	cpc	r29, r17
    1394:	59 f7       	brne	.-42     	; 0x136c <_Z12down_keyDownv+0x48>
    1396:	41 e0       	ldi	r20, 0x01	; 1
    1398:	6b e0       	ldi	r22, 0x0B	; 11
    139a:	87 e7       	ldi	r24, 0x77	; 119
    139c:	94 e0       	ldi	r25, 0x04	; 4
    139e:	0e 94 ed 07 	call	0xfda	; 0xfda <_ZN13LiquidCrystal9setCursorEhh>
    13a2:	22 e0       	ldi	r18, 0x02	; 2
    13a4:	30 e0       	ldi	r19, 0x00	; 0
    13a6:	48 2d       	mov	r20, r8
    13a8:	59 2d       	mov	r21, r9
    13aa:	6a 2d       	mov	r22, r10
    13ac:	7b 2d       	mov	r23, r11
    13ae:	87 e7       	ldi	r24, 0x77	; 119
    13b0:	94 e0       	ldi	r25, 0x04	; 4
    13b2:	0e 94 ed 02 	call	0x5da	; 0x5da <_ZN5Print5printEdi>
    13b6:	df 91       	pop	r29
    13b8:	cf 91       	pop	r28
    13ba:	1f 91       	pop	r17
    13bc:	0f 91       	pop	r16
    13be:	ff 90       	pop	r15
    13c0:	ef 90       	pop	r14
    13c2:	df 90       	pop	r13
    13c4:	cf 90       	pop	r12
    13c6:	bf 90       	pop	r11
    13c8:	af 90       	pop	r10
    13ca:	9f 90       	pop	r9
    13cc:	8f 90       	pop	r8
    13ce:	08 95       	ret

000013d0 <_Z12down_keyLeftv>:
    13d0:	41 e0       	ldi	r20, 0x01	; 1
    13d2:	60 e0       	ldi	r22, 0x00	; 0
    13d4:	87 e7       	ldi	r24, 0x77	; 119
    13d6:	94 e0       	ldi	r25, 0x04	; 4
    13d8:	0e 94 ed 07 	call	0xfda	; 0xfda <_ZN13LiquidCrystal9setCursorEhh>
    13dc:	69 e6       	ldi	r22, 0x69	; 105
    13de:	71 e0       	ldi	r23, 0x01	; 1
    13e0:	87 e7       	ldi	r24, 0x77	; 119
    13e2:	94 e0       	ldi	r25, 0x04	; 4
    13e4:	0e 94 2a 04 	call	0x854	; 0x854 <_ZN5Print5printEPKc>
    13e8:	41 e0       	ldi	r20, 0x01	; 1
    13ea:	6b e0       	ldi	r22, 0x0B	; 11
    13ec:	87 e7       	ldi	r24, 0x77	; 119
    13ee:	94 e0       	ldi	r25, 0x04	; 4
    13f0:	0e 94 ed 07 	call	0xfda	; 0xfda <_ZN13LiquidCrystal9setCursorEhh>
    13f4:	40 91 73 04 	lds	r20, 0x0473	; 0x800473 <Temperatura>
    13f8:	50 91 74 04 	lds	r21, 0x0474	; 0x800474 <Temperatura+0x1>
    13fc:	60 91 75 04 	lds	r22, 0x0475	; 0x800475 <Temperatura+0x2>
    1400:	70 91 76 04 	lds	r23, 0x0476	; 0x800476 <Temperatura+0x3>
    1404:	22 e0       	ldi	r18, 0x02	; 2
    1406:	30 e0       	ldi	r19, 0x00	; 0
    1408:	87 e7       	ldi	r24, 0x77	; 119
    140a:	94 e0       	ldi	r25, 0x04	; 4
    140c:	0e 94 ed 02 	call	0x5da	; 0x5da <_ZN5Print5printEdi>
    1410:	08 95       	ret

00001412 <_Z13down_keyRightv>:
    1412:	cf 92       	push	r12
    1414:	df 92       	push	r13
    1416:	ef 92       	push	r14
    1418:	ff 92       	push	r15
    141a:	0f 93       	push	r16
    141c:	1f 93       	push	r17
    141e:	cf 93       	push	r28
    1420:	df 93       	push	r29
    1422:	41 e0       	ldi	r20, 0x01	; 1
    1424:	60 e0       	ldi	r22, 0x00	; 0
    1426:	87 e7       	ldi	r24, 0x77	; 119
    1428:	94 e0       	ldi	r25, 0x04	; 4
    142a:	0e 94 ed 07 	call	0xfda	; 0xfda <_ZN13LiquidCrystal9setCursorEhh>
    142e:	64 e7       	ldi	r22, 0x74	; 116
    1430:	71 e0       	ldi	r23, 0x01	; 1
    1432:	87 e7       	ldi	r24, 0x77	; 119
    1434:	94 e0       	ldi	r25, 0x04	; 4
    1436:	0e 94 2a 04 	call	0x854	; 0x854 <_ZN5Print5printEPKc>
    143a:	6e e7       	ldi	r22, 0x7E	; 126
    143c:	71 e0       	ldi	r23, 0x01	; 1
    143e:	86 eb       	ldi	r24, 0xB6	; 182
    1440:	91 e0       	ldi	r25, 0x01	; 1
    1442:	0e 94 d9 02 	call	0x5b2	; 0x5b2 <_ZN5Print7printlnEPKc>
    1446:	c7 ee       	ldi	r28, 0xE7	; 231
    1448:	d2 e0       	ldi	r29, 0x02	; 2
    144a:	03 e7       	ldi	r16, 0x73	; 115
    144c:	14 e0       	ldi	r17, 0x04	; 4
    144e:	c1 2c       	mov	r12, r1
    1450:	d1 2c       	mov	r13, r1
    1452:	76 01       	movw	r14, r12
    1454:	29 91       	ld	r18, Y+
    1456:	39 91       	ld	r19, Y+
    1458:	49 91       	ld	r20, Y+
    145a:	59 91       	ld	r21, Y+
    145c:	c7 01       	movw	r24, r14
    145e:	b6 01       	movw	r22, r12
    1460:	0e 94 8e 0b 	call	0x171c	; 0x171c <__addsf3>
    1464:	6b 01       	movw	r12, r22
    1466:	7c 01       	movw	r14, r24
    1468:	c0 17       	cp	r28, r16
    146a:	d1 07       	cpc	r29, r17
    146c:	99 f7       	brne	.-26     	; 0x1454 <_Z13down_keyRightv+0x42>
    146e:	41 e0       	ldi	r20, 0x01	; 1
    1470:	6b e0       	ldi	r22, 0x0B	; 11
    1472:	87 e7       	ldi	r24, 0x77	; 119
    1474:	94 e0       	ldi	r25, 0x04	; 4
    1476:	0e 94 ed 07 	call	0xfda	; 0xfda <_ZN13LiquidCrystal9setCursorEhh>
    147a:	20 e0       	ldi	r18, 0x00	; 0
    147c:	30 e0       	ldi	r19, 0x00	; 0
    147e:	48 ec       	ldi	r20, 0xC8	; 200
    1480:	52 e4       	ldi	r21, 0x42	; 66
    1482:	c7 01       	movw	r24, r14
    1484:	b6 01       	movw	r22, r12
    1486:	0e 94 ff 0b 	call	0x17fe	; 0x17fe <__divsf3>
    148a:	ab 01       	movw	r20, r22
    148c:	bc 01       	movw	r22, r24
    148e:	22 e0       	ldi	r18, 0x02	; 2
    1490:	30 e0       	ldi	r19, 0x00	; 0
    1492:	87 e7       	ldi	r24, 0x77	; 119
    1494:	94 e0       	ldi	r25, 0x04	; 4
    1496:	0e 94 ed 02 	call	0x5da	; 0x5da <_ZN5Print5printEdi>
    149a:	df 91       	pop	r29
    149c:	cf 91       	pop	r28
    149e:	1f 91       	pop	r17
    14a0:	0f 91       	pop	r16
    14a2:	ff 90       	pop	r15
    14a4:	ef 90       	pop	r14
    14a6:	df 90       	pop	r13
    14a8:	cf 90       	pop	r12
    14aa:	08 95       	ret

000014ac <setup>:
  public:
    inline HardwareSerial(
      volatile uint8_t *ubrrh, volatile uint8_t *ubrrl,
      volatile uint8_t *ucsra, volatile uint8_t *ucsrb,
      volatile uint8_t *ucsrc, volatile uint8_t *udr);
    void begin(unsigned long baud) { begin(baud, SERIAL_8N1); }
    14ac:	26 e0       	ldi	r18, 0x06	; 6
    14ae:	40 e8       	ldi	r20, 0x80	; 128
    14b0:	55 e2       	ldi	r21, 0x25	; 37
    14b2:	60 e0       	ldi	r22, 0x00	; 0
    14b4:	70 e0       	ldi	r23, 0x00	; 0
    14b6:	86 eb       	ldi	r24, 0xB6	; 182
    14b8:	91 e0       	ldi	r25, 0x01	; 1
    14ba:	0e 94 84 04 	call	0x908	; 0x908 <_ZN14HardwareSerial5beginEmh>

void setup()
{
	Serial.begin (9600);

	lcd.begin(numCols,numRows);
    14be:	20 e0       	ldi	r18, 0x00	; 0
    14c0:	42 e0       	ldi	r20, 0x02	; 2
    14c2:	60 e1       	ldi	r22, 0x10	; 16
    14c4:	87 e7       	ldi	r24, 0x77	; 119
    14c6:	94 e0       	ldi	r25, 0x04	; 4
    14c8:	0e 94 0c 08 	call	0x1018	; 0x1018 <_ZN13LiquidCrystal5beginEhhh>

	lcd.setCursor (0,0);
    14cc:	40 e0       	ldi	r20, 0x00	; 0
    14ce:	60 e0       	ldi	r22, 0x00	; 0
    14d0:	87 e7       	ldi	r24, 0x77	; 119
    14d2:	94 e0       	ldi	r25, 0x04	; 4
    14d4:	0e 94 ed 07 	call	0xfda	; 0xfda <_ZN13LiquidCrystal9setCursorEhh>
	lcd.print ("SE2019 Sen.Temp.");
    14d8:	66 e9       	ldi	r22, 0x96	; 150
    14da:	71 e0       	ldi	r23, 0x01	; 1
    14dc:	87 e7       	ldi	r24, 0x77	; 119
    14de:	94 e0       	ldi	r25, 0x04	; 4
    14e0:	0e 94 2a 04 	call	0x854	; 0x854 <_ZN5Print5printEPKc>
	lcd.setCursor (0,1);
    14e4:	41 e0       	ldi	r20, 0x01	; 1
    14e6:	60 e0       	ldi	r22, 0x00	; 0
    14e8:	87 e7       	ldi	r24, 0x77	; 119
    14ea:	94 e0       	ldi	r25, 0x04	; 4
    14ec:	0e 94 ed 07 	call	0xfda	; 0xfda <_ZN13LiquidCrystal9setCursorEhh>
	lcd.print ("                ");
    14f0:	66 e4       	ldi	r22, 0x46	; 70
    14f2:	71 e0       	ldi	r23, 0x01	; 1
    14f4:	87 e7       	ldi	r24, 0x77	; 119
    14f6:	94 e0       	ldi	r25, 0x04	; 4
    14f8:	0e 94 2a 04 	call	0x854	; 0x854 <_ZN5Print5printEPKc>
	
	fnqueue_init();
    14fc:	0e 94 44 06 	call	0xc88	; 0xc88 <_Z12fnqueue_initv>
	
	keyboard_init();
    1500:	0e 94 2a 07 	call	0xe54	; 0xe54 <_Z13keyboard_initv>

	//sensor_init(process_temperature);
	
	// callbacks del keyboard
	key_up_callback(up_keyUp, TECLAUP);
    1504:	61 e0       	ldi	r22, 0x01	; 1
    1506:	70 e0       	ldi	r23, 0x00	; 0
    1508:	8e ee       	ldi	r24, 0xEE	; 238
    150a:	98 e0       	ldi	r25, 0x08	; 8
    150c:	0e 94 10 07 	call	0xe20	; 0xe20 <_Z15key_up_callbackPFvvEi>
	key_down_callback(down_keyUp, TECLAUP);
    1510:	61 e0       	ldi	r22, 0x01	; 1
    1512:	70 e0       	ldi	r23, 0x00	; 0
    1514:	8c e3       	ldi	r24, 0x3C	; 60
    1516:	99 e0       	ldi	r25, 0x09	; 9
    1518:	0e 94 1d 07 	call	0xe3a	; 0xe3a <_Z17key_down_callbackPFvvEi>
	key_up_callback(up_keyDown, TECLADOWN);
    151c:	62 e0       	ldi	r22, 0x02	; 2
    151e:	70 e0       	ldi	r23, 0x00	; 0
    1520:	8b ef       	ldi	r24, 0xFB	; 251
    1522:	98 e0       	ldi	r25, 0x08	; 8
    1524:	0e 94 10 07 	call	0xe20	; 0xe20 <_Z15key_up_callbackPFvvEi>
	key_down_callback(down_keyDown, TECLADOWN);
    1528:	62 e0       	ldi	r22, 0x02	; 2
    152a:	70 e0       	ldi	r23, 0x00	; 0
    152c:	82 e9       	ldi	r24, 0x92	; 146
    152e:	99 e0       	ldi	r25, 0x09	; 9
    1530:	0e 94 1d 07 	call	0xe3a	; 0xe3a <_Z17key_down_callbackPFvvEi>
	key_up_callback(up_keyLeft, TECLALEFT);
    1534:	63 e0       	ldi	r22, 0x03	; 3
    1536:	70 e0       	ldi	r23, 0x00	; 0
    1538:	85 e1       	ldi	r24, 0x15	; 21
    153a:	99 e0       	ldi	r25, 0x09	; 9
    153c:	0e 94 10 07 	call	0xe20	; 0xe20 <_Z15key_up_callbackPFvvEi>
	key_down_callback(down_keyLeft, TECLALEFT);
    1540:	63 e0       	ldi	r22, 0x03	; 3
    1542:	70 e0       	ldi	r23, 0x00	; 0
    1544:	88 ee       	ldi	r24, 0xE8	; 232
    1546:	99 e0       	ldi	r25, 0x09	; 9
    1548:	0e 94 1d 07 	call	0xe3a	; 0xe3a <_Z17key_down_callbackPFvvEi>
	key_up_callback(up_keyRight, TECLARIGHT);
    154c:	60 e0       	ldi	r22, 0x00	; 0
    154e:	70 e0       	ldi	r23, 0x00	; 0
    1550:	88 e0       	ldi	r24, 0x08	; 8
    1552:	99 e0       	ldi	r25, 0x09	; 9
    1554:	0e 94 10 07 	call	0xe20	; 0xe20 <_Z15key_up_callbackPFvvEi>
	key_down_callback(down_keyRight, TECLARIGHT);
    1558:	60 e0       	ldi	r22, 0x00	; 0
    155a:	70 e0       	ldi	r23, 0x00	; 0
    155c:	89 e0       	ldi	r24, 0x09	; 9
    155e:	9a e0       	ldi	r25, 0x0A	; 10
    1560:	0e 94 1d 07 	call	0xe3a	; 0xe3a <_Z17key_down_callbackPFvvEi>
	key_up_callback(up_keySelect, TECLASELECT);
    1564:	64 e0       	ldi	r22, 0x04	; 4
    1566:	70 e0       	ldi	r23, 0x00	; 0
    1568:	82 e2       	ldi	r24, 0x22	; 34
    156a:	99 e0       	ldi	r25, 0x09	; 9
    156c:	0e 94 10 07 	call	0xe20	; 0xe20 <_Z15key_up_callbackPFvvEi>
	key_down_callback(down_keySelect, TECLASELECT);
    1570:	64 e0       	ldi	r22, 0x04	; 4
    1572:	70 e0       	ldi	r23, 0x00	; 0
    1574:	8f e2       	ldi	r24, 0x2F	; 47
    1576:	99 e0       	ldi	r25, 0x09	; 9
    1578:	0e 94 1d 07 	call	0xe3a	; 0xe3a <_Z17key_down_callbackPFvvEi>
    157c:	08 95       	ret

0000157e <loop>:
	
}

void loop()
{
	fnqueue_run();
    157e:	0e 94 4c 06 	call	0xc98	; 0xc98 <_Z11fnqueue_runv>
    1582:	08 95       	ret

00001584 <_GLOBAL__sub_I_lcd>:
}
    1584:	cf 92       	push	r12
    1586:	ef 92       	push	r14
    1588:	0f 93       	push	r16
#include "sensor_driver.h"

#define MAX_TEMP 100

// initialize the library with the numbers of the interface pins
LiquidCrystal lcd(8, 9, 4, 5, 6, 7);
    158a:	0f 2e       	mov	r0, r31
    158c:	f7 e0       	ldi	r31, 0x07	; 7
    158e:	cf 2e       	mov	r12, r31
    1590:	f0 2d       	mov	r31, r0
    1592:	0f 2e       	mov	r0, r31
    1594:	f6 e0       	ldi	r31, 0x06	; 6
    1596:	ef 2e       	mov	r14, r31
    1598:	f0 2d       	mov	r31, r0
    159a:	05 e0       	ldi	r16, 0x05	; 5
    159c:	24 e0       	ldi	r18, 0x04	; 4
    159e:	49 e0       	ldi	r20, 0x09	; 9
    15a0:	68 e0       	ldi	r22, 0x08	; 8
    15a2:	87 e7       	ldi	r24, 0x77	; 119
    15a4:	94 e0       	ldi	r25, 0x04	; 4
    15a6:	0e 94 c7 08 	call	0x118e	; 0x118e <_ZN13LiquidCrystalC1Ehhhhhh>
}

void loop()
{
	fnqueue_run();
}
    15aa:	0f 91       	pop	r16
    15ac:	ef 90       	pop	r14
    15ae:	cf 90       	pop	r12
    15b0:	08 95       	ret

000015b2 <__vector_9>:
	timeout_signal=callback;
	
}

ISR(TIMER2_OVF_vect)
{
    15b2:	1f 92       	push	r1
    15b4:	0f 92       	push	r0
    15b6:	0f b6       	in	r0, 0x3f	; 63
    15b8:	0f 92       	push	r0
    15ba:	11 24       	eor	r1, r1
    15bc:	2f 93       	push	r18
    15be:	3f 93       	push	r19
    15c0:	4f 93       	push	r20
    15c2:	5f 93       	push	r21
    15c4:	6f 93       	push	r22
    15c6:	7f 93       	push	r23
    15c8:	8f 93       	push	r24
    15ca:	9f 93       	push	r25
    15cc:	af 93       	push	r26
    15ce:	bf 93       	push	r27
    15d0:	ef 93       	push	r30
    15d2:	ff 93       	push	r31
	TCNT2 = 0;
    15d4:	10 92 b2 00 	sts	0x00B2, r1	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7e00b2>
	count_timer++;
    15d8:	80 91 91 04 	lds	r24, 0x0491	; 0x800491 <_ZL11count_timer>
    15dc:	90 91 92 04 	lds	r25, 0x0492	; 0x800492 <_ZL11count_timer+0x1>
    15e0:	01 96       	adiw	r24, 0x01	; 1
    15e2:	90 93 92 04 	sts	0x0492, r25	; 0x800492 <_ZL11count_timer+0x1>
    15e6:	80 93 91 04 	sts	0x0491, r24	; 0x800491 <_ZL11count_timer>
	if(count_timer>9) // cuento 10 interrupciones de 1,024ms -> llamo a la funcion de callback cada 10,24ms
    15ea:	80 91 91 04 	lds	r24, 0x0491	; 0x800491 <_ZL11count_timer>
    15ee:	90 91 92 04 	lds	r25, 0x0492	; 0x800492 <_ZL11count_timer+0x1>
    15f2:	0a 97       	sbiw	r24, 0x0a	; 10
    15f4:	50 f0       	brcs	.+20     	; 0x160a <__vector_9+0x58>
	{
		count_timer = 0;
    15f6:	10 92 92 04 	sts	0x0492, r1	; 0x800492 <_ZL11count_timer+0x1>
    15fa:	10 92 91 04 	sts	0x0491, r1	; 0x800491 <_ZL11count_timer>
		fnqueue_add(timeout_signal);
    15fe:	80 91 8f 04 	lds	r24, 0x048F	; 0x80048f <timeout_signal>
    1602:	90 91 90 04 	lds	r25, 0x0490	; 0x800490 <timeout_signal+0x1>
    1606:	0e 94 78 06 	call	0xcf0	; 0xcf0 <_Z11fnqueue_addPFvvE>
	}
    160a:	ff 91       	pop	r31
    160c:	ef 91       	pop	r30
    160e:	bf 91       	pop	r27
    1610:	af 91       	pop	r26
    1612:	9f 91       	pop	r25
    1614:	8f 91       	pop	r24
    1616:	7f 91       	pop	r23
    1618:	6f 91       	pop	r22
    161a:	5f 91       	pop	r21
    161c:	4f 91       	pop	r20
    161e:	3f 91       	pop	r19
    1620:	2f 91       	pop	r18
    1622:	0f 90       	pop	r0
    1624:	0f be       	out	0x3f, r0	; 63
    1626:	0f 90       	pop	r0
    1628:	1f 90       	pop	r1
    162a:	18 95       	reti

0000162c <main>:
    162c:	78 94       	sei
    162e:	84 b5       	in	r24, 0x24	; 36
    1630:	82 60       	ori	r24, 0x02	; 2
    1632:	84 bd       	out	0x24, r24	; 36
    1634:	84 b5       	in	r24, 0x24	; 36
    1636:	81 60       	ori	r24, 0x01	; 1
    1638:	84 bd       	out	0x24, r24	; 36
    163a:	85 b5       	in	r24, 0x25	; 37
    163c:	82 60       	ori	r24, 0x02	; 2
    163e:	85 bd       	out	0x25, r24	; 37
    1640:	85 b5       	in	r24, 0x25	; 37
    1642:	81 60       	ori	r24, 0x01	; 1
    1644:	85 bd       	out	0x25, r24	; 37
    1646:	80 91 6e 00 	lds	r24, 0x006E	; 0x80006e <__TEXT_REGION_LENGTH__+0x7e006e>
    164a:	81 60       	ori	r24, 0x01	; 1
    164c:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <__TEXT_REGION_LENGTH__+0x7e006e>
    1650:	10 92 81 00 	sts	0x0081, r1	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
    1654:	80 91 81 00 	lds	r24, 0x0081	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
    1658:	82 60       	ori	r24, 0x02	; 2
    165a:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
    165e:	80 91 81 00 	lds	r24, 0x0081	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
    1662:	81 60       	ori	r24, 0x01	; 1
    1664:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
    1668:	80 91 80 00 	lds	r24, 0x0080	; 0x800080 <__TEXT_REGION_LENGTH__+0x7e0080>
    166c:	81 60       	ori	r24, 0x01	; 1
    166e:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__TEXT_REGION_LENGTH__+0x7e0080>
    1672:	80 91 b1 00 	lds	r24, 0x00B1	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7e00b1>
    1676:	84 60       	ori	r24, 0x04	; 4
    1678:	80 93 b1 00 	sts	0x00B1, r24	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7e00b1>
    167c:	80 91 b0 00 	lds	r24, 0x00B0	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7e00b0>
    1680:	81 60       	ori	r24, 0x01	; 1
    1682:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7e00b0>
    1686:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
    168a:	84 60       	ori	r24, 0x04	; 4
    168c:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
    1690:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
    1694:	82 60       	ori	r24, 0x02	; 2
    1696:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
    169a:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
    169e:	81 60       	ori	r24, 0x01	; 1
    16a0:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
    16a4:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
    16a8:	80 68       	ori	r24, 0x80	; 128
    16aa:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
    16ae:	10 92 c1 00 	sts	0x00C1, r1	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
    16b2:	0e 94 56 0a 	call	0x14ac	; 0x14ac <setup>
    16b6:	0e 94 bf 0a 	call	0x157e	; 0x157e <loop>
    16ba:	0e 94 91 01 	call	0x322	; 0x322 <_Z14serialEventRunv>
    16be:	fb cf       	rjmp	.-10     	; 0x16b6 <main+0x8a>

000016c0 <_GLOBAL__sub_I___vector_18>:
    16c0:	e6 eb       	ldi	r30, 0xB6	; 182
    16c2:	f1 e0       	ldi	r31, 0x01	; 1
    16c4:	13 82       	std	Z+3, r1	; 0x03
    16c6:	12 82       	std	Z+2, r1	; 0x02
    16c8:	88 ee       	ldi	r24, 0xE8	; 232
    16ca:	93 e0       	ldi	r25, 0x03	; 3
    16cc:	a0 e0       	ldi	r26, 0x00	; 0
    16ce:	b0 e0       	ldi	r27, 0x00	; 0
    16d0:	84 83       	std	Z+4, r24	; 0x04
    16d2:	95 83       	std	Z+5, r25	; 0x05
    16d4:	a6 83       	std	Z+6, r26	; 0x06
    16d6:	b7 83       	std	Z+7, r27	; 0x07
    16d8:	80 e1       	ldi	r24, 0x10	; 16
    16da:	91 e0       	ldi	r25, 0x01	; 1
    16dc:	91 83       	std	Z+1, r25	; 0x01
    16de:	80 83       	st	Z, r24
    16e0:	85 ec       	ldi	r24, 0xC5	; 197
    16e2:	90 e0       	ldi	r25, 0x00	; 0
    16e4:	95 87       	std	Z+13, r25	; 0x0d
    16e6:	84 87       	std	Z+12, r24	; 0x0c
    16e8:	84 ec       	ldi	r24, 0xC4	; 196
    16ea:	90 e0       	ldi	r25, 0x00	; 0
    16ec:	97 87       	std	Z+15, r25	; 0x0f
    16ee:	86 87       	std	Z+14, r24	; 0x0e
    16f0:	80 ec       	ldi	r24, 0xC0	; 192
    16f2:	90 e0       	ldi	r25, 0x00	; 0
    16f4:	91 8b       	std	Z+17, r25	; 0x11
    16f6:	80 8b       	std	Z+16, r24	; 0x10
    16f8:	81 ec       	ldi	r24, 0xC1	; 193
    16fa:	90 e0       	ldi	r25, 0x00	; 0
    16fc:	93 8b       	std	Z+19, r25	; 0x13
    16fe:	82 8b       	std	Z+18, r24	; 0x12
    1700:	82 ec       	ldi	r24, 0xC2	; 194
    1702:	90 e0       	ldi	r25, 0x00	; 0
    1704:	95 8b       	std	Z+21, r25	; 0x15
    1706:	84 8b       	std	Z+20, r24	; 0x14
    1708:	86 ec       	ldi	r24, 0xC6	; 198
    170a:	90 e0       	ldi	r25, 0x00	; 0
    170c:	97 8b       	std	Z+23, r25	; 0x17
    170e:	86 8b       	std	Z+22, r24	; 0x16
    1710:	11 8e       	std	Z+25, r1	; 0x19
    1712:	12 8e       	std	Z+26, r1	; 0x1a
    1714:	13 8e       	std	Z+27, r1	; 0x1b
    1716:	14 8e       	std	Z+28, r1	; 0x1c
    1718:	08 95       	ret

0000171a <__subsf3>:
    171a:	50 58       	subi	r21, 0x80	; 128

0000171c <__addsf3>:
    171c:	bb 27       	eor	r27, r27
    171e:	aa 27       	eor	r26, r26
    1720:	0e 94 a5 0b 	call	0x174a	; 0x174a <__addsf3x>
    1724:	0c 94 e9 0c 	jmp	0x19d2	; 0x19d2 <__fp_round>
    1728:	0e 94 db 0c 	call	0x19b6	; 0x19b6 <__fp_pscA>
    172c:	38 f0       	brcs	.+14     	; 0x173c <__addsf3+0x20>
    172e:	0e 94 e2 0c 	call	0x19c4	; 0x19c4 <__fp_pscB>
    1732:	20 f0       	brcs	.+8      	; 0x173c <__addsf3+0x20>
    1734:	39 f4       	brne	.+14     	; 0x1744 <__addsf3+0x28>
    1736:	9f 3f       	cpi	r25, 0xFF	; 255
    1738:	19 f4       	brne	.+6      	; 0x1740 <__addsf3+0x24>
    173a:	26 f4       	brtc	.+8      	; 0x1744 <__addsf3+0x28>
    173c:	0c 94 d8 0c 	jmp	0x19b0	; 0x19b0 <__fp_nan>
    1740:	0e f4       	brtc	.+2      	; 0x1744 <__addsf3+0x28>
    1742:	e0 95       	com	r30
    1744:	e7 fb       	bst	r30, 7
    1746:	0c 94 d2 0c 	jmp	0x19a4	; 0x19a4 <__fp_inf>

0000174a <__addsf3x>:
    174a:	e9 2f       	mov	r30, r25
    174c:	0e 94 fa 0c 	call	0x19f4	; 0x19f4 <__fp_split3>
    1750:	58 f3       	brcs	.-42     	; 0x1728 <__addsf3+0xc>
    1752:	ba 17       	cp	r27, r26
    1754:	62 07       	cpc	r22, r18
    1756:	73 07       	cpc	r23, r19
    1758:	84 07       	cpc	r24, r20
    175a:	95 07       	cpc	r25, r21
    175c:	20 f0       	brcs	.+8      	; 0x1766 <__addsf3x+0x1c>
    175e:	79 f4       	brne	.+30     	; 0x177e <__addsf3x+0x34>
    1760:	a6 f5       	brtc	.+104    	; 0x17ca <__addsf3x+0x80>
    1762:	0c 94 1c 0d 	jmp	0x1a38	; 0x1a38 <__fp_zero>
    1766:	0e f4       	brtc	.+2      	; 0x176a <__addsf3x+0x20>
    1768:	e0 95       	com	r30
    176a:	0b 2e       	mov	r0, r27
    176c:	ba 2f       	mov	r27, r26
    176e:	a0 2d       	mov	r26, r0
    1770:	0b 01       	movw	r0, r22
    1772:	b9 01       	movw	r22, r18
    1774:	90 01       	movw	r18, r0
    1776:	0c 01       	movw	r0, r24
    1778:	ca 01       	movw	r24, r20
    177a:	a0 01       	movw	r20, r0
    177c:	11 24       	eor	r1, r1
    177e:	ff 27       	eor	r31, r31
    1780:	59 1b       	sub	r21, r25
    1782:	99 f0       	breq	.+38     	; 0x17aa <__addsf3x+0x60>
    1784:	59 3f       	cpi	r21, 0xF9	; 249
    1786:	50 f4       	brcc	.+20     	; 0x179c <__addsf3x+0x52>
    1788:	50 3e       	cpi	r21, 0xE0	; 224
    178a:	68 f1       	brcs	.+90     	; 0x17e6 <__addsf3x+0x9c>
    178c:	1a 16       	cp	r1, r26
    178e:	f0 40       	sbci	r31, 0x00	; 0
    1790:	a2 2f       	mov	r26, r18
    1792:	23 2f       	mov	r18, r19
    1794:	34 2f       	mov	r19, r20
    1796:	44 27       	eor	r20, r20
    1798:	58 5f       	subi	r21, 0xF8	; 248
    179a:	f3 cf       	rjmp	.-26     	; 0x1782 <__addsf3x+0x38>
    179c:	46 95       	lsr	r20
    179e:	37 95       	ror	r19
    17a0:	27 95       	ror	r18
    17a2:	a7 95       	ror	r26
    17a4:	f0 40       	sbci	r31, 0x00	; 0
    17a6:	53 95       	inc	r21
    17a8:	c9 f7       	brne	.-14     	; 0x179c <__addsf3x+0x52>
    17aa:	7e f4       	brtc	.+30     	; 0x17ca <__addsf3x+0x80>
    17ac:	1f 16       	cp	r1, r31
    17ae:	ba 0b       	sbc	r27, r26
    17b0:	62 0b       	sbc	r22, r18
    17b2:	73 0b       	sbc	r23, r19
    17b4:	84 0b       	sbc	r24, r20
    17b6:	ba f0       	brmi	.+46     	; 0x17e6 <__addsf3x+0x9c>
    17b8:	91 50       	subi	r25, 0x01	; 1
    17ba:	a1 f0       	breq	.+40     	; 0x17e4 <__addsf3x+0x9a>
    17bc:	ff 0f       	add	r31, r31
    17be:	bb 1f       	adc	r27, r27
    17c0:	66 1f       	adc	r22, r22
    17c2:	77 1f       	adc	r23, r23
    17c4:	88 1f       	adc	r24, r24
    17c6:	c2 f7       	brpl	.-16     	; 0x17b8 <__addsf3x+0x6e>
    17c8:	0e c0       	rjmp	.+28     	; 0x17e6 <__addsf3x+0x9c>
    17ca:	ba 0f       	add	r27, r26
    17cc:	62 1f       	adc	r22, r18
    17ce:	73 1f       	adc	r23, r19
    17d0:	84 1f       	adc	r24, r20
    17d2:	48 f4       	brcc	.+18     	; 0x17e6 <__addsf3x+0x9c>
    17d4:	87 95       	ror	r24
    17d6:	77 95       	ror	r23
    17d8:	67 95       	ror	r22
    17da:	b7 95       	ror	r27
    17dc:	f7 95       	ror	r31
    17de:	9e 3f       	cpi	r25, 0xFE	; 254
    17e0:	08 f0       	brcs	.+2      	; 0x17e4 <__addsf3x+0x9a>
    17e2:	b0 cf       	rjmp	.-160    	; 0x1744 <__addsf3+0x28>
    17e4:	93 95       	inc	r25
    17e6:	88 0f       	add	r24, r24
    17e8:	08 f0       	brcs	.+2      	; 0x17ec <__addsf3x+0xa2>
    17ea:	99 27       	eor	r25, r25
    17ec:	ee 0f       	add	r30, r30
    17ee:	97 95       	ror	r25
    17f0:	87 95       	ror	r24
    17f2:	08 95       	ret

000017f4 <__cmpsf2>:
    17f4:	0e 94 ae 0c 	call	0x195c	; 0x195c <__fp_cmp>
    17f8:	08 f4       	brcc	.+2      	; 0x17fc <__cmpsf2+0x8>
    17fa:	81 e0       	ldi	r24, 0x01	; 1
    17fc:	08 95       	ret

000017fe <__divsf3>:
    17fe:	0e 94 13 0c 	call	0x1826	; 0x1826 <__divsf3x>
    1802:	0c 94 e9 0c 	jmp	0x19d2	; 0x19d2 <__fp_round>
    1806:	0e 94 e2 0c 	call	0x19c4	; 0x19c4 <__fp_pscB>
    180a:	58 f0       	brcs	.+22     	; 0x1822 <__divsf3+0x24>
    180c:	0e 94 db 0c 	call	0x19b6	; 0x19b6 <__fp_pscA>
    1810:	40 f0       	brcs	.+16     	; 0x1822 <__divsf3+0x24>
    1812:	29 f4       	brne	.+10     	; 0x181e <__divsf3+0x20>
    1814:	5f 3f       	cpi	r21, 0xFF	; 255
    1816:	29 f0       	breq	.+10     	; 0x1822 <__divsf3+0x24>
    1818:	0c 94 d2 0c 	jmp	0x19a4	; 0x19a4 <__fp_inf>
    181c:	51 11       	cpse	r21, r1
    181e:	0c 94 1d 0d 	jmp	0x1a3a	; 0x1a3a <__fp_szero>
    1822:	0c 94 d8 0c 	jmp	0x19b0	; 0x19b0 <__fp_nan>

00001826 <__divsf3x>:
    1826:	0e 94 fa 0c 	call	0x19f4	; 0x19f4 <__fp_split3>
    182a:	68 f3       	brcs	.-38     	; 0x1806 <__divsf3+0x8>

0000182c <__divsf3_pse>:
    182c:	99 23       	and	r25, r25
    182e:	b1 f3       	breq	.-20     	; 0x181c <__divsf3+0x1e>
    1830:	55 23       	and	r21, r21
    1832:	91 f3       	breq	.-28     	; 0x1818 <__divsf3+0x1a>
    1834:	95 1b       	sub	r25, r21
    1836:	55 0b       	sbc	r21, r21
    1838:	bb 27       	eor	r27, r27
    183a:	aa 27       	eor	r26, r26
    183c:	62 17       	cp	r22, r18
    183e:	73 07       	cpc	r23, r19
    1840:	84 07       	cpc	r24, r20
    1842:	38 f0       	brcs	.+14     	; 0x1852 <__divsf3_pse+0x26>
    1844:	9f 5f       	subi	r25, 0xFF	; 255
    1846:	5f 4f       	sbci	r21, 0xFF	; 255
    1848:	22 0f       	add	r18, r18
    184a:	33 1f       	adc	r19, r19
    184c:	44 1f       	adc	r20, r20
    184e:	aa 1f       	adc	r26, r26
    1850:	a9 f3       	breq	.-22     	; 0x183c <__divsf3_pse+0x10>
    1852:	35 d0       	rcall	.+106    	; 0x18be <__divsf3_pse+0x92>
    1854:	0e 2e       	mov	r0, r30
    1856:	3a f0       	brmi	.+14     	; 0x1866 <__divsf3_pse+0x3a>
    1858:	e0 e8       	ldi	r30, 0x80	; 128
    185a:	32 d0       	rcall	.+100    	; 0x18c0 <__divsf3_pse+0x94>
    185c:	91 50       	subi	r25, 0x01	; 1
    185e:	50 40       	sbci	r21, 0x00	; 0
    1860:	e6 95       	lsr	r30
    1862:	00 1c       	adc	r0, r0
    1864:	ca f7       	brpl	.-14     	; 0x1858 <__divsf3_pse+0x2c>
    1866:	2b d0       	rcall	.+86     	; 0x18be <__divsf3_pse+0x92>
    1868:	fe 2f       	mov	r31, r30
    186a:	29 d0       	rcall	.+82     	; 0x18be <__divsf3_pse+0x92>
    186c:	66 0f       	add	r22, r22
    186e:	77 1f       	adc	r23, r23
    1870:	88 1f       	adc	r24, r24
    1872:	bb 1f       	adc	r27, r27
    1874:	26 17       	cp	r18, r22
    1876:	37 07       	cpc	r19, r23
    1878:	48 07       	cpc	r20, r24
    187a:	ab 07       	cpc	r26, r27
    187c:	b0 e8       	ldi	r27, 0x80	; 128
    187e:	09 f0       	breq	.+2      	; 0x1882 <__divsf3_pse+0x56>
    1880:	bb 0b       	sbc	r27, r27
    1882:	80 2d       	mov	r24, r0
    1884:	bf 01       	movw	r22, r30
    1886:	ff 27       	eor	r31, r31
    1888:	93 58       	subi	r25, 0x83	; 131
    188a:	5f 4f       	sbci	r21, 0xFF	; 255
    188c:	3a f0       	brmi	.+14     	; 0x189c <__divsf3_pse+0x70>
    188e:	9e 3f       	cpi	r25, 0xFE	; 254
    1890:	51 05       	cpc	r21, r1
    1892:	78 f0       	brcs	.+30     	; 0x18b2 <__divsf3_pse+0x86>
    1894:	0c 94 d2 0c 	jmp	0x19a4	; 0x19a4 <__fp_inf>
    1898:	0c 94 1d 0d 	jmp	0x1a3a	; 0x1a3a <__fp_szero>
    189c:	5f 3f       	cpi	r21, 0xFF	; 255
    189e:	e4 f3       	brlt	.-8      	; 0x1898 <__divsf3_pse+0x6c>
    18a0:	98 3e       	cpi	r25, 0xE8	; 232
    18a2:	d4 f3       	brlt	.-12     	; 0x1898 <__divsf3_pse+0x6c>
    18a4:	86 95       	lsr	r24
    18a6:	77 95       	ror	r23
    18a8:	67 95       	ror	r22
    18aa:	b7 95       	ror	r27
    18ac:	f7 95       	ror	r31
    18ae:	9f 5f       	subi	r25, 0xFF	; 255
    18b0:	c9 f7       	brne	.-14     	; 0x18a4 <__divsf3_pse+0x78>
    18b2:	88 0f       	add	r24, r24
    18b4:	91 1d       	adc	r25, r1
    18b6:	96 95       	lsr	r25
    18b8:	87 95       	ror	r24
    18ba:	97 f9       	bld	r25, 7
    18bc:	08 95       	ret
    18be:	e1 e0       	ldi	r30, 0x01	; 1
    18c0:	66 0f       	add	r22, r22
    18c2:	77 1f       	adc	r23, r23
    18c4:	88 1f       	adc	r24, r24
    18c6:	bb 1f       	adc	r27, r27
    18c8:	62 17       	cp	r22, r18
    18ca:	73 07       	cpc	r23, r19
    18cc:	84 07       	cpc	r24, r20
    18ce:	ba 07       	cpc	r27, r26
    18d0:	20 f0       	brcs	.+8      	; 0x18da <__divsf3_pse+0xae>
    18d2:	62 1b       	sub	r22, r18
    18d4:	73 0b       	sbc	r23, r19
    18d6:	84 0b       	sbc	r24, r20
    18d8:	ba 0b       	sbc	r27, r26
    18da:	ee 1f       	adc	r30, r30
    18dc:	88 f7       	brcc	.-30     	; 0x18c0 <__divsf3_pse+0x94>
    18de:	e0 95       	com	r30
    18e0:	08 95       	ret

000018e2 <__floatunsisf>:
    18e2:	e8 94       	clt
    18e4:	09 c0       	rjmp	.+18     	; 0x18f8 <__floatsisf+0x12>

000018e6 <__floatsisf>:
    18e6:	97 fb       	bst	r25, 7
    18e8:	3e f4       	brtc	.+14     	; 0x18f8 <__floatsisf+0x12>
    18ea:	90 95       	com	r25
    18ec:	80 95       	com	r24
    18ee:	70 95       	com	r23
    18f0:	61 95       	neg	r22
    18f2:	7f 4f       	sbci	r23, 0xFF	; 255
    18f4:	8f 4f       	sbci	r24, 0xFF	; 255
    18f6:	9f 4f       	sbci	r25, 0xFF	; 255
    18f8:	99 23       	and	r25, r25
    18fa:	a9 f0       	breq	.+42     	; 0x1926 <__floatsisf+0x40>
    18fc:	f9 2f       	mov	r31, r25
    18fe:	96 e9       	ldi	r25, 0x96	; 150
    1900:	bb 27       	eor	r27, r27
    1902:	93 95       	inc	r25
    1904:	f6 95       	lsr	r31
    1906:	87 95       	ror	r24
    1908:	77 95       	ror	r23
    190a:	67 95       	ror	r22
    190c:	b7 95       	ror	r27
    190e:	f1 11       	cpse	r31, r1
    1910:	f8 cf       	rjmp	.-16     	; 0x1902 <__floatsisf+0x1c>
    1912:	fa f4       	brpl	.+62     	; 0x1952 <__floatsisf+0x6c>
    1914:	bb 0f       	add	r27, r27
    1916:	11 f4       	brne	.+4      	; 0x191c <__floatsisf+0x36>
    1918:	60 ff       	sbrs	r22, 0
    191a:	1b c0       	rjmp	.+54     	; 0x1952 <__floatsisf+0x6c>
    191c:	6f 5f       	subi	r22, 0xFF	; 255
    191e:	7f 4f       	sbci	r23, 0xFF	; 255
    1920:	8f 4f       	sbci	r24, 0xFF	; 255
    1922:	9f 4f       	sbci	r25, 0xFF	; 255
    1924:	16 c0       	rjmp	.+44     	; 0x1952 <__floatsisf+0x6c>
    1926:	88 23       	and	r24, r24
    1928:	11 f0       	breq	.+4      	; 0x192e <__floatsisf+0x48>
    192a:	96 e9       	ldi	r25, 0x96	; 150
    192c:	11 c0       	rjmp	.+34     	; 0x1950 <__floatsisf+0x6a>
    192e:	77 23       	and	r23, r23
    1930:	21 f0       	breq	.+8      	; 0x193a <__floatsisf+0x54>
    1932:	9e e8       	ldi	r25, 0x8E	; 142
    1934:	87 2f       	mov	r24, r23
    1936:	76 2f       	mov	r23, r22
    1938:	05 c0       	rjmp	.+10     	; 0x1944 <__floatsisf+0x5e>
    193a:	66 23       	and	r22, r22
    193c:	71 f0       	breq	.+28     	; 0x195a <__floatsisf+0x74>
    193e:	96 e8       	ldi	r25, 0x86	; 134
    1940:	86 2f       	mov	r24, r22
    1942:	70 e0       	ldi	r23, 0x00	; 0
    1944:	60 e0       	ldi	r22, 0x00	; 0
    1946:	2a f0       	brmi	.+10     	; 0x1952 <__floatsisf+0x6c>
    1948:	9a 95       	dec	r25
    194a:	66 0f       	add	r22, r22
    194c:	77 1f       	adc	r23, r23
    194e:	88 1f       	adc	r24, r24
    1950:	da f7       	brpl	.-10     	; 0x1948 <__floatsisf+0x62>
    1952:	88 0f       	add	r24, r24
    1954:	96 95       	lsr	r25
    1956:	87 95       	ror	r24
    1958:	97 f9       	bld	r25, 7
    195a:	08 95       	ret

0000195c <__fp_cmp>:
    195c:	99 0f       	add	r25, r25
    195e:	00 08       	sbc	r0, r0
    1960:	55 0f       	add	r21, r21
    1962:	aa 0b       	sbc	r26, r26
    1964:	e0 e8       	ldi	r30, 0x80	; 128
    1966:	fe ef       	ldi	r31, 0xFE	; 254
    1968:	16 16       	cp	r1, r22
    196a:	17 06       	cpc	r1, r23
    196c:	e8 07       	cpc	r30, r24
    196e:	f9 07       	cpc	r31, r25
    1970:	c0 f0       	brcs	.+48     	; 0x19a2 <__fp_cmp+0x46>
    1972:	12 16       	cp	r1, r18
    1974:	13 06       	cpc	r1, r19
    1976:	e4 07       	cpc	r30, r20
    1978:	f5 07       	cpc	r31, r21
    197a:	98 f0       	brcs	.+38     	; 0x19a2 <__fp_cmp+0x46>
    197c:	62 1b       	sub	r22, r18
    197e:	73 0b       	sbc	r23, r19
    1980:	84 0b       	sbc	r24, r20
    1982:	95 0b       	sbc	r25, r21
    1984:	39 f4       	brne	.+14     	; 0x1994 <__fp_cmp+0x38>
    1986:	0a 26       	eor	r0, r26
    1988:	61 f0       	breq	.+24     	; 0x19a2 <__fp_cmp+0x46>
    198a:	23 2b       	or	r18, r19
    198c:	24 2b       	or	r18, r20
    198e:	25 2b       	or	r18, r21
    1990:	21 f4       	brne	.+8      	; 0x199a <__fp_cmp+0x3e>
    1992:	08 95       	ret
    1994:	0a 26       	eor	r0, r26
    1996:	09 f4       	brne	.+2      	; 0x199a <__fp_cmp+0x3e>
    1998:	a1 40       	sbci	r26, 0x01	; 1
    199a:	a6 95       	lsr	r26
    199c:	8f ef       	ldi	r24, 0xFF	; 255
    199e:	81 1d       	adc	r24, r1
    19a0:	81 1d       	adc	r24, r1
    19a2:	08 95       	ret

000019a4 <__fp_inf>:
    19a4:	97 f9       	bld	r25, 7
    19a6:	9f 67       	ori	r25, 0x7F	; 127
    19a8:	80 e8       	ldi	r24, 0x80	; 128
    19aa:	70 e0       	ldi	r23, 0x00	; 0
    19ac:	60 e0       	ldi	r22, 0x00	; 0
    19ae:	08 95       	ret

000019b0 <__fp_nan>:
    19b0:	9f ef       	ldi	r25, 0xFF	; 255
    19b2:	80 ec       	ldi	r24, 0xC0	; 192
    19b4:	08 95       	ret

000019b6 <__fp_pscA>:
    19b6:	00 24       	eor	r0, r0
    19b8:	0a 94       	dec	r0
    19ba:	16 16       	cp	r1, r22
    19bc:	17 06       	cpc	r1, r23
    19be:	18 06       	cpc	r1, r24
    19c0:	09 06       	cpc	r0, r25
    19c2:	08 95       	ret

000019c4 <__fp_pscB>:
    19c4:	00 24       	eor	r0, r0
    19c6:	0a 94       	dec	r0
    19c8:	12 16       	cp	r1, r18
    19ca:	13 06       	cpc	r1, r19
    19cc:	14 06       	cpc	r1, r20
    19ce:	05 06       	cpc	r0, r21
    19d0:	08 95       	ret

000019d2 <__fp_round>:
    19d2:	09 2e       	mov	r0, r25
    19d4:	03 94       	inc	r0
    19d6:	00 0c       	add	r0, r0
    19d8:	11 f4       	brne	.+4      	; 0x19de <__fp_round+0xc>
    19da:	88 23       	and	r24, r24
    19dc:	52 f0       	brmi	.+20     	; 0x19f2 <__fp_round+0x20>
    19de:	bb 0f       	add	r27, r27
    19e0:	40 f4       	brcc	.+16     	; 0x19f2 <__fp_round+0x20>
    19e2:	bf 2b       	or	r27, r31
    19e4:	11 f4       	brne	.+4      	; 0x19ea <__fp_round+0x18>
    19e6:	60 ff       	sbrs	r22, 0
    19e8:	04 c0       	rjmp	.+8      	; 0x19f2 <__fp_round+0x20>
    19ea:	6f 5f       	subi	r22, 0xFF	; 255
    19ec:	7f 4f       	sbci	r23, 0xFF	; 255
    19ee:	8f 4f       	sbci	r24, 0xFF	; 255
    19f0:	9f 4f       	sbci	r25, 0xFF	; 255
    19f2:	08 95       	ret

000019f4 <__fp_split3>:
    19f4:	57 fd       	sbrc	r21, 7
    19f6:	90 58       	subi	r25, 0x80	; 128
    19f8:	44 0f       	add	r20, r20
    19fa:	55 1f       	adc	r21, r21
    19fc:	59 f0       	breq	.+22     	; 0x1a14 <__fp_splitA+0x10>
    19fe:	5f 3f       	cpi	r21, 0xFF	; 255
    1a00:	71 f0       	breq	.+28     	; 0x1a1e <__fp_splitA+0x1a>
    1a02:	47 95       	ror	r20

00001a04 <__fp_splitA>:
    1a04:	88 0f       	add	r24, r24
    1a06:	97 fb       	bst	r25, 7
    1a08:	99 1f       	adc	r25, r25
    1a0a:	61 f0       	breq	.+24     	; 0x1a24 <__fp_splitA+0x20>
    1a0c:	9f 3f       	cpi	r25, 0xFF	; 255
    1a0e:	79 f0       	breq	.+30     	; 0x1a2e <__fp_splitA+0x2a>
    1a10:	87 95       	ror	r24
    1a12:	08 95       	ret
    1a14:	12 16       	cp	r1, r18
    1a16:	13 06       	cpc	r1, r19
    1a18:	14 06       	cpc	r1, r20
    1a1a:	55 1f       	adc	r21, r21
    1a1c:	f2 cf       	rjmp	.-28     	; 0x1a02 <__fp_split3+0xe>
    1a1e:	46 95       	lsr	r20
    1a20:	f1 df       	rcall	.-30     	; 0x1a04 <__fp_splitA>
    1a22:	08 c0       	rjmp	.+16     	; 0x1a34 <__fp_splitA+0x30>
    1a24:	16 16       	cp	r1, r22
    1a26:	17 06       	cpc	r1, r23
    1a28:	18 06       	cpc	r1, r24
    1a2a:	99 1f       	adc	r25, r25
    1a2c:	f1 cf       	rjmp	.-30     	; 0x1a10 <__fp_splitA+0xc>
    1a2e:	86 95       	lsr	r24
    1a30:	71 05       	cpc	r23, r1
    1a32:	61 05       	cpc	r22, r1
    1a34:	08 94       	sec
    1a36:	08 95       	ret

00001a38 <__fp_zero>:
    1a38:	e8 94       	clt

00001a3a <__fp_szero>:
    1a3a:	bb 27       	eor	r27, r27
    1a3c:	66 27       	eor	r22, r22
    1a3e:	77 27       	eor	r23, r23
    1a40:	cb 01       	movw	r24, r22
    1a42:	97 f9       	bld	r25, 7
    1a44:	08 95       	ret

00001a46 <__gesf2>:
    1a46:	0e 94 ae 0c 	call	0x195c	; 0x195c <__fp_cmp>
    1a4a:	08 f4       	brcc	.+2      	; 0x1a4e <__gesf2+0x8>
    1a4c:	8f ef       	ldi	r24, 0xFF	; 255
    1a4e:	08 95       	ret

00001a50 <__mulsf3>:
    1a50:	0e 94 3b 0d 	call	0x1a76	; 0x1a76 <__mulsf3x>
    1a54:	0c 94 e9 0c 	jmp	0x19d2	; 0x19d2 <__fp_round>
    1a58:	0e 94 db 0c 	call	0x19b6	; 0x19b6 <__fp_pscA>
    1a5c:	38 f0       	brcs	.+14     	; 0x1a6c <__mulsf3+0x1c>
    1a5e:	0e 94 e2 0c 	call	0x19c4	; 0x19c4 <__fp_pscB>
    1a62:	20 f0       	brcs	.+8      	; 0x1a6c <__mulsf3+0x1c>
    1a64:	95 23       	and	r25, r21
    1a66:	11 f0       	breq	.+4      	; 0x1a6c <__mulsf3+0x1c>
    1a68:	0c 94 d2 0c 	jmp	0x19a4	; 0x19a4 <__fp_inf>
    1a6c:	0c 94 d8 0c 	jmp	0x19b0	; 0x19b0 <__fp_nan>
    1a70:	11 24       	eor	r1, r1
    1a72:	0c 94 1d 0d 	jmp	0x1a3a	; 0x1a3a <__fp_szero>

00001a76 <__mulsf3x>:
    1a76:	0e 94 fa 0c 	call	0x19f4	; 0x19f4 <__fp_split3>
    1a7a:	70 f3       	brcs	.-36     	; 0x1a58 <__mulsf3+0x8>

00001a7c <__mulsf3_pse>:
    1a7c:	95 9f       	mul	r25, r21
    1a7e:	c1 f3       	breq	.-16     	; 0x1a70 <__mulsf3+0x20>
    1a80:	95 0f       	add	r25, r21
    1a82:	50 e0       	ldi	r21, 0x00	; 0
    1a84:	55 1f       	adc	r21, r21
    1a86:	62 9f       	mul	r22, r18
    1a88:	f0 01       	movw	r30, r0
    1a8a:	72 9f       	mul	r23, r18
    1a8c:	bb 27       	eor	r27, r27
    1a8e:	f0 0d       	add	r31, r0
    1a90:	b1 1d       	adc	r27, r1
    1a92:	63 9f       	mul	r22, r19
    1a94:	aa 27       	eor	r26, r26
    1a96:	f0 0d       	add	r31, r0
    1a98:	b1 1d       	adc	r27, r1
    1a9a:	aa 1f       	adc	r26, r26
    1a9c:	64 9f       	mul	r22, r20
    1a9e:	66 27       	eor	r22, r22
    1aa0:	b0 0d       	add	r27, r0
    1aa2:	a1 1d       	adc	r26, r1
    1aa4:	66 1f       	adc	r22, r22
    1aa6:	82 9f       	mul	r24, r18
    1aa8:	22 27       	eor	r18, r18
    1aaa:	b0 0d       	add	r27, r0
    1aac:	a1 1d       	adc	r26, r1
    1aae:	62 1f       	adc	r22, r18
    1ab0:	73 9f       	mul	r23, r19
    1ab2:	b0 0d       	add	r27, r0
    1ab4:	a1 1d       	adc	r26, r1
    1ab6:	62 1f       	adc	r22, r18
    1ab8:	83 9f       	mul	r24, r19
    1aba:	a0 0d       	add	r26, r0
    1abc:	61 1d       	adc	r22, r1
    1abe:	22 1f       	adc	r18, r18
    1ac0:	74 9f       	mul	r23, r20
    1ac2:	33 27       	eor	r19, r19
    1ac4:	a0 0d       	add	r26, r0
    1ac6:	61 1d       	adc	r22, r1
    1ac8:	23 1f       	adc	r18, r19
    1aca:	84 9f       	mul	r24, r20
    1acc:	60 0d       	add	r22, r0
    1ace:	21 1d       	adc	r18, r1
    1ad0:	82 2f       	mov	r24, r18
    1ad2:	76 2f       	mov	r23, r22
    1ad4:	6a 2f       	mov	r22, r26
    1ad6:	11 24       	eor	r1, r1
    1ad8:	9f 57       	subi	r25, 0x7F	; 127
    1ada:	50 40       	sbci	r21, 0x00	; 0
    1adc:	9a f0       	brmi	.+38     	; 0x1b04 <__mulsf3_pse+0x88>
    1ade:	f1 f0       	breq	.+60     	; 0x1b1c <__mulsf3_pse+0xa0>
    1ae0:	88 23       	and	r24, r24
    1ae2:	4a f0       	brmi	.+18     	; 0x1af6 <__mulsf3_pse+0x7a>
    1ae4:	ee 0f       	add	r30, r30
    1ae6:	ff 1f       	adc	r31, r31
    1ae8:	bb 1f       	adc	r27, r27
    1aea:	66 1f       	adc	r22, r22
    1aec:	77 1f       	adc	r23, r23
    1aee:	88 1f       	adc	r24, r24
    1af0:	91 50       	subi	r25, 0x01	; 1
    1af2:	50 40       	sbci	r21, 0x00	; 0
    1af4:	a9 f7       	brne	.-22     	; 0x1ae0 <__mulsf3_pse+0x64>
    1af6:	9e 3f       	cpi	r25, 0xFE	; 254
    1af8:	51 05       	cpc	r21, r1
    1afa:	80 f0       	brcs	.+32     	; 0x1b1c <__mulsf3_pse+0xa0>
    1afc:	0c 94 d2 0c 	jmp	0x19a4	; 0x19a4 <__fp_inf>
    1b00:	0c 94 1d 0d 	jmp	0x1a3a	; 0x1a3a <__fp_szero>
    1b04:	5f 3f       	cpi	r21, 0xFF	; 255
    1b06:	e4 f3       	brlt	.-8      	; 0x1b00 <__mulsf3_pse+0x84>
    1b08:	98 3e       	cpi	r25, 0xE8	; 232
    1b0a:	d4 f3       	brlt	.-12     	; 0x1b00 <__mulsf3_pse+0x84>
    1b0c:	86 95       	lsr	r24
    1b0e:	77 95       	ror	r23
    1b10:	67 95       	ror	r22
    1b12:	b7 95       	ror	r27
    1b14:	f7 95       	ror	r31
    1b16:	e7 95       	ror	r30
    1b18:	9f 5f       	subi	r25, 0xFF	; 255
    1b1a:	c1 f7       	brne	.-16     	; 0x1b0c <__mulsf3_pse+0x90>
    1b1c:	fe 2b       	or	r31, r30
    1b1e:	88 0f       	add	r24, r24
    1b20:	91 1d       	adc	r25, r1
    1b22:	96 95       	lsr	r25
    1b24:	87 95       	ror	r24
    1b26:	97 f9       	bld	r25, 7
    1b28:	08 95       	ret

00001b2a <__tablejump2__>:
    1b2a:	ee 0f       	add	r30, r30
    1b2c:	ff 1f       	adc	r31, r31
    1b2e:	05 90       	lpm	r0, Z+
    1b30:	f4 91       	lpm	r31, Z
    1b32:	e0 2d       	mov	r30, r0
    1b34:	09 94       	ijmp

00001b36 <__fixunssfsi>:
    1b36:	0e 94 02 0d 	call	0x1a04	; 0x1a04 <__fp_splitA>
    1b3a:	88 f0       	brcs	.+34     	; 0x1b5e <__fixunssfsi+0x28>
    1b3c:	9f 57       	subi	r25, 0x7F	; 127
    1b3e:	98 f0       	brcs	.+38     	; 0x1b66 <__fixunssfsi+0x30>
    1b40:	b9 2f       	mov	r27, r25
    1b42:	99 27       	eor	r25, r25
    1b44:	b7 51       	subi	r27, 0x17	; 23
    1b46:	b0 f0       	brcs	.+44     	; 0x1b74 <__fixunssfsi+0x3e>
    1b48:	e1 f0       	breq	.+56     	; 0x1b82 <__fixunssfsi+0x4c>
    1b4a:	66 0f       	add	r22, r22
    1b4c:	77 1f       	adc	r23, r23
    1b4e:	88 1f       	adc	r24, r24
    1b50:	99 1f       	adc	r25, r25
    1b52:	1a f0       	brmi	.+6      	; 0x1b5a <__fixunssfsi+0x24>
    1b54:	ba 95       	dec	r27
    1b56:	c9 f7       	brne	.-14     	; 0x1b4a <__fixunssfsi+0x14>
    1b58:	14 c0       	rjmp	.+40     	; 0x1b82 <__fixunssfsi+0x4c>
    1b5a:	b1 30       	cpi	r27, 0x01	; 1
    1b5c:	91 f0       	breq	.+36     	; 0x1b82 <__fixunssfsi+0x4c>
    1b5e:	0e 94 1c 0d 	call	0x1a38	; 0x1a38 <__fp_zero>
    1b62:	b1 e0       	ldi	r27, 0x01	; 1
    1b64:	08 95       	ret
    1b66:	0c 94 1c 0d 	jmp	0x1a38	; 0x1a38 <__fp_zero>
    1b6a:	67 2f       	mov	r22, r23
    1b6c:	78 2f       	mov	r23, r24
    1b6e:	88 27       	eor	r24, r24
    1b70:	b8 5f       	subi	r27, 0xF8	; 248
    1b72:	39 f0       	breq	.+14     	; 0x1b82 <__fixunssfsi+0x4c>
    1b74:	b9 3f       	cpi	r27, 0xF9	; 249
    1b76:	cc f3       	brlt	.-14     	; 0x1b6a <__fixunssfsi+0x34>
    1b78:	86 95       	lsr	r24
    1b7a:	77 95       	ror	r23
    1b7c:	67 95       	ror	r22
    1b7e:	b3 95       	inc	r27
    1b80:	d9 f7       	brne	.-10     	; 0x1b78 <__fixunssfsi+0x42>
    1b82:	3e f4       	brtc	.+14     	; 0x1b92 <__fixunssfsi+0x5c>
    1b84:	90 95       	com	r25
    1b86:	80 95       	com	r24
    1b88:	70 95       	com	r23
    1b8a:	61 95       	neg	r22
    1b8c:	7f 4f       	sbci	r23, 0xFF	; 255
    1b8e:	8f 4f       	sbci	r24, 0xFF	; 255
    1b90:	9f 4f       	sbci	r25, 0xFF	; 255
    1b92:	08 95       	ret

00001b94 <__unordsf2>:
    1b94:	0e 94 ae 0c 	call	0x195c	; 0x195c <__fp_cmp>
    1b98:	88 0b       	sbc	r24, r24
    1b9a:	99 0b       	sbc	r25, r25
    1b9c:	08 95       	ret

00001b9e <__udivmodsi4>:
    1b9e:	a1 e2       	ldi	r26, 0x21	; 33
    1ba0:	1a 2e       	mov	r1, r26
    1ba2:	aa 1b       	sub	r26, r26
    1ba4:	bb 1b       	sub	r27, r27
    1ba6:	fd 01       	movw	r30, r26
    1ba8:	0d c0       	rjmp	.+26     	; 0x1bc4 <__udivmodsi4_ep>

00001baa <__udivmodsi4_loop>:
    1baa:	aa 1f       	adc	r26, r26
    1bac:	bb 1f       	adc	r27, r27
    1bae:	ee 1f       	adc	r30, r30
    1bb0:	ff 1f       	adc	r31, r31
    1bb2:	a2 17       	cp	r26, r18
    1bb4:	b3 07       	cpc	r27, r19
    1bb6:	e4 07       	cpc	r30, r20
    1bb8:	f5 07       	cpc	r31, r21
    1bba:	20 f0       	brcs	.+8      	; 0x1bc4 <__udivmodsi4_ep>
    1bbc:	a2 1b       	sub	r26, r18
    1bbe:	b3 0b       	sbc	r27, r19
    1bc0:	e4 0b       	sbc	r30, r20
    1bc2:	f5 0b       	sbc	r31, r21

00001bc4 <__udivmodsi4_ep>:
    1bc4:	66 1f       	adc	r22, r22
    1bc6:	77 1f       	adc	r23, r23
    1bc8:	88 1f       	adc	r24, r24
    1bca:	99 1f       	adc	r25, r25
    1bcc:	1a 94       	dec	r1
    1bce:	69 f7       	brne	.-38     	; 0x1baa <__udivmodsi4_loop>
    1bd0:	60 95       	com	r22
    1bd2:	70 95       	com	r23
    1bd4:	80 95       	com	r24
    1bd6:	90 95       	com	r25
    1bd8:	9b 01       	movw	r18, r22
    1bda:	ac 01       	movw	r20, r24
    1bdc:	bd 01       	movw	r22, r26
    1bde:	cf 01       	movw	r24, r30
    1be0:	08 95       	ret

00001be2 <abort>:
    1be2:	81 e0       	ldi	r24, 0x01	; 1
    1be4:	90 e0       	ldi	r25, 0x00	; 0
    1be6:	f8 94       	cli
    1be8:	0c 94 f6 0d 	jmp	0x1bec	; 0x1bec <_exit>

00001bec <_exit>:
    1bec:	f8 94       	cli

00001bee <__stop_program>:
    1bee:	ff cf       	rjmp	.-2      	; 0x1bee <__stop_program>
